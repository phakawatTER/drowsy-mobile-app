{"ast":null,"code":"var _jsxFileName = \"/Users/phakawat/Desktop/drowsy-mobile-app/node_modules/react-native-dropdownalert/imageview.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { DEFAULT_IMAGE_DIMENSIONS } from \"./constants\";\nexport default class ImageView extends Component {\n  render() {\n    var {\n      source,\n      style,\n      imageProps\n    } = this.props;\n\n    if (source == null) {\n      return null;\n    }\n\n    var isRemote = typeof source === 'string';\n\n    if (!style['width']) {\n      style['width'] = DEFAULT_IMAGE_DIMENSIONS;\n    }\n\n    if (!style['height']) {\n      style['height'] = DEFAULT_IMAGE_DIMENSIONS;\n    }\n\n    var src = isRemote ? {\n      uri: source\n    } : source;\n    return React.createElement(Image, _extends({}, imageProps, {\n      style: style,\n      source: src,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      }\n    }));\n  }\n\n}\nImageView.propTypes = {\n  style: PropTypes.object,\n  source: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  imageProps: PropTypes.object\n};\nImageView.defaultProps = {\n  style: {\n    padding: 8,\n    width: DEFAULT_IMAGE_DIMENSIONS,\n    height: DEFAULT_IMAGE_DIMENSIONS,\n    alignSelf: 'center'\n  },\n  source: null,\n  imageProps: {}\n};","map":{"version":3,"sources":["/Users/phakawat/Desktop/drowsy-mobile-app/node_modules/react-native-dropdownalert/imageview.js"],"names":["React","Component","PropTypes","DEFAULT_IMAGE_DIMENSIONS","ImageView","render","source","style","imageProps","props","isRemote","src","uri","propTypes","object","oneOfType","string","number","defaultProps","padding","width","height","alignSelf"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,wBAAT;AAEA,eAAe,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAgB/CI,EAAAA,MAAM,GAAG;AACP,QAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,KAAV;AAAiBC,MAAAA;AAAjB,QAAgC,KAAKC,KAA3C;;AACA,QAAIH,MAAM,IAAI,IAAd,EAAoB;AAClB,aAAO,IAAP;AACD;;AACD,QAAMI,QAAQ,GAAG,OAAOJ,MAAP,KAAkB,QAAnC;;AACA,QAAI,CAACC,KAAK,CAAC,OAAD,CAAV,EAAqB;AACnBA,MAAAA,KAAK,CAAC,OAAD,CAAL,GAAiBJ,wBAAjB;AACD;;AACD,QAAI,CAACI,KAAK,CAAC,QAAD,CAAV,EAAsB;AACpBA,MAAAA,KAAK,CAAC,QAAD,CAAL,GAAkBJ,wBAAlB;AACD;;AACD,QAAMQ,GAAG,GAAGD,QAAQ,GAAG;AAAEE,MAAAA,GAAG,EAAEN;AAAP,KAAH,GAAqBA,MAAzC;AACA,WAAO,oBAAC,KAAD,eAAWE,UAAX;AAAuB,MAAA,KAAK,EAAED,KAA9B;AAAqC,MAAA,MAAM,EAAEI,GAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;;AA9B8C;AAA5BP,S,CACZS,S,GAAY;AACjBN,EAAAA,KAAK,EAAEL,SAAS,CAACY,MADA;AAEjBR,EAAAA,MAAM,EAAEJ,SAAS,CAACa,SAAV,CAAoB,CAACb,SAAS,CAACc,MAAX,EAAmBd,SAAS,CAACe,MAA7B,CAApB,CAFS;AAGjBT,EAAAA,UAAU,EAAEN,SAAS,CAACY;AAHL,C;AADAV,S,CAMZc,Y,GAAe;AACpBX,EAAAA,KAAK,EAAE;AACLY,IAAAA,OAAO,EAAE,CADJ;AAELC,IAAAA,KAAK,EAAEjB,wBAFF;AAGLkB,IAAAA,MAAM,EAAElB,wBAHH;AAILmB,IAAAA,SAAS,EAAE;AAJN,GADa;AAOpBhB,EAAAA,MAAM,EAAE,IAPY;AAQpBE,EAAAA,UAAU,EAAE;AARQ,C","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Image } from 'react-native';\nimport { DEFAULT_IMAGE_DIMENSIONS } from './constants';\n\nexport default class ImageView extends Component {\n  static propTypes = {\n    style: PropTypes.object,\n    source: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    imageProps: PropTypes.object,\n  };\n  static defaultProps = {\n    style: {\n      padding: 8,\n      width: DEFAULT_IMAGE_DIMENSIONS,\n      height: DEFAULT_IMAGE_DIMENSIONS,\n      alignSelf: 'center',\n    },\n    source: null,\n    imageProps: {},\n  };\n  render() {\n    const { source, style, imageProps } = this.props;\n    if (source == null) {\n      return null;\n    }\n    const isRemote = typeof source === 'string';\n    if (!style['width']) {\n      style['width'] = DEFAULT_IMAGE_DIMENSIONS;\n    }\n    if (!style['height']) {\n      style['height'] = DEFAULT_IMAGE_DIMENSIONS;\n    }\n    const src = isRemote ? { uri: source } : source;\n    return <Image {...imageProps} style={style} source={src} />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}