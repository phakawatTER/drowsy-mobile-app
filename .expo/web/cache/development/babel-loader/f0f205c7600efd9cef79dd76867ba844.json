{"ast":null,"code":"var _jsxFileName = \"/Users/phakawat/Desktop/drowsy-mobile-app/screens/Profile.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React from \"react\";\nimport { MaterialIcons, MaterialCommunityIcons } from '@expo/vector-icons';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Spinner from \"react-native-loading-spinner-overlay\";\nimport { Block, Text, theme } from \"galio-framework\";\nimport { Button } from \"../components\";\nimport { Images, argonTheme } from \"../constants\";\nimport { HeaderHeight } from \"../constants/utils\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { API_GET_NOTIFICATION_RECORD, SOCKET_ENDPOINT } from \"../link\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport firebase from \"firebase\";\nimport { config } from \"../firebase-config\";\nimport Toast, { DURATION } from 'react-native-easy-toast';\nimport Header from \"../components/Header\";\nimport LiveStream from \"../components/LiveStream\";\nvar {\n  width,\n  height\n} = Dimensions.get(\"screen\");\nvar thumbMeasure = (width - 48 - 32) / 3;\nvar listWidth = 0;\n\nclass Profile extends React.Component {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n\n    this.fadeOut = () => {\n      this.state.fadeOut.setValue(0);\n      Animated.timing(this.state.fadeOut, {\n        toValue: 1,\n        duration: 10000\n      }).start();\n    };\n\n    this.loadUserInfo = _asyncToGenerator(function* () {\n      var userInfo = yield AsyncStorage.getItem(\"userInfo\");\n      userInfo = JSON.parse(userInfo);\n      var {\n        uid\n      } = userInfo;\n\n      _this.setState({\n        userInfo\n      });\n\n      _this.notificationRef = firebase.database().ref().child(\"notification\").child(uid).limitToLast(1);\n\n      _this.notificationRef.on(\"child_added\", snapshot => {\n        var found = _this.state.notificationRecs.find(obj => {\n          return obj.timestamp === snapshot.val().timestamp;\n        });\n\n        if (!found) {\n          _this.state.notificationRecs = [snapshot.val(), ..._this.state.notificationRecs];\n\n          _this.setState({\n            notificationRecs: _this.state.notificationRecs,\n            modalVisible: true\n          });\n        }\n      });\n    });\n\n    this.searchEvent = query => {\n      this.setState({\n        searchQuery: query\n      });\n    };\n\n    this.showModal = () => {\n      this.modalRef.current.setModalVisible(true);\n    };\n\n    this.updateNotificationStatus = pushID => {\n      if (pushID === undefined) return;\n      var {\n        userInfo,\n        notificationRecs\n      } = this.state;\n      var {\n        uid\n      } = userInfo;\n      var notification = firebase.database().ref().child(\"notification/\".concat(uid, \"/\").concat(pushID));\n      notification.update({\n        read: true\n      }, err => {\n        if (err) return console.log(\"Cannot update notification status\");else {\n          notificationRecs = notificationRecs.map((obj, index) => {\n            var {\n              id\n            } = obj;\n            if (id == pushID) notificationRecs[index].read = true;\n            return obj;\n          });\n        }\n      });\n    };\n\n    this.getNotificationRecord = () => {\n      this.setState({\n        isLoading: true\n      });\n      AsyncStorage.getItem(\"userInfo\").then(userInfo => {\n        var {\n          token,\n          uid,\n          from\n        } = JSON.parse(userInfo);\n        var payload = {\n          user_id: uid,\n          from: from\n        };\n        axios.create({\n          headers: {\n            \"Content-Type\": \"application/json\",\n            token: token\n          }\n        }).post(API_GET_NOTIFICATION_RECORD, payload).then(response => {\n          var {\n            code,\n            result\n          } = response.data;\n\n          if (code === 200) {\n            this.setState({\n              notificationRecs: result,\n              isLoading: false\n            }, () => {});\n          } else {}\n        }).catch(err => {\n          this.setState({\n            isLoading: false\n          });\n          console.log(err);\n        });\n      }).catch(err => {\n        this.setState({\n          isLoading: false\n        });\n        console.log(err);\n      });\n    };\n\n    this.onScrollEnd = e => {\n      var contentOffset = e.nativeEvent.contentOffset;\n      var viewSize = e.nativeEvent.layoutMeasurement;\n      var pageNum = Math.floor(contentOffset.x / viewSize.width);\n      this.setState({\n        listIndex: pageNum\n      });\n    };\n\n    this.updateUserInfo = (fname, lname, profile) => {\n      var {\n        userInfo\n      } = this.state;\n      userInfo.fname = fname, userInfo.lname = lname;\n      userInfo.profile = profile;\n      this.setState({\n        userInfo\n      }, () => {});\n    };\n\n    this.renderRecords = () => {\n      var {\n        notificationRecs,\n        searchQuery\n      } = this.state;\n      searchQuery = searchQuery.toLowerCase();\n      var tmp_notificationRecs = [...notificationRecs];\n      tmp_notificationRecs = tmp_notificationRecs.filter(data => {\n        var {\n          event,\n          timestamp\n        } = data;\n        timestamp = moment(timestamp).format(\"DD-MM-YYYY  hh:mm:ss a\").toString();\n        return timestamp.includes(searchQuery) || event.toLowerCase().includes(searchQuery);\n      });\n      var slides = [];\n      var count = 0;\n\n      while (tmp_notificationRecs.length !== 0) {\n        var group = tmp_notificationRecs.slice(0, this.state.displayPerPage);\n        tmp_notificationRecs.splice(0, this.state.displayPerPage);\n        slides[count] = group;\n        count = count + 1;\n      }\n\n      return React.createElement(Block, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        }\n      }, React.createElement(FlatList, {\n        pagingEnabled: true,\n        ref: this.listRef,\n        showsHorizontalScrollIndicator: false,\n        onMomentumScrollEnd: this.onScrollEnd,\n        horizontal: true,\n        data: slides,\n        renderItem: this._renderItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        }\n      }), React.createElement(Block, {\n        middle: true,\n        style: {\n          flexDirection: \"row\",\n          paddingTop: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        }\n      }, slides.map((el, index) => {\n        return React.createElement(View, {\n          style: _objectSpread({}, styles.pagination, {}, index === this.state.listIndex ? styles.activeDotStyle : styles.dotStyle),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269\n          }\n        });\n      })));\n    };\n\n    this._renderItem = (_ref2) => {\n      var {\n        item,\n        dimensions\n      } = _ref2;\n      return React.createElement(Block, {\n        style: {\n          width: listWidth\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        }\n      }, item.map((obj, key) => {\n        var {\n          timestamp,\n          event,\n          direction,\n          read,\n          id,\n          speed\n        } = obj;\n        var img = Images.iconEvent[event];\n        if (img == undefined) img = Images.iconEvent[\"Fatigue driving\"];\n        var {\n          timestamp: latestTimestamp\n        } = this.state.notificationRecs[0];\n        datetime = moment(timestamp).format(\"DD-MM-YYYY  hh:mm:ss a\");\n        return React.createElement(Animated.View, {\n          style: _objectSpread({\n            marginLeft: 0,\n            paddingHorizontal: 0,\n            paddingVertical: 0,\n            borderRadius: 5\n          }, read === false ? {\n            backgroundColor: \"#20232a\"\n          } : {}),\n          key: \"event-\".concat(key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          }\n        }, React.createElement(Block, {\n          left: true,\n          space: \"evenly\",\n          style: {\n            paddingVertical: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301\n          }\n        }, React.createElement(Block, {\n          row: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308\n          }\n        }, React.createElement(Image, {\n          source: img,\n          style: {\n            width: 25,\n            height: 25\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309\n          }\n        }), React.createElement(Text, {\n          bold: true,\n          style: {\n            color: read == false ? \"#fff\" : \"#000\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310\n          }\n        }, \" \", event)), React.createElement(Block, {\n          left: true,\n          row: true,\n          space: \"evenly\",\n          style: {\n            width: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312\n          }\n        }, React.createElement(Block, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: read == false ? \"#fff\" : \"#000\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319\n          }\n        }, \"Occured date:\", \" \", datetime)), React.createElement(Block, {\n          space: \"evenly\",\n          middle: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324\n          }\n        }, React.createElement(Button, {\n          onPress: () => {\n            this.updateNotificationStatus(id);\n            this.props.navigation.navigate(\"Map\", {\n              handle: \"display\",\n              speed,\n              time: datetime,\n              latlng: obj.latlng,\n              back: \"Profile\",\n              event: event\n            });\n          },\n          small: true,\n          style: {\n            backgroundColor: read == false ? argonTheme.COLORS.INPUT_SUCCESS : \"#20232a\",\n            paddingHorizontal: 0,\n            paddingVertical: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325\n          }\n        }, React.createElement(Text, {\n          color: \"white\",\n          bold: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342\n          }\n        }, React.createElement(MaterialCommunityIcons, {\n          name: \"map-marker-radius\",\n          size: 12,\n          color: \"white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343\n          }\n        }), \" \", \"Detail\"))))), React.createElement(Block, {\n          style: styles.divider,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 355\n          }\n        }));\n      }));\n    };\n\n    this.state = {\n      isLive: false,\n      searchQuery: \"\",\n      fadeOut: new Animated.Value(0),\n      modalVisible: false,\n      shouldFetch: true,\n      headerHeight: 0,\n      slides: [],\n      notificationRecs: [],\n      isLoading: true,\n      displayPerPage: 15,\n      currentUser: \"\",\n      listIndex: 0,\n      userInfo: {\n        fname: \"\",\n        lname: \"\",\n        email: \"\"\n      }\n    };\n    this.s = null;\n    this.modalRef = React.createRef();\n    this.listRef = React.createRef();\n    this.toastRef = React.createRef();\n    this.livestreamRef = React.createRef();\n\n    try {\n      firebase.initializeApp(config);\n    } catch (err) {}\n  }\n\n  setIsLive(isLive) {\n    this.setState({\n      isLive\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    var headerHeight = nextProps.navigation.getParam(\"headerHeight\");\n\n    if (this.state.headerHeight !== headerHeight) {\n      this.setState({\n        headerHeight: headerHeight\n      });\n    }\n  }\n\n  componentWillMount() {\n    this.getNotificationRecord();\n    var {\n      navigation\n    } = this.props;\n    this.props.navigation.setParams({\n      profileSearch: this.searchEvent\n    });\n    this.focusListener = navigation.addListener('didFocus', () => {\n      var {\n        notificationRecs\n      } = this.state;\n      this.loadUserInfo();\n    });\n    this.leaveListener = navigation.addListener('didBlur', () => {\n      this.setState({\n        searchQuery: \"\"\n      });\n    });\n\n    try {\n      this.notificationRef.off(\"child_added\");\n    } catch (err) {}\n  }\n\n  componentDidUpdate(nextProps, nextState) {\n    if (this.state.notificationRecs.length !== 0 && this.state.modalVisible) {\n      if (nextState.notificationRecs.length !== this.state.notificationRecs) {\n        this.fadeOut();\n      }\n    }\n  }\n\n  render() {\n    var {\n      fname,\n      lname,\n      profile,\n      regisdate\n    } = this.state.userInfo;\n    var {\n      stream_image\n    } = this.state;\n    var {\n      isLive\n    } = this.props.screenProps;\n    return React.createElement(React.Fragment, null, React.createElement(Block, {\n      flex: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      }\n    }, React.createElement(Spinner, {\n      visible: this.state.isLoading,\n      textStyle: styles.spinnerTextStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      }\n    }), React.createElement(ScrollView, {\n      vertical: true,\n      showsVerticalScrollIndicator: false,\n      style: {\n        width,\n        marginTop: Platform.OS === \"ios\" ? this.state.headerHeight : 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      }\n    }, React.createElement(Block, {\n      flex: true,\n      style: _objectSpread({}, styles.profileCard),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      }\n    }, React.createElement(Block, {\n      middle: true,\n      style: styles.avatarContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      }\n    }, React.createElement(Image, {\n      source: profile ? {\n        uri: profile\n      } : Images.defaultAvatar,\n      style: styles.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      }\n    })), React.createElement(Block, {\n      style: styles.info,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      }\n    }, React.createElement(Block, {\n      middle: true,\n      row: true,\n      space: \"evenly\",\n      style: {\n        marginTop: 20,\n        paddingBottom: 24\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      }\n    }, React.createElement(Button, {\n      onPress: () => {\n        this.props.navigation.navigate(\"EditProfile\", {\n          userInfo: this.state.userInfo,\n          updateUserInfo: this.updateUserInfo.bind(this)\n        });\n      },\n      small: true,\n      style: {\n        backgroundColor: argonTheme.COLORS.INPUT_SUCCESS\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      }\n    }, React.createElement(Text, {\n      color: \"white\",\n      bold: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      }\n    }, React.createElement(MaterialIcons, {\n      name: \"settings\",\n      size: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      }\n    }), \" \", \"Edit\")), React.createElement(Button, {\n      small: true,\n      style: {\n        backgroundColor: argonTheme.COLORS.DEFAULT\n      },\n      onPress: () => {\n        this.props.navigation.navigate(\"Map\", {\n          handle: \"tracking\",\n          back: \"Profile\"\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      }\n    }, React.createElement(Text, {\n      color: \"white\",\n      bold: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431\n      }\n    }, React.createElement(MaterialIcons, {\n      name: \"map\",\n      size: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432\n      }\n    }), \" \", \"Track\")), React.createElement(Button, {\n      small: true,\n      style: {\n        backgroundColor: isLive ? \"crimson\" : \"grey\"\n      },\n      onPress: () => {\n        this.props.screenProps.setShowLive(true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      }\n    }, React.createElement(Text, {\n      color: \"white\",\n      bold: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      }\n    }, React.createElement(MaterialIcons, {\n      name: \"live-tv\",\n      size: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      }\n    }), \" \", \"Live\")))), React.createElement(Block, {\n      flex: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      }\n    }, React.createElement(Block, {\n      middle: true,\n      style: styles.nameInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      }\n    }, React.createElement(Text, {\n      bold: true,\n      size: 28,\n      color: \"#32325D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458\n      }\n    }, fname, \" \", lname)), React.createElement(Block, {\n      middle: true,\n      style: styles.nameInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      }\n    }, React.createElement(Text, {\n      size: 15,\n      color: \"#32325D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      }\n    }, React.createElement(Text, {\n      bold: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      }\n    }, \"Registered date:\"), \" \", moment(regisdate).format(\"DD-MM-YYYY hh:mm:ss a\"))), React.createElement(Block, {\n      middle: true,\n      style: {\n        marginTop: 30,\n        marginBottom: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      }\n    }, React.createElement(Block, {\n      style: styles.divider,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468\n      }\n    })), React.createElement(Block, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      }\n    }, React.createElement(Text, {\n      bold: true,\n      size: 28,\n      color: \"#32325D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      }\n    }, \"Event Records\"), this.state.searchQuery === \"\" ? React.createElement(Text, {\n      size: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476\n      }\n    }, \"total\", React.createElement(Text, {\n      color: argonTheme.COLORS.WARNING,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      }\n    }, \" \", this.state.notificationRecs.length, \" \"), \"record(s)\") : React.createElement(Text, {\n      size: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      }\n    }, \"searching for \\\"\", React.createElement(Text, {\n      color: argonTheme.COLORS.WARNING,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483\n      }\n    }, \" \", this.state.searchQuery, \" \"), \"\\\"\"), React.createElement(Block, {\n      style: {\n        paddingTop: 20,\n        paddingBottom: 30\n      },\n      onLayout: event => {\n        var {\n          x,\n          y,\n          width,\n          height\n        } = event.nativeEvent.layout;\n        listWidth = width;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      }\n    }, this.state.isLoading ? null : this.renderRecords())))))));\n  }\n\n}\n\nvar styles = StyleSheet.create({\n  liveLogo: {\n    backgroundColor: \"crimson\",\n    position: \"absolute\",\n    top: 10,\n    left: 2.5,\n    padding: 5,\n    borderRadius: 2.5\n  },\n  dimmer: {\n    backgroundColor: \"rgba(0,0,0,0.5)\",\n    minWidth: width,\n    minHeight: height,\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  activeDotStyle: {\n    backgroundColor: 'rgba(0, 0, 0, .7)'\n  },\n  dotStyle: {\n    backgroundColor: 'rgba(0, 0, 0, .2)'\n  },\n  pagination: {\n    marginHorizontal: 1.25,\n    borderRadius: 5,\n    backgroundColor: \"black\",\n    width: 10,\n    height: 10,\n    paddingHorizontal: 0,\n    paddingVertical: 0\n  },\n  mainContent: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'space-around'\n  },\n  image: {\n    width: 320,\n    height: 320\n  },\n  text: {\n    color: 'rgba(255, 255, 255, 0.8)',\n    backgroundColor: 'transparent',\n    textAlign: 'center',\n    paddingHorizontal: 16\n  },\n  title: {\n    fontSize: 22,\n    color: 'white',\n    backgroundColor: 'transparent',\n    textAlign: 'center',\n    marginBottom: 16\n  },\n  recordContainer: {\n    paddingTop: 20\n  },\n  profile: {\n    marginTop: Platform.OS === \"android\" ? -HeaderHeight : 0,\n    flex: 1\n  },\n  profileContainer: {\n    width: width,\n    height: height,\n    padding: 0,\n    zIndex: 1\n  },\n  profileBackground: {\n    width: width,\n    height: height / 2\n  },\n  profileCard: {\n    padding: theme.SIZES.BASE,\n    marginHorizontal: theme.SIZES.BASE,\n    marginTop: 80,\n    borderTopLeftRadius: 6,\n    borderTopRightRadius: 6,\n    backgroundColor: theme.COLORS.WHITE,\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowRadius: 8,\n    shadowOpacity: 0.2,\n    zIndex: 2\n  },\n  info: {\n    paddingHorizontal: 40\n  },\n  avatarContainer: {\n    position: \"relative\",\n    marginTop: -80\n  },\n  avatar: {\n    width: 124,\n    height: 124,\n    borderRadius: 62,\n    borderWidth: 1\n  },\n  nameInfo: {\n    marginTop: 35\n  },\n  divider: {\n    width: \"100%\",\n    borderWidth: 1,\n    borderColor: \"#E9ECEF\"\n  },\n  thumb: {\n    borderRadius: 4,\n    marginVertical: 4,\n    alignSelf: \"center\",\n    width: thumbMeasure,\n    height: thumbMeasure\n  }\n});\nexport default Profile;","map":{"version":3,"sources":["/Users/phakawat/Desktop/drowsy-mobile-app/screens/Profile.js"],"names":["React","MaterialIcons","MaterialCommunityIcons","Spinner","Block","Text","theme","Button","Images","argonTheme","HeaderHeight","API_GET_NOTIFICATION_RECORD","SOCKET_ENDPOINT","axios","moment","firebase","config","Toast","DURATION","Header","LiveStream","width","height","Dimensions","get","thumbMeasure","listWidth","Profile","Component","constructor","props","fadeOut","state","setValue","Animated","timing","toValue","duration","start","loadUserInfo","userInfo","AsyncStorage","getItem","JSON","parse","uid","setState","notificationRef","database","ref","child","limitToLast","on","snapshot","found","notificationRecs","find","obj","timestamp","val","modalVisible","searchEvent","query","searchQuery","showModal","modalRef","current","setModalVisible","updateNotificationStatus","pushID","undefined","notification","update","read","err","console","log","map","index","id","getNotificationRecord","isLoading","then","token","from","payload","user_id","create","headers","post","response","code","result","data","catch","onScrollEnd","e","contentOffset","nativeEvent","viewSize","layoutMeasurement","pageNum","Math","floor","x","listIndex","updateUserInfo","fname","lname","profile","renderRecords","toLowerCase","tmp_notificationRecs","filter","event","format","toString","includes","slides","count","length","group","slice","displayPerPage","splice","listRef","_renderItem","flexDirection","paddingTop","el","styles","pagination","activeDotStyle","dotStyle","item","dimensions","key","direction","speed","img","iconEvent","latestTimestamp","datetime","marginLeft","paddingHorizontal","paddingVertical","borderRadius","backgroundColor","color","navigation","navigate","handle","time","latlng","back","COLORS","INPUT_SUCCESS","divider","isLive","Value","shouldFetch","headerHeight","currentUser","email","s","createRef","toastRef","livestreamRef","initializeApp","setIsLive","componentWillReceiveProps","nextProps","getParam","componentWillMount","setParams","profileSearch","focusListener","addListener","leaveListener","off","componentDidUpdate","nextState","render","regisdate","stream_image","screenProps","spinnerTextStyle","marginTop","Platform","OS","profileCard","avatarContainer","uri","defaultAvatar","avatar","info","paddingBottom","bind","DEFAULT","setShowLive","nameInfo","marginBottom","WARNING","y","layout","StyleSheet","liveLogo","position","top","left","padding","dimmer","minWidth","minHeight","flex","justifyContent","alignItems","marginHorizontal","mainContent","image","text","textAlign","title","fontSize","recordContainer","profileContainer","zIndex","profileBackground","SIZES","BASE","borderTopLeftRadius","borderTopRightRadius","WHITE","shadowColor","shadowOffset","shadowRadius","shadowOpacity","borderWidth","borderColor","thumb","marginVertical","alignSelf"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { MaterialIcons, MaterialCommunityIcons } from '@expo/vector-icons';\nimport {\n  Animated,\n  StyleSheet,\n  Dimensions,\n  ScrollView,\n  Image,\n  Platform,\n  View,\n  Modal,\n  FlatList,\n  TouchableHighlight\n\n} from \"react-native\";\nimport Spinner from \"react-native-loading-spinner-overlay\"\nimport { Block, Text, theme } from \"galio-framework\";\nimport { Button } from \"../components\";\nimport { Images, argonTheme } from \"../constants\";\nimport { HeaderHeight } from \"../constants/utils\";\nimport { AsyncStorage } from \"react-native\";\nimport { API_GET_NOTIFICATION_RECORD, SOCKET_ENDPOINT } from \"../link\"\nimport axios from \"axios\"\nimport moment from \"moment\"\nimport firebase from \"firebase\"\nimport { config } from \"../firebase-config\"\nimport Toast, { DURATION } from 'react-native-easy-toast'\nimport Header from \"../components/Header\"\nimport LiveStream from \"../components/LiveStream\";\n\nconst { width, height } = Dimensions.get(\"screen\");\nconst thumbMeasure = (width - 48 - 32) / 3;\nvar listWidth = 0\n\nclass Profile extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLive: false,\n      searchQuery: \"\",\n      fadeOut: new Animated.Value(0),\n      modalVisible: false,\n      shouldFetch: true,\n      headerHeight: 0,\n      slides: [],\n      notificationRecs: [],\n      isLoading: true,\n      displayPerPage: 15,\n      currentUser: \"\",\n      listIndex: 0,\n      userInfo: {\n        fname: \"\",\n        lname: \"\",\n        email: \"\"\n      }\n    }\n\n    this.s = null\n    this.modalRef = React.createRef()\n    this.listRef = React.createRef()\n    this.toastRef = React.createRef()\n    this.livestreamRef = React.createRef()\n    try {\n      firebase.initializeApp(config)\n    } catch (err) { }\n\n  }\n\n  fadeOut = () => {\n    this.state.fadeOut.setValue(0)\n    Animated.timing(\n      this.state.fadeOut,\n      {\n        toValue: 1,\n        duration: 10000\n      }\n    ).start()\n\n  }\n\n  loadUserInfo = async () => {\n    let userInfo = await AsyncStorage.getItem(\"userInfo\")\n    userInfo = JSON.parse(userInfo)\n    let { uid } = userInfo\n    this.setState({ userInfo })\n    this.notificationRef = firebase.database().ref().child(\"notification\").child(uid).limitToLast(1)\n    // child_added listener\n    this.notificationRef.on(\"child_added\", (snapshot) => {\n      let found = this.state.notificationRecs.find(obj => {\n        return obj.timestamp === snapshot.val().timestamp\n      })\n      // if new child added to the collection so update it \n      if (!found) {\n        this.state.notificationRecs = [snapshot.val(), ... this.state.notificationRecs]\n        this.setState({\n          notificationRecs: this.state.notificationRecs,\n          modalVisible: true\n        })\n\n      }\n    })\n  }\n\n  setIsLive(isLive) {\n    this.setState({ isLive })\n  }\n\n  componentWillReceiveProps(nextProps) {\n    let headerHeight = nextProps.navigation.getParam(\"headerHeight\")\n    // recieve the height of header \n    if (this.state.headerHeight !== headerHeight) {\n      this.setState({ headerHeight: headerHeight })\n    }\n    \n  }\n\n  componentWillMount() {\n    this.getNotificationRecord()\n    const { navigation } = this.props;\n    this.props.navigation.setParams({\n      profileSearch: this.searchEvent\n    })\n    this.focusListener = navigation.addListener('didFocus', () => {\n      const { notificationRecs } = this.state\n      this.loadUserInfo()\n    });\n    this.leaveListener = navigation.addListener('didBlur', () => {\n      this.setState({ searchQuery: \"\" })\n    })\n    try {\n      this.notificationRef.off(\"child_added\")\n    } catch (err) { }\n  }\n\n  componentDidUpdate(nextProps, nextState) {\n\n    // IF NEW EVENT ADDED INTO THE RECORD SO ANIMATE LATEST BLOCK BACKGROUND\n    if (this.state.notificationRecs.length !== 0 && this.state.modalVisible) {\n      if (nextState.notificationRecs.length !== this.state.notificationRecs) {\n        this.fadeOut()\n      }\n    }\n  }\n\n\n  searchEvent = (query) => {\n    this.setState({ searchQuery: query })\n\n  }\n\n  showModal = () => {\n    this.modalRef.current.setModalVisible(true)\n  }\n\n  updateNotificationStatus = (pushID) => {\n    if (pushID === undefined) return\n    let { userInfo, notificationRecs } = this.state\n    let { uid } = userInfo\n    let notification = firebase.database().ref().child(`notification/${uid}/${pushID}`)\n    notification.update({\n      read: true\n    }, (err) => {\n      if (err) return console.log(\"Cannot update notification status\")\n      else {\n        notificationRecs = notificationRecs.map((obj, index) => {\n          let { id } = obj\n          if (id == pushID) notificationRecs[index].read = true\n\n          return obj\n        })\n      }\n    })\n  }\n\n  getNotificationRecord = () => {\n    this.setState({\n      isLoading: true,\n    })\n    AsyncStorage.getItem(\"userInfo\").then(userInfo => {\n      let { token, uid, from } = JSON.parse(userInfo)\n      let payload = {\n        user_id: uid,\n        from: from\n      }\n      axios\n        .create({\n          headers: { \"Content-Type\": \"application/json\", token: token }\n        })\n        .post(API_GET_NOTIFICATION_RECORD, payload)\n        .then(response => {\n          let { code, result } = response.data\n          if (code === 200) {\n            this.setState({\n              notificationRecs: result,\n              isLoading: false\n            }, () => {\n            })\n          } else {\n            // console.log(code)\n          }\n        }).catch(err => {\n          this.setState({ isLoading: false })\n          console.log(err)\n        })\n    }).catch(err => {\n      this.setState({ isLoading: false })\n      console.log(err)\n    })\n  }\n\n  onScrollEnd = (e) => {\n    let contentOffset = e.nativeEvent.contentOffset;\n    let viewSize = e.nativeEvent.layoutMeasurement;\n\n    // Divide the horizontal offset by the width of the view to see which page is visible\n    let pageNum = Math.floor(contentOffset.x / viewSize.width);\n    this.setState({\n      listIndex: pageNum\n    })\n  }\n\n  updateUserInfo = (fname, lname, profile) => {\n    // alert(\"Updated\")\n    let { userInfo } = this.state\n    userInfo.fname = fname,\n      userInfo.lname = lname\n    userInfo.profile = profile\n    this.setState({ userInfo }, () => {\n      // console.log(this.state.userInfo)\n    })\n  }\n\n\n  renderRecords = () => {\n    let { notificationRecs, searchQuery } = this.state\n    searchQuery = searchQuery.toLowerCase()\n    let tmp_notificationRecs = [...notificationRecs]\n    tmp_notificationRecs = tmp_notificationRecs.filter(data => {\n      let { event, timestamp } = data\n      timestamp = moment(timestamp).format(\"DD-MM-YYYY  hh:mm:ss a\").toString()\n      return timestamp.includes(searchQuery) || event.toLowerCase().includes(searchQuery)\n    })\n    let slides = []\n    var count = 0\n    while (tmp_notificationRecs.length !== 0) {\n      let group = tmp_notificationRecs.slice(0, this.state.displayPerPage)\n      tmp_notificationRecs.splice(0, this.state.displayPerPage)\n      slides[count] = group\n      count = count + 1\n    }\n\n\n    return (\n      <Block>\n        <FlatList\n          pagingEnabled={true}\n          ref={this.listRef}\n          showsHorizontalScrollIndicator={false}\n          onMomentumScrollEnd={this.onScrollEnd}\n          horizontal\n          data={slides}\n          renderItem={this._renderItem}\n        />\n        <Block middle style={{ flexDirection: \"row\", paddingTop: 25 }}>\n          {\n            slides.map((el, index) => {\n              return (\n                <View style={{ ...styles.pagination, ...index === this.state.listIndex ? styles.activeDotStyle : styles.dotStyle }}></View>\n              )\n            })\n          }\n        </Block>\n      </Block >\n    )\n  }\n\n  _renderItem = ({ item, dimensions }) => {\n\n    return (\n      <Block style={{ width: listWidth }} >\n        {\n          item.map((obj, key) => {\n            let { timestamp, event, direction, read, id, speed } = obj\n\n            let img = Images.iconEvent[event]\n            if (img == undefined) img = Images.iconEvent[\"Fatigue driving\"]\n            let { timestamp: latestTimestamp } = this.state.notificationRecs[0] // TIMESTAMP OF THE LATEST EVENT\n            datetime = moment(timestamp).format(\"DD-MM-YYYY  hh:mm:ss a\")\n            return (\n              <Animated.View\n                style={{\n                  marginLeft: 0,\n                  paddingHorizontal: 0,\n                  paddingVertical: 0,\n                  borderRadius: 5,\n                  ...read === false ? { backgroundColor: \"#20232a\" } : {}\n\n                }}\n                key={`event-${key}`} >\n                <Block\n                  left\n                  space=\"evenly\"\n                  style={{\n                    paddingVertical: 10,\n                  }}\n                >\n                  <Block row>\n                    <Image source={img} style={{ width: 25, height: 25 }} />\n                    <Text bold style={{ color: read == false ? \"#fff\" : \"#000\" }}> {event}</Text>\n                  </Block>\n                  <Block\n                    left\n                    row\n                    space=\"evenly\"\n                    style={{ width: \"100%\" }}\n                  >\n                    <Block>\n                      <Text style={{ color: read == false ? \"#fff\" : \"#000\" }}>\n                        Occured date:{\" \"}\n                        {datetime}\n                      </Text>\n                    </Block>\n                    <Block space=\"evenly\" middle>\n                      <Button\n                        onPress={() => {\n                          // this.updateNotificationStatus()\n                          // Navigate to map and send values\n                          this.updateNotificationStatus(id)\n                          this.props.navigation.navigate(\"Map\", {\n                            handle: \"display\",\n                            speed,\n                            time: datetime,\n                            latlng: obj.latlng, // latitude and longtitude of drowsiness\n                            back: \"Profile\", // location when press back\n                            event: event\n                          })\n                        }}\n                        small\n                        style={{ backgroundColor: read == false ? argonTheme.COLORS.INPUT_SUCCESS : \"#20232a\", paddingHorizontal: 0, paddingVertical: 0 }}\n                      >\n                        <Text color={\"white\"} bold>\n                          <MaterialCommunityIcons\n                            name=\"map-marker-radius\"\n                            size={12}\n                            color=\"white\"\n                          />\n                          {\" \"}\n                          Detail\n                        </Text>\n                      </Button>\n                    </Block>\n                  </Block>\n                </Block>\n                <Block style={styles.divider} />\n              </Animated.View>\n            )\n          })\n        }\n      </Block >\n    )\n  };\n\n\n  render() {\n    const { fname, lname, profile, regisdate } = this.state.userInfo\n    const { stream_image } = this.state\n    const { isLive } = this.props.screenProps\n\n\n    return (\n      <>\n        {/* <LiveStream\n          ref={this.livestreamRef}\n\n          setIsLive={this.setIsLive.bind(this)}\n        /> */}\n        <Block flex >\n          <Spinner\n            visible={this.state.isLoading}\n            textStyle={styles.spinnerTextStyle}\n          />\n          <ScrollView\n            vertical={true}\n            showsVerticalScrollIndicator={false}\n            style={{\n              width,\n              marginTop: Platform.OS === \"ios\" ? this.state.headerHeight : 0,\n            }}\n          >\n            <Block flex style={{ ...styles.profileCard }}>\n              <Block middle style={styles.avatarContainer}>\n                <Image\n                  source={profile ? { uri: profile } : Images.defaultAvatar}\n                  style={styles.avatar}\n                />\n              </Block>\n              <Block style={styles.info}>\n                <Block\n                  middle\n                  row\n                  space=\"evenly\"\n                  style={{ marginTop: 20, paddingBottom: 24 }}\n                >\n                  <Button\n                    onPress={() => {\n                      this.props.navigation.navigate(\"EditProfile\", {\n                        userInfo: this.state.userInfo,\n                        updateUserInfo: this.updateUserInfo.bind(this)\n                      })\n                    }}\n                    small\n                    style={{ backgroundColor: argonTheme.COLORS.INPUT_SUCCESS }}\n                  >\n                    <Text color=\"white\" bold>\n                      <MaterialIcons name={\"settings\"} size={12} />\n                      {\" \"}\n                      Edit\n                  </Text>\n                  </Button>\n                  <Button\n                    small\n                    style={{ backgroundColor: argonTheme.COLORS.DEFAULT }}\n                    onPress={() => {\n                      this.props.navigation.navigate(\"Map\", {\n                        handle: \"tracking\",\n                        back: \"Profile\"\n                      })\n                    }}\n                  >\n                    <Text color=\"white\" bold>\n                      <MaterialIcons name={\"map\"} size={12} />\n                      {\" \"}\n                      Track\n                  </Text>\n                  </Button>\n                  <Button\n                    small\n                    style={{ backgroundColor: isLive ? \"crimson\" : \"grey\" }}\n                    onPress={() => {\n                      // if (!isLive) return\n                      this.props.screenProps.setShowLive(true)\n                    }}\n                  >\n                    <Text color=\"white\" bold>\n                      <MaterialIcons name={\"live-tv\"} size={12} />\n                      {\" \"}\n                      Live\n                  </Text>\n                  </Button>\n                </Block>\n\n\n              </Block>\n\n              <Block flex>\n                <Block middle style={styles.nameInfo}>\n                  <Text bold size={28} color=\"#32325D\">\n                    {fname} {lname}\n                  </Text>\n                </Block>\n                <Block middle style={styles.nameInfo}>\n                  <Text size={15} color=\"#32325D\">\n                    <Text bold>Registered date:</Text> {moment(regisdate).format(\"DD-MM-YYYY hh:mm:ss a\")}\n                  </Text>\n                </Block>\n                <Block middle style={{ marginTop: 30, marginBottom: 16 }}>\n                  <Block style={styles.divider} />\n                </Block>\n                <Block>\n                  <Text bold size={28} color=\"#32325D\">\n                    Event Records\n                    </Text>\n                  {\n                    this.state.searchQuery === \"\" ?\n                      <Text size={20}>\n                        total\n                    <Text color={argonTheme.COLORS.WARNING}> {this.state.notificationRecs.length} </Text>\n                        record(s)\n                  </Text> :\n                      <Text size={20}>\n                        searching for\n                    \"<Text color={argonTheme.COLORS.WARNING}> {this.state.searchQuery} </Text>\"\n                  </Text>\n                  }\n\n                  <Block style={{ paddingTop: 20, paddingBottom: 30 }}\n                    onLayout={(event) => {\n                      var { x, y, width, height } = event.nativeEvent.layout;\n                      listWidth = width\n                    }}\n                  >\n                    {\n                      this.state.isLoading ? null :\n                        this.renderRecords()\n                    }\n                  </Block>\n                </Block>\n              </Block>\n            </Block>\n          </ScrollView>\n        </Block >\n      </>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  liveLogo: {\n    backgroundColor: \"crimson\",\n    position: \"absolute\",\n    top: 10,\n    left: 2.5,\n    padding: 5,\n    borderRadius: 2.5\n  },\n  dimmer: {\n    backgroundColor: \"rgba(0,0,0,0.5)\",\n    minWidth: width,\n    minHeight: height,\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n\n  activeDotStyle: {\n    backgroundColor: 'rgba(0, 0, 0, .7)',\n  },\n  dotStyle: {\n    backgroundColor: 'rgba(0, 0, 0, .2)',\n  },\n  pagination: {\n    marginHorizontal: 1.25,\n    borderRadius: 5,\n    backgroundColor: \"black\",\n    width: 10,\n    height: 10,\n    paddingHorizontal: 0,\n    paddingVertical: 0\n  },\n  mainContent: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'space-around',\n  },\n  image: {\n    width: 320,\n    height: 320,\n  },\n  text: {\n    color: 'rgba(255, 255, 255, 0.8)',\n    backgroundColor: 'transparent',\n    textAlign: 'center',\n    paddingHorizontal: 16,\n  },\n  title: {\n    fontSize: 22,\n    color: 'white',\n    backgroundColor: 'transparent',\n    textAlign: 'center',\n    marginBottom: 16,\n  },\n  recordContainer: {\n    paddingTop: 20\n  },\n  profile: {\n    marginTop: Platform.OS === \"android\" ? -HeaderHeight : 0,\n    // marginBottom: -HeaderHeight * 2,\n    flex: 1\n  },\n  profileContainer: {\n    width: width,\n    height: height,\n    padding: 0,\n    zIndex: 1\n  },\n  profileBackground: {\n    width: width,\n    height: height / 2\n  },\n  profileCard: {\n    padding: theme.SIZES.BASE,\n    marginHorizontal: theme.SIZES.BASE,\n    marginTop: 80,\n    borderTopLeftRadius: 6,\n    borderTopRightRadius: 6,\n    backgroundColor: theme.COLORS.WHITE,\n    shadowColor: \"black\",\n    shadowOffset: { width: 0, height: 0 },\n    shadowRadius: 8,\n    shadowOpacity: 0.2,\n    zIndex: 2\n  },\n  info: {\n    paddingHorizontal: 40\n  },\n  avatarContainer: {\n    position: \"relative\",\n    marginTop: -80\n  },\n  avatar: {\n    width: 124,\n    height: 124,\n    borderRadius: 62,\n    borderWidth: 1,\n  },\n  nameInfo: {\n    marginTop: 35\n  },\n  divider: {\n    width: \"100%\",\n    borderWidth: 1,\n    borderColor: \"#E9ECEF\"\n  },\n  thumb: {\n    borderRadius: 4,\n    marginVertical: 4,\n    alignSelf: \"center\",\n    width: thumbMeasure,\n    height: thumbMeasure\n  }\n});\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}