{"ast":null,"code":"var _jsxFileName = \"/Users/phakawat/Desktop/drowsy-mobile-app/node_modules/react-native-svg-charts/src/grid.js\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { G, Line } from 'react-native-svg';\n\nvar Horizontal = (_ref) => {\n  var {\n    ticks = [],\n    y,\n    svg\n  } = _ref;\n  return React.createElement(G, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    }\n  }, ticks.map(tick => React.createElement(Line, _extends({\n    key: tick,\n    x1: '0%',\n    x2: '100%',\n    y1: y(tick),\n    y2: y(tick),\n    strokeWidth: 1,\n    stroke: 'rgba(0,0,0,0.2)'\n  }, svg, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    }\n  }))));\n};\n\nvar Vertical = (_ref2) => {\n  var {\n    ticks = [],\n    x,\n    svg\n  } = _ref2;\n  return React.createElement(G, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    }\n  }, ticks.map((tick, index) => React.createElement(Line, _extends({\n    key: index,\n    y1: '0%',\n    y2: '100%',\n    x1: x(tick),\n    x2: x(tick),\n    strokeWidth: 1,\n    stroke: 'rgba(0,0,0,0.2)'\n  }, svg, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    }\n  }))));\n};\n\nvar Both = props => {\n  return React.createElement(G, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    }\n  }, React.createElement(Horizontal, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    }\n  })), React.createElement(Vertical, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    }\n  })));\n};\n\nVertical.propTypes = {\n  x: PropTypes.func,\n  dataPoints: PropTypes.array,\n  svg: PropTypes.object\n};\nHorizontal.propTypes = {\n  y: PropTypes.func,\n  ticks: PropTypes.array\n};\nBoth.propTypes = _objectSpread({}, Vertical.propTypes, {}, Horizontal.propTypes);\nvar Direction = {\n  VERTICAL: 'VERTICAL',\n  HORIZONTAL: 'HORIZONTAL',\n  BOTH: 'BOTH'\n};\n\nvar Grid = (_ref3) => {\n  var {\n    direction\n  } = _ref3,\n      props = _objectWithoutProperties(_ref3, [\"direction\"]);\n\n  if (direction === Direction.VERTICAL) {\n    return React.createElement(Vertical, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      }\n    }));\n  } else if (direction === Direction.HORIZONTAL) {\n    return React.createElement(Horizontal, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      }\n    }));\n  } else if (direction === Direction.BOTH) {\n    return React.createElement(Both, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      }\n    }));\n  }\n\n  return null;\n};\n\nGrid.Direction = Direction;\nGrid.propTypes = {\n  direction: PropTypes.oneOf(Object.values(Direction)),\n  belowChart: PropTypes.bool,\n  svg: PropTypes.object\n};\nGrid.defaultProps = {\n  direction: Direction.HORIZONTAL,\n  belowChart: true\n};\nexport default Grid;","map":{"version":3,"sources":["/Users/phakawat/Desktop/drowsy-mobile-app/node_modules/react-native-svg-charts/src/grid.js"],"names":["React","PropTypes","G","Line","Horizontal","ticks","y","svg","map","tick","Vertical","x","index","Both","props","propTypes","func","dataPoints","array","object","Direction","VERTICAL","HORIZONTAL","BOTH","Grid","direction","oneOf","Object","values","belowChart","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { G, Line } from 'react-native-svg'\n\nconst Horizontal = ({ ticks = [], y, svg }) => {\n    return (\n        <G>\n            {ticks.map((tick) => (\n                <Line\n                    key={tick}\n                    x1={'0%'}\n                    x2={'100%'}\n                    y1={y(tick)}\n                    y2={y(tick)}\n                    strokeWidth={1}\n                    stroke={'rgba(0,0,0,0.2)'}\n                    {...svg}\n                />\n            ))}\n        </G>\n    )\n}\n\nconst Vertical = ({ ticks = [], x, svg }) => {\n    return (\n        <G>\n            {ticks.map((tick, index) => (\n                <Line\n                    key={index}\n                    y1={'0%'}\n                    y2={'100%'}\n                    x1={x(tick)}\n                    x2={x(tick)}\n                    strokeWidth={1}\n                    stroke={'rgba(0,0,0,0.2)'}\n                    {...svg}\n                />\n            ))}\n        </G>\n    )\n}\n\nconst Both = (props) => {\n    return (\n        <G>\n            <Horizontal {...props} />\n            <Vertical {...props} />\n        </G>\n    )\n}\n\nVertical.propTypes = {\n    x: PropTypes.func,\n    dataPoints: PropTypes.array,\n    svg: PropTypes.object,\n}\n\nHorizontal.propTypes = {\n    y: PropTypes.func,\n    ticks: PropTypes.array,\n}\n\nBoth.propTypes = {\n    ...Vertical.propTypes,\n    ...Horizontal.propTypes,\n}\n\nconst Direction = {\n    VERTICAL: 'VERTICAL',\n    HORIZONTAL: 'HORIZONTAL',\n    BOTH: 'BOTH',\n}\n\nconst Grid = ({ direction, ...props }) => {\n    if (direction === Direction.VERTICAL) {\n        return <Vertical {...props} />\n    } else if (direction === Direction.HORIZONTAL) {\n        return <Horizontal {...props} />\n    } else if (direction === Direction.BOTH) {\n        return <Both {...props} />\n    }\n\n    return null\n}\n\nGrid.Direction = Direction\n\nGrid.propTypes = {\n    direction: PropTypes.oneOf(Object.values(Direction)),\n    belowChart: PropTypes.bool,\n    svg: PropTypes.object,\n}\n\nGrid.defaultProps = {\n    direction: Direction.HORIZONTAL,\n    belowChart: true,\n}\n\nexport default Grid\n"]},"metadata":{},"sourceType":"module"}