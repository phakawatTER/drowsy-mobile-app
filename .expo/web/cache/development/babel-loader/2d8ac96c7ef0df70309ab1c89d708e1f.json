{"ast":null,"code":"var _jsxFileName = \"/Users/phakawat/Desktop/drowsy-mobile-app/screens/Login.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { Block, Checkbox, Text, theme } from \"galio-framework\";\nimport axios from \"axios\";\nimport { Button, Icon, Input } from \"../components\";\nimport { Images, argonTheme } from \"../constants\";\nimport { API_LOGIN } from \"../link\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { PWD_SECRET } from \"../constants/pwd\";\nimport { sha512 } from \"js-sha512\";\nvar {\n  width,\n  height\n} = Dimensions.get(\"screen\");\n\nclass Login extends React.Component {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n    this.getUserInfo = _asyncToGenerator(function* () {\n      var userInfo = yield AsyncStorage.getItem(\"userInfo\");\n      userInfo = JSON.parse(userInfo);\n      if (userInfo) _this.props.navigation.navigate(\"Dashboard\");\n    });\n\n    this.storeUserInfo = function () {\n      var _ref2 = _asyncToGenerator(function* (storedData) {\n        try {\n          yield AsyncStorage.setItem(\"userInfo\", storedData);\n        } catch (err) {\n          console.log(err);\n        }\n      });\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    this.onChangeHandler = (name, text) => {\n      this.setState({\n        [name]: text\n      });\n    };\n\n    this.signIn = () => {\n      var {\n        email,\n        password\n      } = this.state;\n      var payload = {\n        username: email,\n        password: sha512(\"\".concat(password).concat(PWD_SECRET)),\n        from: \"app\"\n      };\n      axios.post(API_LOGIN, payload).then(response => {\n        if (response.status == 200) {\n          var data = response.data;\n          var {\n            code\n          } = data;\n\n          if (code === 200) {\n            this.storeUserInfo(JSON.stringify(data.userInfo));\n            this.props.screenProps.setUserInfo(data.userInfo);\n            this.setState({\n              emailState: \"success\",\n              passwordState: \"success\"\n            });\n            this.props.navigation.navigate(\"Dashboard\");\n          } else {\n            this.setState({\n              emailState: \"danger\",\n              passwordState: \"danger\"\n            });\n          }\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.onChangeHandler = (name, text) => {\n      this.setState({\n        [name]: text\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      passwordState: \"\",\n      emailState: \"\"\n    };\n  }\n\n  componentWillMount() {\n    this.getUserInfo();\n  }\n\n  render() {\n    var {\n      emailState,\n      passwordState,\n      email,\n      password\n    } = this.state;\n    return React.createElement(ScrollView, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      }\n    }, React.createElement(Block, {\n      flex: true,\n      middle: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      }\n    }, React.createElement(StatusBar, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      }\n    }), React.createElement(Block, {\n      flex: true,\n      middle: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      }\n    }, React.createElement(Block, {\n      style: styles.registerContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      }\n    }, React.createElement(Block, {\n      flex: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      }\n    }, React.createElement(Block, {\n      flex: 0.15,\n      middle: true,\n      style: styles.socialConnect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      }\n    }, React.createElement(Text, {\n      color: \"#8898AA\",\n      h4: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      }\n    }, \"Sign in\")), React.createElement(Block, {\n      flex: true,\n      center: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      }\n    }, React.createElement(KeyboardAvoidingView, {\n      style: {\n        flex: 1,\n        paddingTop: 20\n      },\n      behavior: \"padding\",\n      enabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      }\n    }, React.createElement(Block, {\n      width: width * 0.8,\n      style: {\n        marginBottom: 15\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      }\n    }, React.createElement(Input, {\n      success: this.state.emailState === \"success\" ? true : false,\n      error: this.state.emailState === \"danger\" ? true : false,\n      autoCapitalize: \"none\",\n      value: email,\n      onChangeText: text => this.onChangeHandler(\"email\", text),\n      placeholder: \"Email\",\n      iconContent: React.createElement(Icon, {\n        size: 16,\n        color: argonTheme.COLORS.ICON,\n        name: \"ic_mail_24px\",\n        family: \"ArgonExtra\",\n        style: styles.inputIcons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        }\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      }\n    })), React.createElement(Block, {\n      width: width * 0.8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      }\n    }, React.createElement(Input, {\n      success: this.state.passwordState === \"success\" ? true : false,\n      error: this.state.passwordState === \"danger\" ? true : false,\n      value: password,\n      onChangeText: text => this.onChangeHandler(\"password\", text),\n      password: true,\n      placeholder: \"Password\",\n      iconContent: React.createElement(Icon, {\n        size: 16,\n        color: argonTheme.COLORS.ICON,\n        name: \"padlock-unlocked\",\n        family: \"ArgonExtra\",\n        style: styles.inputIcons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        }\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      }\n    })), emailState === \"danger\" || passwordState === \"danger\" ? React.createElement(Block, {\n      row: true,\n      center: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      }\n    }, React.createElement(Text, {\n      center: true,\n      color: theme.COLORS.ERROR,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      }\n    }, \"Incorrect email or password !\")) : null, React.createElement(Block, {\n      middle: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      }\n    }, React.createElement(Button, {\n      color: \"success\",\n      style: styles.createButton,\n      onPress: () => this.signIn(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      }\n    }, React.createElement(Text, {\n      bold: true,\n      size: 14,\n      color: argonTheme.COLORS.WHITE,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      }\n    }, \"Sign in\")), React.createElement(Button, {\n      color: \"default\",\n      style: styles.createButton,\n      onPress: () => {\n        this.props.navigation.navigate(\"Register\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      }\n    }, React.createElement(Text, {\n      bold: true,\n      size: 14,\n      color: argonTheme.COLORS.WHITE,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      }\n    }, \"Sign up\")), React.createElement(Block, {\n      row: true,\n      style: styles.passwordCheck,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      }\n    }, \"Forgot your password?\"))))))))));\n  }\n\n}\n\nvar styles = StyleSheet.create({\n  registerContainer: {\n    width: width * 0.9,\n    marginTop: \"10%\",\n    borderRadius: 4,\n    shadowColor: argonTheme.COLORS.BLACK,\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowRadius: 8,\n    shadowOpacity: 0.1,\n    elevation: 1,\n    overflow: \"hidden\"\n  },\n  socialConnect: {\n    fontWeight: \"bold\"\n  },\n  socialButtons: {\n    width: 120,\n    height: 40,\n    backgroundColor: \"#fff\",\n    shadowColor: argonTheme.COLORS.BLACK,\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowRadius: 8,\n    shadowOpacity: 0.1,\n    elevation: 1\n  },\n  socialTextButtons: {\n    color: argonTheme.COLORS.PRIMARY,\n    fontWeight: \"800\",\n    fontSize: 14\n  },\n  inputIcons: {\n    marginRight: 12\n  },\n  passwordCheck: {\n    paddingLeft: 15,\n    paddingTop: 13,\n    paddingBottom: 30\n  },\n  createButton: {\n    width: width * 0.5,\n    marginTop: 25\n  }\n});\nexport default Login;","map":{"version":3,"sources":["/Users/phakawat/Desktop/drowsy-mobile-app/screens/Login.js"],"names":["React","Block","Checkbox","Text","theme","axios","Button","Icon","Input","Images","argonTheme","API_LOGIN","PWD_SECRET","sha512","width","height","Dimensions","get","Login","Component","constructor","props","getUserInfo","userInfo","AsyncStorage","getItem","JSON","parse","navigation","navigate","storeUserInfo","storedData","setItem","err","console","log","onChangeHandler","name","text","setState","signIn","email","password","state","payload","username","from","post","then","response","status","data","code","stringify","screenProps","setUserInfo","emailState","passwordState","catch","componentWillMount","render","styles","registerContainer","socialConnect","flex","paddingTop","marginBottom","COLORS","ICON","inputIcons","ERROR","createButton","WHITE","passwordCheck","StyleSheet","create","marginTop","borderRadius","shadowColor","BLACK","shadowOffset","shadowRadius","shadowOpacity","elevation","overflow","fontWeight","socialButtons","backgroundColor","socialTextButtons","color","PRIMARY","fontSize","marginRight","paddingLeft","paddingBottom"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n    ScrollView,\n    StyleSheet,\n    ImageBackground,\n    Dimensions,\n    StatusBar,\n    KeyboardAvoidingView\n} from \"react-native\";\nimport { Block, Checkbox, Text, theme } from \"galio-framework\";\nimport axios from \"axios\";\nimport { Button, Icon, Input } from \"../components\";\nimport { Images, argonTheme } from \"../constants\";\nimport { API_LOGIN } from \"../link\"\nimport { AsyncStorage } from \"react-native\"\nimport { PWD_SECRET } from \"../constants/pwd\"\nimport { sha512 } from \"js-sha512\"\nconst { width, height } = Dimensions.get(\"screen\");\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            email: \"\",\n            password: \"\",\n            passwordState: \"\",\n            emailState: \"\",\n        }\n    }\n\n    getUserInfo = async () => {\n        let userInfo = await AsyncStorage.getItem(\"userInfo\")\n        userInfo = JSON.parse(userInfo)\n        if (userInfo) this.props.navigation.navigate(\"Dashboard\")\n\n    }\n\n    componentWillMount() {\n        this.getUserInfo()\n    }\n\n    storeUserInfo = async (storedData) => {\n        try {\n            await AsyncStorage.setItem(\"userInfo\", storedData)\n        } catch (err) {\n            console.log(err)\n        }\n    }\n    onChangeHandler = (name, text) => {\n        this.setState({\n            [name]: text\n        })\n    }\n    signIn = () => {\n        let { email, password } = this.state\n        let payload = {\n            username: email,\n            password: sha512(`${password}${PWD_SECRET}`),\n            from: \"app\"\n        }\n        axios.post(API_LOGIN, payload)\n            .then(response => {\n                if (response.status == 200) {\n                    let data = response.data\n                    let { code } = data\n                    if (code === 200) {\n                        this.storeUserInfo(JSON.stringify(data.userInfo))\n                        this.props.screenProps.setUserInfo(data.userInfo)\n                        this.setState({\n                            emailState: \"success\",\n                            passwordState: \"success\"\n                        })\n                        this.props.navigation.navigate(\"Dashboard\")\n                    } else {\n                        this.setState({\n                            emailState: \"danger\",\n                            passwordState: \"danger\"\n                        })\n                    }\n                }\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    onChangeHandler = (name, text) => {\n        this.setState({ [name]: text })\n    }\n\n\n    render() {\n        let {\n            emailState,\n            passwordState,\n            email,\n            password,\n        } = this.state\n        return (\n            // <Block></Block>\n            <ScrollView>\n                <Block flex middle>\n                    <StatusBar hidden />\n                    <Block flex middle>\n                        <Block style={styles.registerContainer}>\n                            <Block flex >\n                                <Block flex={0.15} middle style={styles.socialConnect}>\n                                    <Text color=\"#8898AA\" h4>\n                                        Sign in\n                </Text>\n                                </Block>\n                                <Block flex center>\n                                    <KeyboardAvoidingView\n                                        style={{ flex: 1, paddingTop: 20 }}\n                                        behavior=\"padding\"\n                                        enabled\n                                    >\n                                        <Block width={width * 0.8} style={{ marginBottom: 15 }}>\n                                            <Input\n                                                success={this.state.emailState === \"success\" ? true : false}\n                                                error={this.state.emailState === \"danger\" ? true : false}\n                                                autoCapitalize='none'\n                                                value={email}\n                                                onChangeText={(text) => this.onChangeHandler(\"email\", text)}\n                                                placeholder=\"Email\"\n                                                iconContent={\n                                                    <Icon\n                                                        size={16}\n                                                        color={argonTheme.COLORS.ICON}\n                                                        name=\"ic_mail_24px\"\n                                                        family=\"ArgonExtra\"\n                                                        style={styles.inputIcons}\n                                                    />\n                                                }\n                                            />\n                                        </Block>\n                                        <Block width={width * 0.8}>\n                                            <Input\n                                                success={this.state.passwordState === \"success\" ? true : false}\n                                                error={this.state.passwordState === \"danger\" ? true : false}\n                                                value={password}\n                                                onChangeText={(text) => this.onChangeHandler(\"password\", text)}\n                                                password\n                                                placeholder=\"Password\"\n                                                iconContent={\n                                                    <Icon\n                                                        size={16}\n                                                        color={argonTheme.COLORS.ICON}\n                                                        name=\"padlock-unlocked\"\n                                                        family=\"ArgonExtra\"\n                                                        style={styles.inputIcons}\n                                                    />\n                                                }\n                                            />\n                                        </Block>\n                                        {\n                                            emailState === \"danger\" || passwordState === \"danger\" ?\n                                                <Block row center >\n                                                    <Text center color={theme.COLORS.ERROR}>\n                                                        Incorrect email or password !\n                                                    </Text>\n                                                </Block>\n                                                : null\n                                        }\n                                        <Block middle>\n                                            <Button color=\"success\" style={styles.createButton} onPress={() => this.signIn()}>\n                                                <Text bold size={14} color={argonTheme.COLORS.WHITE}>\n                                                    Sign in\n                        </Text>\n                                            </Button>\n                                            <Button color=\"default\" style={styles.createButton} onPress={() => {\n                                                this.props.navigation.navigate(\"Register\")\n                                            }}>\n                                                <Text bold size={14} color={argonTheme.COLORS.WHITE}>\n                                                    Sign up\n                        </Text>\n                                            </Button>\n                                            <Block row style={styles.passwordCheck}>\n                                                <Text>\n                                                    Forgot your password?\n                        </Text>\n                                            </Block>\n                                        </Block>\n\n                                    </KeyboardAvoidingView>\n                                </Block>\n                            </Block>\n                        </Block>\n                    </Block>\n                </Block>\n            </ScrollView>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    registerContainer: {\n        width: width * 0.9,\n        marginTop: `10%`,\n        // height: height * 0.5,\n        // backgroundColor: \"rgba(255,255,255,0.6)\",\n        borderRadius: 4,\n        shadowColor: argonTheme.COLORS.BLACK,\n        shadowOffset: {\n            width: 0,\n            height: 4\n        },\n        shadowRadius: 8,\n        shadowOpacity: 0.1,\n        elevation: 1,\n        overflow: \"hidden\"\n    },\n    socialConnect: {\n        fontWeight: \"bold\"\n        // backgroundColor: argonTheme.COLORS.WHITE,\n        // borderBottomWidth: StyleSheet.hairlineWidth,\n        // borderColor: \"#8898AA\"\n    },\n    socialButtons: {\n        width: 120,\n        height: 40,\n        backgroundColor: \"#fff\",\n        shadowColor: argonTheme.COLORS.BLACK,\n        shadowOffset: {\n            width: 0,\n            height: 4\n        },\n        shadowRadius: 8,\n        shadowOpacity: 0.1,\n        elevation: 1\n    },\n    socialTextButtons: {\n        color: argonTheme.COLORS.PRIMARY,\n        fontWeight: \"800\",\n        fontSize: 14\n    },\n    inputIcons: {\n        marginRight: 12\n    },\n    passwordCheck: {\n        paddingLeft: 15,\n        paddingTop: 13,\n        paddingBottom: 30\n    },\n    createButton: {\n        width: width * 0.5,\n        marginTop: 25\n    }\n});\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}