{"ast":null,"code":"var _jsxFileName = \"/Users/phakawat/Desktop/drowsy-mobile-app/node_modules/react-native-dropdownalert/DropdownAlert.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport PropTypes from 'prop-types';\nimport { DEFAULT_IMAGE_DIMENSIONS, IS_ANDROID, IS_IOS_BELOW_11, TYPE, ACTION, HEIGHT, getDefaultStatusBarStyle, getDefaultStatusBarBackgroundColor } from \"./constants\";\nimport TextView from \"./TextView\";\nimport ImageView from \"./imageview\";\nimport CancelButton from \"./CancelButton\";\nexport default class DropdownAlert extends Component {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n\n    this.getPanResponder = () => {\n      return PanResponder.create({\n        onStartShouldSetPanResponder: (event, gestureState) => this._onShouldStartPan(event, gestureState),\n        onMoveShouldSetPanResponder: (event, gestureState) => this._onShouldMovePan(event, gestureState),\n        onPanResponderMove: (event, gestureState) => this._onMovePan(event, gestureState),\n        onPanResponderRelease: (event, gestureState) => this._onDonePan(event, gestureState),\n        onPanResponderTerminate: (event, gestureState) => this._onDonePan(event, gestureState)\n      });\n    };\n\n    this._onShouldStartPan = (event, gestureState) => {\n      return this.props.panResponderEnabled;\n    };\n\n    this._onShouldMovePan = (event, gestureState) => {\n      var {\n        sensitivity,\n        panResponderEnabled\n      } = this.props;\n      var dx = Math.abs(gestureState.dx);\n      var dy = Math.abs(gestureState.dy);\n      var isDxSensitivity = dx < sensitivity;\n      var isDySensitivity = dy >= sensitivity;\n      return isDxSensitivity && isDySensitivity && panResponderEnabled;\n    };\n\n    this._onMovePan = (event, gestureState) => {\n      if (gestureState.dy < 0) {\n        this.setState({\n          topValue: gestureState.dy\n        });\n      }\n    };\n\n    this._onDonePan = (event, gestureState) => {\n      var start = this.getStartDelta(this.state.height, this.props.startDelta);\n      var delta = start / 5;\n\n      if (gestureState.dy < delta) {\n        this.closeAction(ACTION.pan);\n      }\n    };\n\n    this.alertWithType = function () {\n      var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var title = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      var message = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n      var payload = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var interval = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n\n      if (_this.animationLock) {\n        return;\n      }\n\n      var {\n        closeInterval,\n        replaceEnabled\n      } = _this.props;\n      var duration = closeInterval;\n\n      if (typeof interval === 'number' && interval > 1) {\n        duration = interval;\n      }\n\n      var data = {\n        type,\n        title: _this.getStringValue(title),\n        message: _this.getStringValue(message),\n        payload,\n        interval: duration\n      };\n      var {\n        isOpen\n      } = _this.state;\n\n      if (!replaceEnabled && isOpen) {\n        _this.alertData = data;\n\n        _this.setState({\n          isOpen: true\n        });\n\n        if (duration > 0) {\n          _this.closeAutomatic(duration);\n        }\n\n        return;\n      }\n\n      if (isOpen) {\n        _this.closeAction(ACTION.programmatic, () => {\n          _this.open(data, duration);\n        });\n\n        return;\n      }\n\n      _this.open(data, duration);\n    };\n\n    this.open = function () {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var duration = arguments.length > 1 ? arguments[1] : undefined;\n      _this.alertData = data;\n\n      _this.setState({\n        isOpen: true\n      });\n\n      _this.animate(1, 450, () => {\n        _this.animationLock = false;\n\n        if (duration > 0) {\n          _this.closeAutomatic(duration);\n        }\n      });\n    };\n\n    this.closeAction = function () {\n      var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ACTION.programmatic;\n      var onDone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : () => {};\n\n      _this.clearCloseTimeoutID();\n\n      _this.close(action, onDone);\n    };\n\n    this.closeAutomatic = duration => {\n      this.clearCloseTimeoutID();\n      this.closeTimeoutID = setTimeout(() => {\n        this.close(ACTION.automatic);\n      }, duration);\n    };\n\n    this.close = function (action) {\n      var onDone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : () => {};\n\n      _this.animate(0, 250, () => {\n        var {\n          onClose,\n          updateStatusBar,\n          onCancel,\n          onTap\n        } = _this.props;\n\n        _this.updateStatusBar(updateStatusBar, false);\n\n        _this.alertData.action = action;\n\n        if (action == ACTION.cancel) {\n          onCancel(_this.alertData);\n        } else {\n          if (action == ACTION.tap) {\n            onTap(_this.alertData);\n          }\n\n          onClose(_this.alertData);\n        }\n\n        _this.setState({\n          isOpen: false,\n          topValue: 0,\n          height: 0\n        });\n\n        _this.animationLock = false;\n        onDone();\n      });\n    };\n\n    this.updateStatusBar = function () {\n      var shouldUpdate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var active = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (shouldUpdate) {\n        if (IS_ANDROID) {\n          var {\n            inactiveStatusBarBackgroundColor,\n            activeStatusBarBackgroundColor,\n            translucent\n          } = _this.props;\n\n          if (active) {\n            var backgroundColor = activeStatusBarBackgroundColor;\n            var type = _this.alertData.type;\n\n            if (type !== TYPE.custom) {\n              backgroundColor = _this.getBackgroundColorForType(type);\n            }\n\n            StatusBar.setBackgroundColor(backgroundColor, true);\n            StatusBar.setTranslucent(translucent);\n          } else {\n            StatusBar.setBackgroundColor(inactiveStatusBarBackgroundColor, true);\n          }\n        }\n\n        var {\n          inactiveStatusBarStyle,\n          activeStatusBarStyle\n        } = _this.props;\n\n        if (active) {\n          StatusBar.setBarStyle(activeStatusBarStyle, true);\n        } else {\n          StatusBar.setBarStyle(inactiveStatusBarStyle, true);\n        }\n      }\n    };\n\n    this.clearCloseTimeoutID = () => {\n      if (this.closeTimeoutID) {\n        clearTimeout(this.closeTimeoutID);\n      }\n    };\n\n    this.animate = function (toValue) {\n      var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 450;\n      var onComplete = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : () => {};\n      var {\n        useAnimationLock,\n        useNativeDriver,\n        isInteraction\n      } = _this.props;\n\n      if (useAnimationLock) {\n        _this.animationLock = true;\n      }\n\n      Animated.spring(_this.state.animationValue, {\n        toValue: toValue,\n        duration: duration,\n        friction: 9,\n        useNativeDriver,\n        isInteraction\n      }).start(onComplete);\n    };\n\n    this.getStartDelta = (height, start) => {\n      var windowHeight = HEIGHT;\n      var startMin = 0 - height;\n      var startMax = windowHeight + height;\n\n      if (start < 0 && start != startMin) {\n        return startMin;\n      } else if (start > startMax) {\n        return startMax;\n      }\n\n      return start;\n    };\n\n    this.getEndDelta = (height, end) => {\n      var windowHeight = HEIGHT;\n      var endMin = 0;\n      var endMax = windowHeight;\n\n      if (end < endMin) {\n        return endMin;\n      } else if (end >= endMax) {\n        return endMax - height;\n      }\n\n      return end;\n    };\n\n    this.getOutputRange = (height, startDelta, endDelta) => {\n      if (!height) {\n        return [startDelta, endDelta];\n      }\n\n      var start = this.getStartDelta(height, startDelta);\n      var end = this.getEndDelta(height, endDelta);\n      return [start, end];\n    };\n\n    this.state = {\n      animationValue: new Animated.Value(0),\n      isOpen: false,\n      topValue: 0,\n      height: 0\n    };\n    this.alertData = {\n      type: '',\n      message: '',\n      title: '',\n      payload: {},\n      interval: props.closeInterval,\n      action: ''\n    };\n    this.animationLock = false;\n    this.panResponder = this.getPanResponder();\n  }\n\n  componentWillUnmount() {\n    if (this.state.isOpen) {\n      this.closeAction(ACTION.programmatic);\n    }\n  }\n\n  getStringValue(value) {\n    try {\n      if (typeof value !== 'string') {\n        if (Array.isArray(value)) {\n          return value.join(' ');\n        }\n\n        if (typeof value == 'object') {\n          return \"\".concat(JSON.stringify(value));\n        }\n\n        return \"\".concat(value);\n      }\n\n      return value;\n    } catch (error) {\n      return error.toString();\n    }\n  }\n\n  getStyleForType(type) {\n    var {\n      defaultContainer\n    } = this.props;\n\n    switch (type) {\n      case TYPE.info:\n        return [StyleSheet.flatten(defaultContainer), {\n          backgroundColor: this.props.infoColor\n        }];\n\n      case TYPE.warn:\n        return [StyleSheet.flatten(defaultContainer), {\n          backgroundColor: this.props.warnColor\n        }];\n\n      case TYPE.error:\n        return [StyleSheet.flatten(defaultContainer), {\n          backgroundColor: this.props.errorColor\n        }];\n\n      case TYPE.success:\n        return [StyleSheet.flatten(defaultContainer), {\n          backgroundColor: this.props.successColor\n        }];\n\n      default:\n        return [StyleSheet.flatten(defaultContainer), StyleSheet.flatten(this.props.containerStyle)];\n    }\n  }\n\n  getSourceForType(type) {\n    switch (type) {\n      case TYPE.info:\n        return this.props.infoImageSrc;\n\n      case TYPE.warn:\n        return this.props.warnImageSrc;\n\n      case TYPE.error:\n        return this.props.errorImageSrc;\n\n      case TYPE.success:\n        return this.props.successImageSrc;\n\n      default:\n        return this.props.imageSrc;\n    }\n  }\n\n  getBackgroundColorForType(type) {\n    switch (type) {\n      case TYPE.info:\n        return this.props.infoColor;\n\n      case TYPE.warn:\n        return this.props.warnColor;\n\n      case TYPE.error:\n        return this.props.errorColor;\n\n      case TYPE.success:\n        return this.props.successColor;\n\n      default:\n        return this.props.containerStyle.backgroundColor;\n    }\n  }\n\n  _onLayoutEvent(event) {\n    var {\n      height\n    } = event.nativeEvent.layout;\n\n    if (height > this.state.height) {\n      var {\n        startDelta,\n        endDelta\n      } = this.props;\n      var start = this.getStartDelta(height, startDelta);\n      var end = this.getEndDelta(height, endDelta);\n\n      if (startDelta != start || endDelta != end) {\n        this.setState({\n          height\n        });\n      }\n    }\n  }\n\n  _renderImage(source) {\n    if (this.props.renderImage) {\n      return this.props.renderImage(this.props, this.alertData);\n    }\n\n    return React.createElement(ImageView, {\n      style: StyleSheet.flatten(this.props.imageStyle),\n      source: source,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445\n      }\n    });\n  }\n\n  _renderTitle() {\n    if (this.props.renderTitle) {\n      return this.props.renderTitle(this.props, this.alertData);\n    }\n\n    var {\n      titleTextProps,\n      titleStyle,\n      titleNumOfLines\n    } = this.props;\n    return React.createElement(TextView, _extends({}, titleTextProps, {\n      style: StyleSheet.flatten(titleStyle),\n      numberOfLines: titleNumOfLines,\n      text: this.alertData.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      }\n    }));\n  }\n\n  _renderMessage() {\n    if (this.props.renderMessage) {\n      return this.props.renderMessage(this.props, this.alertData);\n    }\n\n    var {\n      messageTextProps,\n      messageStyle,\n      messageNumOfLines\n    } = this.props;\n    return React.createElement(TextView, _extends({}, messageTextProps, {\n      style: StyleSheet.flatten(messageStyle),\n      numberOfLines: messageNumOfLines,\n      text: this.alertData.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      }\n    }));\n  }\n\n  _renderCancel() {\n    var show = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (!show) {\n      return null;\n    }\n\n    if (this.props.renderCancel) {\n      return this.props.renderCancel(this.props, this.alertData);\n    } else {\n      var {\n        cancelBtnImageSrc,\n        cancelBtnImageStyle\n      } = this.props;\n      return React.createElement(CancelButton, {\n        imageStyle: cancelBtnImageStyle,\n        imageSrc: cancelBtnImageSrc,\n        onPress: () => this.closeAction(ACTION.cancel),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        }\n      });\n    }\n  }\n\n  render() {\n    var {\n      isOpen\n    } = this.state;\n\n    if (!isOpen) {\n      return null;\n    }\n\n    var {\n      elevation,\n      zIndex,\n      wrapperStyle,\n      tapToCloseEnabled,\n      accessibilityLabel,\n      testID,\n      accessible,\n      contentContainerStyle,\n      defaultTextContainer,\n      startDelta,\n      endDelta,\n      translucent,\n      updateStatusBar,\n      showCancel\n    } = this.props;\n    var {\n      animationValue,\n      topValue,\n      height\n    } = this.state;\n    var {\n      type,\n      payload\n    } = this.alertData;\n    var style = this.getStyleForType(type);\n    var imageSrc = this.getSourceForType(type);\n\n    if (payload && payload.hasOwnProperty('source') && payload.source && typeof payload.source !== 'object') {\n      imageSrc = payload.source;\n    }\n\n    if (IS_ANDROID && translucent) {\n      style = [style, {\n        paddingTop: StatusBar.currentHeight\n      }];\n    }\n\n    this.updateStatusBar(updateStatusBar, true);\n    var outputRange = this.getOutputRange(height, startDelta, endDelta);\n    var wrapperAnimStyle = {\n      transform: [{\n        translateY: animationValue.interpolate({\n          inputRange: [0, 1],\n          outputRange\n        })\n      }],\n      position: 'absolute',\n      top: topValue,\n      left: 0,\n      right: 0,\n      elevation: elevation\n    };\n\n    if (zIndex != null) {\n      wrapperAnimStyle['zIndex'] = zIndex;\n    }\n\n    var ContentView = SafeAreaView;\n\n    if (IS_IOS_BELOW_11 || IS_ANDROID) {\n      ContentView = View;\n    }\n\n    var activeOpacity = !tapToCloseEnabled || showCancel ? 1 : 0.95;\n    var onPress = !tapToCloseEnabled ? null : () => this.closeAction(ACTION.tap);\n    return React.createElement(Animated.View, _extends({\n      ref: _ref => this.mainView = _ref\n    }, this.panResponder.panHandlers, {\n      style: [wrapperAnimStyle, wrapperStyle],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532\n      }\n    }), React.createElement(TouchableOpacity, {\n      activeOpacity: activeOpacity,\n      onPress: onPress,\n      disabled: !tapToCloseEnabled,\n      onLayout: event => this._onLayoutEvent(event),\n      testID: testID,\n      accessibilityLabel: accessibilityLabel,\n      accessible: accessible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533\n      }\n    }, React.createElement(View, {\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542\n      }\n    }, React.createElement(ContentView, {\n      style: StyleSheet.flatten(contentContainerStyle),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543\n      }\n    }, this._renderImage(imageSrc), React.createElement(View, {\n      style: StyleSheet.flatten(defaultTextContainer),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545\n      }\n    }, this._renderTitle(), this._renderMessage())), this._renderCancel(showCancel))));\n  }\n\n}\nDropdownAlert.propTypes = {\n  imageSrc: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  infoImageSrc: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object]),\n  warnImageSrc: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object]),\n  errorImageSrc: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object]),\n  successImageSrc: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object]),\n  cancelBtnImageSrc: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object]),\n  infoColor: PropTypes.string,\n  warnColor: PropTypes.string,\n  errorColor: PropTypes.string,\n  successColor: PropTypes.string,\n  closeInterval: PropTypes.number,\n  startDelta: PropTypes.number,\n  endDelta: PropTypes.number,\n  wrapperStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  contentContainerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  titleStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  messageStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  imageStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  cancelBtnImageStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  titleNumOfLines: PropTypes.number,\n  messageNumOfLines: PropTypes.number,\n  onClose: PropTypes.func,\n  onCancel: PropTypes.func,\n  showCancel: PropTypes.bool,\n  tapToCloseEnabled: PropTypes.bool,\n  panResponderEnabled: PropTypes.bool,\n  replaceEnabled: PropTypes.bool,\n  translucent: PropTypes.bool,\n  useNativeDriver: PropTypes.bool,\n  isInteraction: PropTypes.bool,\n  activeStatusBarStyle: PropTypes.string,\n  activeStatusBarBackgroundColor: PropTypes.string,\n  inactiveStatusBarStyle: PropTypes.string,\n  inactiveStatusBarBackgroundColor: PropTypes.string,\n  updateStatusBar: PropTypes.bool,\n  elevation: PropTypes.number,\n  zIndex: PropTypes.number,\n  sensitivity: PropTypes.number,\n  defaultContainer: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  defaultTextContainer: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  renderImage: PropTypes.func,\n  renderCancel: PropTypes.func,\n  renderTitle: PropTypes.func,\n  renderMessage: PropTypes.func,\n  testID: PropTypes.string,\n  accessibilityLabel: PropTypes.string,\n  accessible: PropTypes.bool,\n  titleTextProps: PropTypes.object,\n  messageTextProps: PropTypes.object,\n  useAnimationLock: PropTypes.bool,\n  onTap: PropTypes.func\n};\nDropdownAlert.defaultProps = {\n  onClose: () => {},\n  onCancel: () => {},\n  closeInterval: 4000,\n  startDelta: -100,\n  endDelta: 0,\n  titleNumOfLines: 1,\n  messageNumOfLines: 3,\n  imageSrc: null,\n  infoImageSrc: require(\"./assets/info.png\"),\n  warnImageSrc: require(\"./assets/warn.png\"),\n  errorImageSrc: require(\"./assets/error.png\"),\n  successImageSrc: require(\"./assets/success.png\"),\n  cancelBtnImageSrc: require(\"./assets/cancel.png\"),\n  infoColor: '#2B73B6',\n  warnColor: '#cd853f',\n  errorColor: '#cc3232',\n  successColor: '#32A54A',\n  showCancel: false,\n  tapToCloseEnabled: true,\n  panResponderEnabled: true,\n  replaceEnabled: true,\n  wrapperStyle: null,\n  containerStyle: {\n    padding: 16,\n    flexDirection: 'row',\n    backgroundColor: '#202020'\n  },\n  contentContainerStyle: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  titleStyle: {\n    fontSize: 16,\n    textAlign: 'left',\n    fontWeight: 'bold',\n    color: 'white',\n    backgroundColor: 'transparent'\n  },\n  messageStyle: {\n    fontSize: 14,\n    textAlign: 'left',\n    fontWeight: 'normal',\n    color: 'white',\n    backgroundColor: 'transparent'\n  },\n  imageStyle: {\n    padding: 8,\n    width: DEFAULT_IMAGE_DIMENSIONS,\n    height: DEFAULT_IMAGE_DIMENSIONS,\n    alignSelf: 'center'\n  },\n  cancelBtnImageStyle: {\n    padding: 8,\n    width: DEFAULT_IMAGE_DIMENSIONS,\n    height: DEFAULT_IMAGE_DIMENSIONS,\n    alignSelf: 'center'\n  },\n  defaultContainer: {\n    padding: 8,\n    flexDirection: 'row'\n  },\n  defaultTextContainer: {\n    flex: 1,\n    padding: 8\n  },\n  translucent: false,\n  activeStatusBarStyle: 'light-content',\n  activeStatusBarBackgroundColor: getDefaultStatusBarBackgroundColor(),\n  inactiveStatusBarStyle: getDefaultStatusBarStyle(),\n  inactiveStatusBarBackgroundColor: getDefaultStatusBarBackgroundColor(),\n  updateStatusBar: true,\n  isInteraction: true,\n  useNativeDriver: true,\n  elevation: 1,\n  zIndex: null,\n  sensitivity: 20,\n  renderImage: undefined,\n  renderCancel: undefined,\n  renderTitle: undefined,\n  renderMessage: undefined,\n  testID: undefined,\n  accessibilityLabel: undefined,\n  accessible: false,\n  titleTextProps: undefined,\n  messageTextProps: undefined,\n  useAnimationLock: true,\n  onTap: () => {}\n};","map":{"version":3,"sources":["/Users/phakawat/Desktop/drowsy-mobile-app/node_modules/react-native-dropdownalert/DropdownAlert.js"],"names":["React","Component","PropTypes","DEFAULT_IMAGE_DIMENSIONS","IS_ANDROID","IS_IOS_BELOW_11","TYPE","ACTION","HEIGHT","getDefaultStatusBarStyle","getDefaultStatusBarBackgroundColor","TextView","ImageView","CancelButton","DropdownAlert","constructor","props","getPanResponder","PanResponder","create","onStartShouldSetPanResponder","event","gestureState","_onShouldStartPan","onMoveShouldSetPanResponder","_onShouldMovePan","onPanResponderMove","_onMovePan","onPanResponderRelease","_onDonePan","onPanResponderTerminate","panResponderEnabled","sensitivity","dx","Math","abs","dy","isDxSensitivity","isDySensitivity","setState","topValue","start","getStartDelta","state","height","startDelta","delta","closeAction","pan","alertWithType","type","title","message","payload","interval","animationLock","closeInterval","replaceEnabled","duration","data","getStringValue","isOpen","alertData","closeAutomatic","programmatic","open","animate","action","onDone","clearCloseTimeoutID","close","closeTimeoutID","setTimeout","automatic","onClose","updateStatusBar","onCancel","onTap","cancel","tap","shouldUpdate","active","inactiveStatusBarBackgroundColor","activeStatusBarBackgroundColor","translucent","backgroundColor","custom","getBackgroundColorForType","StatusBar","setBackgroundColor","setTranslucent","inactiveStatusBarStyle","activeStatusBarStyle","setBarStyle","clearTimeout","toValue","onComplete","useAnimationLock","useNativeDriver","isInteraction","Animated","spring","animationValue","friction","windowHeight","startMin","startMax","getEndDelta","end","endMin","endMax","getOutputRange","endDelta","Value","panResponder","componentWillUnmount","value","Array","isArray","join","JSON","stringify","error","toString","getStyleForType","defaultContainer","info","StyleSheet","flatten","infoColor","warn","warnColor","errorColor","success","successColor","containerStyle","getSourceForType","infoImageSrc","warnImageSrc","errorImageSrc","successImageSrc","imageSrc","_onLayoutEvent","nativeEvent","layout","_renderImage","source","renderImage","imageStyle","_renderTitle","renderTitle","titleTextProps","titleStyle","titleNumOfLines","_renderMessage","renderMessage","messageTextProps","messageStyle","messageNumOfLines","_renderCancel","show","renderCancel","cancelBtnImageSrc","cancelBtnImageStyle","render","elevation","zIndex","wrapperStyle","tapToCloseEnabled","accessibilityLabel","testID","accessible","contentContainerStyle","defaultTextContainer","showCancel","style","hasOwnProperty","paddingTop","currentHeight","outputRange","wrapperAnimStyle","transform","translateY","interpolate","inputRange","position","top","left","right","ContentView","SafeAreaView","View","activeOpacity","onPress","ref","mainView","panHandlers","propTypes","oneOfType","string","number","object","func","bool","defaultProps","require","padding","flexDirection","flex","fontSize","textAlign","fontWeight","color","width","alignSelf","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, SafeAreaView, View, TouchableOpacity, Animated, StatusBar, PanResponder } from 'react-native';\nimport PropTypes from 'prop-types';\nimport {\n  DEFAULT_IMAGE_DIMENSIONS,\n  IS_ANDROID,\n  IS_IOS_BELOW_11,\n  TYPE,\n  ACTION,\n  HEIGHT,\n  getDefaultStatusBarStyle,\n  getDefaultStatusBarBackgroundColor,\n} from './constants';\nimport TextView from './TextView';\nimport ImageView from './imageview';\nimport CancelButton from './CancelButton';\n\nexport default class DropdownAlert extends Component {\n  static propTypes = {\n    imageSrc: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    infoImageSrc: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object]),\n    warnImageSrc: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object]),\n    errorImageSrc: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object]),\n    successImageSrc: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object]),\n    cancelBtnImageSrc: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object]),\n    infoColor: PropTypes.string,\n    warnColor: PropTypes.string,\n    errorColor: PropTypes.string,\n    successColor: PropTypes.string,\n    closeInterval: PropTypes.number,\n    startDelta: PropTypes.number,\n    endDelta: PropTypes.number,\n    wrapperStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    contentContainerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    titleStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    messageStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    imageStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    cancelBtnImageStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    titleNumOfLines: PropTypes.number,\n    messageNumOfLines: PropTypes.number,\n    onClose: PropTypes.func,\n    onCancel: PropTypes.func,\n    showCancel: PropTypes.bool,\n    tapToCloseEnabled: PropTypes.bool,\n    panResponderEnabled: PropTypes.bool,\n    replaceEnabled: PropTypes.bool,\n    translucent: PropTypes.bool,\n    useNativeDriver: PropTypes.bool,\n    isInteraction: PropTypes.bool,\n    activeStatusBarStyle: PropTypes.string,\n    activeStatusBarBackgroundColor: PropTypes.string,\n    inactiveStatusBarStyle: PropTypes.string,\n    inactiveStatusBarBackgroundColor: PropTypes.string,\n    updateStatusBar: PropTypes.bool,\n    elevation: PropTypes.number,\n    zIndex: PropTypes.number,\n    sensitivity: PropTypes.number,\n    defaultContainer: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    defaultTextContainer: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    renderImage: PropTypes.func,\n    renderCancel: PropTypes.func,\n    renderTitle: PropTypes.func,\n    renderMessage: PropTypes.func,\n    testID: PropTypes.string,\n    accessibilityLabel: PropTypes.string,\n    accessible: PropTypes.bool,\n    titleTextProps: PropTypes.object,\n    messageTextProps: PropTypes.object,\n    useAnimationLock: PropTypes.bool,\n    onTap: PropTypes.func,\n  };\n  static defaultProps = {\n    onClose: () => {},\n    onCancel: () => {},\n    closeInterval: 4000,\n    startDelta: -100,\n    endDelta: 0,\n    titleNumOfLines: 1,\n    messageNumOfLines: 3,\n    imageSrc: null,\n    infoImageSrc: require('./assets/info.png'),\n    warnImageSrc: require('./assets/warn.png'),\n    errorImageSrc: require('./assets/error.png'),\n    successImageSrc: require('./assets/success.png'),\n    cancelBtnImageSrc: require('./assets/cancel.png'),\n    infoColor: '#2B73B6',\n    warnColor: '#cd853f',\n    errorColor: '#cc3232',\n    successColor: '#32A54A',\n    showCancel: false,\n    tapToCloseEnabled: true,\n    panResponderEnabled: true,\n    replaceEnabled: true,\n    wrapperStyle: null,\n    containerStyle: {\n      padding: 16,\n      flexDirection: 'row',\n      backgroundColor: '#202020',\n    },\n    contentContainerStyle: {\n      flex: 1,\n      flexDirection: 'row',\n    },\n    titleStyle: {\n      fontSize: 16,\n      textAlign: 'left',\n      fontWeight: 'bold',\n      color: 'white',\n      backgroundColor: 'transparent',\n    },\n    messageStyle: {\n      fontSize: 14,\n      textAlign: 'left',\n      fontWeight: 'normal',\n      color: 'white',\n      backgroundColor: 'transparent',\n    },\n    imageStyle: {\n      padding: 8,\n      width: DEFAULT_IMAGE_DIMENSIONS,\n      height: DEFAULT_IMAGE_DIMENSIONS,\n      alignSelf: 'center',\n    },\n    cancelBtnImageStyle: {\n      padding: 8,\n      width: DEFAULT_IMAGE_DIMENSIONS,\n      height: DEFAULT_IMAGE_DIMENSIONS,\n      alignSelf: 'center',\n    },\n    defaultContainer: {\n      padding: 8,\n      flexDirection: 'row',\n    },\n    defaultTextContainer: {\n      flex: 1,\n      padding: 8,\n    },\n    translucent: false,\n    activeStatusBarStyle: 'light-content',\n    activeStatusBarBackgroundColor: getDefaultStatusBarBackgroundColor(),\n    inactiveStatusBarStyle: getDefaultStatusBarStyle(),\n    inactiveStatusBarBackgroundColor: getDefaultStatusBarBackgroundColor(),\n    updateStatusBar: true,\n    isInteraction: true,\n    useNativeDriver: true,\n    elevation: 1,\n    zIndex: null,\n    sensitivity: 20,\n    renderImage: undefined,\n    renderCancel: undefined,\n    renderTitle: undefined,\n    renderMessage: undefined,\n    testID: undefined,\n    accessibilityLabel: undefined,\n    accessible: false,\n    titleTextProps: undefined,\n    messageTextProps: undefined,\n    useAnimationLock: true,\n    onTap: () => {},\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      animationValue: new Animated.Value(0),\n      isOpen: false,\n      topValue: 0,\n      height: 0,\n    };\n    this.alertData = {\n      type: '',\n      message: '',\n      title: '',\n      payload: {},\n      interval: props.closeInterval,\n      action: '',\n    };\n    this.animationLock = false;\n    this.panResponder = this.getPanResponder();\n  }\n  componentWillUnmount() {\n    if (this.state.isOpen) {\n      this.closeAction(ACTION.programmatic);\n    }\n  }\n  getPanResponder = () => {\n    return PanResponder.create({\n      onStartShouldSetPanResponder: (event, gestureState) => this._onShouldStartPan(event, gestureState),\n      onMoveShouldSetPanResponder: (event, gestureState) => this._onShouldMovePan(event, gestureState),\n      onPanResponderMove: (event, gestureState) => this._onMovePan(event, gestureState),\n      onPanResponderRelease: (event, gestureState) => this._onDonePan(event, gestureState),\n      onPanResponderTerminate: (event, gestureState) => this._onDonePan(event, gestureState),\n    });\n  };\n  _onShouldStartPan = (event, gestureState) => {\n    return this.props.panResponderEnabled;\n  };\n  _onShouldMovePan = (event, gestureState) => {\n    const { sensitivity, panResponderEnabled } = this.props;\n    const dx = Math.abs(gestureState.dx);\n    const dy = Math.abs(gestureState.dy);\n    const isDxSensitivity = dx < sensitivity;\n    const isDySensitivity = dy >= sensitivity;\n    return isDxSensitivity && isDySensitivity && panResponderEnabled;\n  };\n  _onMovePan = (event, gestureState) => {\n    if (gestureState.dy < 0) {\n      this.setState({ topValue: gestureState.dy });\n    }\n  };\n  _onDonePan = (event, gestureState) => {\n    const start = this.getStartDelta(this.state.height, this.props.startDelta);\n    const delta = start / 5;\n    if (gestureState.dy < delta) {\n      this.closeAction(ACTION.pan);\n    }\n  };\n  getStringValue(value) {\n    try {\n      if (typeof value !== 'string') {\n        if (Array.isArray(value)) {\n          return value.join(' ');\n        }\n        if (typeof value == 'object') {\n          return `${JSON.stringify(value)}`;\n        }\n        return `${value}`;\n      }\n      return value;\n    } catch (error) {\n      return error.toString();\n    }\n  }\n  alertWithType = (type = '', title = '', message = '', payload = {}, interval = 1) => {\n    if (this.animationLock) {\n      return;\n    }\n    // type is not validated so unexpected types will render alert with default styles.\n    // these default styles can be overridden with style props. (like containerStyle)\n    const { closeInterval, replaceEnabled } = this.props;\n    let duration = closeInterval;\n    // closeInterval prop is overridden if interval is provided\n    if (typeof interval === 'number' && interval > 1) {\n      duration = interval;\n    }\n    // title and message are converted to strings\n    const data = {\n      type,\n      title: this.getStringValue(title),\n      message: this.getStringValue(message),\n      payload,\n      interval: duration,\n    };\n    // replaceEnabled\n    // True: alert is closed then replaced by another alert. (default)\n    // False: alert state change is immediate if open.\n    const { isOpen } = this.state;\n    if (!replaceEnabled && isOpen) {\n      this.alertData = data;\n      this.setState({ isOpen: true });\n      if (duration > 0) {\n        this.closeAutomatic(duration);\n      }\n      return;\n    }\n    if (isOpen) {\n      this.closeAction(ACTION.programmatic, () => {\n        this.open(data, duration);\n      });\n      return;\n    }\n    this.open(data, duration);\n  };\n  open = (data = {}, duration) => {\n    this.alertData = data;\n    this.setState({ isOpen: true });\n    this.animate(1, 450, () => {\n      this.animationLock = false;\n      if (duration > 0) {\n        this.closeAutomatic(duration);\n      }\n    });\n  };\n  closeAction = (action = ACTION.programmatic, onDone = () => {}) => {\n    // action is how the alert was closed.\n    // alert currently closes itself by:\n    // tap, pan, cancel, programmatic or automatic\n    this.clearCloseTimeoutID();\n    this.close(action, onDone);\n  };\n  closeAutomatic = duration => {\n    this.clearCloseTimeoutID();\n    this.closeTimeoutID = setTimeout(() => {\n      this.close(ACTION.automatic);\n    }, duration);\n  };\n  close = (action, onDone = () => {}) => {\n    this.animate(0, 250, () => {\n      const { onClose, updateStatusBar, onCancel, onTap } = this.props;\n      this.updateStatusBar(updateStatusBar, false);\n      this.alertData.action = action;\n      if (action == ACTION.cancel) {\n        onCancel(this.alertData);\n      } else {\n        if (action == ACTION.tap) {\n          onTap(this.alertData);\n        }\n        onClose(this.alertData);\n      }\n      this.setState({ isOpen: false, topValue: 0, height: 0 });\n      this.animationLock = false;\n      onDone();\n    });\n  };\n  updateStatusBar = (shouldUpdate = true, active = false) => {\n    if (shouldUpdate) {\n      if (IS_ANDROID) {\n        const { inactiveStatusBarBackgroundColor, activeStatusBarBackgroundColor, translucent } = this.props;\n        if (active) {\n          let backgroundColor = activeStatusBarBackgroundColor;\n          const type = this.alertData.type;\n          if (type !== TYPE.custom) {\n            backgroundColor = this.getBackgroundColorForType(type);\n          }\n          StatusBar.setBackgroundColor(backgroundColor, true);\n          StatusBar.setTranslucent(translucent);\n        } else {\n          StatusBar.setBackgroundColor(inactiveStatusBarBackgroundColor, true);\n        }\n      }\n      const { inactiveStatusBarStyle, activeStatusBarStyle } = this.props;\n      if (active) {\n        StatusBar.setBarStyle(activeStatusBarStyle, true);\n      } else {\n        StatusBar.setBarStyle(inactiveStatusBarStyle, true);\n      }\n    }\n  };\n  clearCloseTimeoutID = () => {\n    if (this.closeTimeoutID) {\n      clearTimeout(this.closeTimeoutID);\n    }\n  };\n  animate = (toValue, duration = 450, onComplete = () => {}) => {\n    const { useAnimationLock, useNativeDriver, isInteraction } = this.props;\n    if (useAnimationLock) {\n      this.animationLock = true;\n    }\n    Animated.spring(this.state.animationValue, {\n      toValue: toValue,\n      duration: duration,\n      friction: 9,\n      useNativeDriver,\n      isInteraction,\n    }).start(onComplete);\n  };\n  getStartDelta = (height, start) => {\n    const windowHeight = HEIGHT;\n    const startMin = 0 - height;\n    const startMax = windowHeight + height;\n    if (start < 0 && start != startMin) {\n      return startMin;\n    } else if (start > startMax) {\n      return startMax;\n    }\n    return start;\n  };\n  getEndDelta = (height, end) => {\n    const windowHeight = HEIGHT;\n    const endMin = 0;\n    const endMax = windowHeight;\n    if (end < endMin) {\n      return endMin;\n    } else if (end >= endMax) {\n      return endMax - height;\n    }\n    return end;\n  };\n  getOutputRange = (height, startDelta, endDelta) => {\n    if (!height) {\n      return [startDelta, endDelta];\n    }\n    const start = this.getStartDelta(height, startDelta);\n    const end = this.getEndDelta(height, endDelta);\n    return [start, end];\n  };\n  getStyleForType(type) {\n    const { defaultContainer } = this.props;\n    switch (type) {\n      case TYPE.info:\n        return [StyleSheet.flatten(defaultContainer), { backgroundColor: this.props.infoColor }];\n      case TYPE.warn:\n        return [StyleSheet.flatten(defaultContainer), { backgroundColor: this.props.warnColor }];\n      case TYPE.error:\n        return [StyleSheet.flatten(defaultContainer), { backgroundColor: this.props.errorColor }];\n      case TYPE.success:\n        return [StyleSheet.flatten(defaultContainer), { backgroundColor: this.props.successColor }];\n      default:\n        return [StyleSheet.flatten(defaultContainer), StyleSheet.flatten(this.props.containerStyle)];\n    }\n  }\n  getSourceForType(type) {\n    switch (type) {\n      case TYPE.info:\n        return this.props.infoImageSrc;\n      case TYPE.warn:\n        return this.props.warnImageSrc;\n      case TYPE.error:\n        return this.props.errorImageSrc;\n      case TYPE.success:\n        return this.props.successImageSrc;\n      default:\n        return this.props.imageSrc;\n    }\n  }\n  getBackgroundColorForType(type) {\n    switch (type) {\n      case TYPE.info:\n        return this.props.infoColor;\n      case TYPE.warn:\n        return this.props.warnColor;\n      case TYPE.error:\n        return this.props.errorColor;\n      case TYPE.success:\n        return this.props.successColor;\n      default:\n        return this.props.containerStyle.backgroundColor;\n    }\n  }\n  _onLayoutEvent(event) {\n    const { height } = event.nativeEvent.layout;\n    if (height > this.state.height) {\n      const { startDelta, endDelta } = this.props;\n      const start = this.getStartDelta(height, startDelta);\n      const end = this.getEndDelta(height, endDelta);\n      if (startDelta != start || endDelta != end) {\n        this.setState({ height });\n      }\n    }\n  }\n  _renderImage(source) {\n    if (this.props.renderImage) {\n      return this.props.renderImage(this.props, this.alertData);\n    }\n    return <ImageView style={StyleSheet.flatten(this.props.imageStyle)} source={source} />;\n  }\n  _renderTitle() {\n    if (this.props.renderTitle) {\n      return this.props.renderTitle(this.props, this.alertData);\n    }\n    const { titleTextProps, titleStyle, titleNumOfLines } = this.props;\n    return <TextView {...titleTextProps} style={StyleSheet.flatten(titleStyle)} numberOfLines={titleNumOfLines} text={this.alertData.title} />;\n  }\n  _renderMessage() {\n    if (this.props.renderMessage) {\n      return this.props.renderMessage(this.props, this.alertData);\n    }\n    const { messageTextProps, messageStyle, messageNumOfLines } = this.props;\n    return <TextView {...messageTextProps} style={StyleSheet.flatten(messageStyle)} numberOfLines={messageNumOfLines} text={this.alertData.message} />;\n  }\n  _renderCancel(show = false) {\n    if (!show) {\n      return null;\n    }\n    if (this.props.renderCancel) {\n      return this.props.renderCancel(this.props, this.alertData);\n    } else {\n      const { cancelBtnImageSrc, cancelBtnImageStyle } = this.props;\n      return <CancelButton imageStyle={cancelBtnImageStyle} imageSrc={cancelBtnImageSrc} onPress={() => this.closeAction(ACTION.cancel)} />;\n    }\n  }\n  render() {\n    const { isOpen } = this.state;\n    if (!isOpen) {\n      return null;\n    }\n    const {\n      elevation,\n      zIndex,\n      wrapperStyle,\n      tapToCloseEnabled,\n      accessibilityLabel,\n      testID,\n      accessible,\n      contentContainerStyle,\n      defaultTextContainer,\n      startDelta,\n      endDelta,\n      translucent,\n      updateStatusBar,\n      showCancel,\n    } = this.props;\n    const { animationValue, topValue, height } = this.state;\n    const { type, payload } = this.alertData;\n    let style = this.getStyleForType(type);\n    let imageSrc = this.getSourceForType(type);\n    // imageSrc is overridden when payload has source property\n    // other than it existing and not an object there is no validation to ensure it is image source expected by Image\n    if (payload && payload.hasOwnProperty('source') && payload.source && typeof payload.source !== 'object') {\n      imageSrc = payload.source;\n    }\n    if (IS_ANDROID && translucent) {\n      style = [style, { paddingTop: StatusBar.currentHeight }];\n    }\n    this.updateStatusBar(updateStatusBar, true);\n    const outputRange = this.getOutputRange(height, startDelta, endDelta);\n    let wrapperAnimStyle = {\n      transform: [\n        {\n          translateY: animationValue.interpolate({\n            inputRange: [0, 1],\n            outputRange,\n          }),\n        },\n      ],\n      position: 'absolute',\n      top: topValue,\n      left: 0,\n      right: 0,\n      elevation: elevation,\n    };\n    if (zIndex != null) {\n      wrapperAnimStyle['zIndex'] = zIndex;\n    }\n    let ContentView = SafeAreaView;\n    if (IS_IOS_BELOW_11 || IS_ANDROID) {\n      ContentView = View;\n    }\n    const activeOpacity = !tapToCloseEnabled || showCancel ? 1 : 0.95;\n    const onPress = !tapToCloseEnabled ? null : () => this.closeAction(ACTION.tap);\n    return (\n      <Animated.View ref={ref => this.mainView = ref} {...this.panResponder.panHandlers} style={[wrapperAnimStyle, wrapperStyle]}>\n        <TouchableOpacity\n          activeOpacity={activeOpacity}\n          onPress={onPress}\n          disabled={!tapToCloseEnabled}\n          onLayout={event => this._onLayoutEvent(event)}\n          testID={testID}\n          accessibilityLabel={accessibilityLabel}\n          accessible={accessible}\n        >\n          <View style={style}>\n            <ContentView style={StyleSheet.flatten(contentContainerStyle)}>\n              {this._renderImage(imageSrc)}\n              <View style={StyleSheet.flatten(defaultTextContainer)}>\n                {this._renderTitle()}\n                {this._renderMessage()}\n              </View>\n            </ContentView>\n            {this._renderCancel(showCancel)}\n          </View>\n        </TouchableOpacity>\n      </Animated.View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}