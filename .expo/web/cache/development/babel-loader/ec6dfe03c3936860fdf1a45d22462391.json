{"ast":null,"code":"var _jsxFileName = \"/Users/phakawat/Desktop/drowsy-mobile-app/node_modules/react-native-svg-charts/src/pie-chart.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport PropTypes from 'prop-types';\nimport * as shape from 'd3-shape';\nimport Svg, { G, Path } from 'react-native-svg';\n\nclass PieChart extends PureComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      height: 0,\n      width: 0\n    };\n  }\n\n  _onLayout(event) {\n    var {\n      nativeEvent: {\n        layout: {\n          height,\n          width\n        }\n      }\n    } = event;\n    this.setState({\n      height,\n      width\n    });\n  }\n\n  _calculateRadius(arg, max, defaultVal) {\n    if (typeof arg === 'string') {\n      return arg.split('%')[0] / 100 * max;\n    } else if (arg) {\n      return arg;\n    } else {\n      return defaultVal;\n    }\n  }\n\n  render() {\n    var {\n      data,\n      dataPoints,\n      innerRadius,\n      outerRadius,\n      labelRadius,\n      padAngle,\n      animate,\n      animationDuration,\n      style,\n      sort,\n      valueAccessor,\n      children,\n      startAngle,\n      endAngle\n    } = this.props;\n    var {\n      height,\n      width\n    } = this.state;\n\n    if (!data && dataPoints) {\n      throw \"\\\"dataPoints\\\" have been renamed to \\\"data\\\" to better reflect the fact that it's an array of objects\";\n    }\n\n    if (data.length === 0) {\n      return React.createElement(View, {\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        }\n      });\n    }\n\n    var maxRadius = Math.min(width, height) / 2;\n\n    if (Math.min(...data.map(obj => valueAccessor({\n      item: obj\n    }))) < 0) {\n      console.error(\"don't pass negative numbers to pie-chart, it makes no sense!\");\n    }\n\n    var _outerRadius = this._calculateRadius(outerRadius, maxRadius, maxRadius);\n\n    var _innerRadius = this._calculateRadius(innerRadius, maxRadius, 0);\n\n    var _labelRadius = this._calculateRadius(labelRadius, maxRadius, _outerRadius);\n\n    if (outerRadius > 0 && _innerRadius >= outerRadius) {\n      console.warn('innerRadius is equal to or greater than outerRadius');\n    }\n\n    var arcs = data.map(item => {\n      var arc = shape.arc().outerRadius(_outerRadius).innerRadius(_innerRadius).padAngle(padAngle);\n      item.arc && Object.entries(item.arc).forEach((_ref) => {\n        var [key, value] = _ref;\n\n        if (typeof arc[key] === 'function') {\n          if (typeof value === 'string') {\n            arc[key](value.split('%')[0] / 100 * _outerRadius);\n          } else {\n            arc[key](value);\n          }\n        }\n      });\n      return arc;\n    });\n    var labelArcs = data.map((item, index) => {\n      if (labelRadius) {\n        return shape.arc().outerRadius(_labelRadius).innerRadius(_labelRadius).padAngle(padAngle);\n      }\n\n      return arcs[index];\n    });\n    var pieSlices = shape.pie().value(d => valueAccessor({\n      item: d\n    })).sort(sort).startAngle(startAngle).endAngle(endAngle)(data);\n    var slices = pieSlices.map((slice, index) => _objectSpread({}, slice, {\n      pieCentroid: arcs[index].centroid(slice),\n      labelCentroid: labelArcs[index].centroid(slice)\n    }));\n    var extraProps = {\n      width,\n      height,\n      data,\n      slices\n    };\n    return React.createElement(View, {\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 1\n      },\n      onLayout: event => this._onLayout(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      }\n    }, height > 0 && width > 0 && React.createElement(Svg, {\n      style: {\n        height,\n        width\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      }\n    }, React.createElement(G, {\n      x: width / 2,\n      y: height / 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      }\n    }, React.Children.map(children, child => {\n      if (child && child.props.belowChart) {\n        return React.cloneElement(child, extraProps);\n      }\n\n      return null;\n    }), pieSlices.map((slice, index) => {\n      var {\n        key,\n        onPress,\n        svg\n      } = data[index];\n      return React.createElement(Path, _extends({\n        key: key,\n        onPress: onPress\n      }, svg, {\n        d: arcs[index](slice),\n        animate: animate,\n        animationDuration: animationDuration,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        }\n      }));\n    }), React.Children.map(children, child => {\n      if (child && !child.props.belowChart) {\n        return React.cloneElement(child, extraProps);\n      }\n\n      return null;\n    })))));\n  }\n\n}\n\nPieChart.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    svg: PropTypes.object,\n    key: PropTypes.any.isRequired,\n    value: PropTypes.number,\n    arc: PropTypes.object\n  })).isRequired,\n  innerRadius: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  outerRadius: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  labelRadius: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  padAngle: PropTypes.number,\n  animate: PropTypes.bool,\n  animationDuration: PropTypes.number,\n  style: PropTypes.any,\n  sort: PropTypes.func,\n  valueAccessor: PropTypes.func\n};\nPieChart.defaultProps = {\n  width: 100,\n  height: 100,\n  padAngle: 0.05,\n  startAngle: 0,\n  endAngle: Math.PI * 2,\n  valueAccessor: (_ref2) => {\n    var {\n      item\n    } = _ref2;\n    return item.value;\n  },\n  innerRadius: '50%',\n  sort: (a, b) => b.value - a.value\n};\nexport default PieChart;","map":{"version":3,"sources":["/Users/phakawat/Desktop/drowsy-mobile-app/node_modules/react-native-svg-charts/src/pie-chart.js"],"names":["React","PureComponent","PropTypes","shape","Svg","G","Path","PieChart","state","height","width","_onLayout","event","nativeEvent","layout","setState","_calculateRadius","arg","max","defaultVal","split","render","data","dataPoints","innerRadius","outerRadius","labelRadius","padAngle","animate","animationDuration","style","sort","valueAccessor","children","startAngle","endAngle","props","length","maxRadius","Math","min","map","obj","item","console","error","_outerRadius","_innerRadius","_labelRadius","warn","arcs","arc","Object","entries","forEach","key","value","labelArcs","index","pieSlices","pie","d","slices","slice","pieCentroid","centroid","labelCentroid","extraProps","flex","Children","child","belowChart","cloneElement","onPress","svg","propTypes","arrayOf","object","any","isRequired","number","oneOfType","string","bool","func","defaultProps","PI","a","b"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport { View } from 'react-native'\nimport PropTypes from 'prop-types'\nimport * as shape from 'd3-shape'\nimport Svg, { G, Path } from 'react-native-svg'\n\nclass PieChart extends PureComponent {\n    state = {\n        height: 0,\n        width: 0,\n    }\n\n    _onLayout(event) {\n        const {\n            nativeEvent: {\n                layout: { height, width },\n            },\n        } = event\n\n        this.setState({ height, width })\n    }\n\n    _calculateRadius(arg, max, defaultVal) {\n        if (typeof arg === 'string') {\n            return (arg.split('%')[0] / 100) * max\n        } else if (arg) {\n            return arg\n        } else {\n            return defaultVal\n        }\n    }\n\n    render() {\n        const {\n            data,\n            dataPoints,\n            innerRadius,\n            outerRadius,\n            labelRadius,\n            padAngle,\n            animate,\n            animationDuration,\n            style,\n            sort,\n            valueAccessor,\n            children,\n            startAngle,\n            endAngle,\n        } = this.props\n\n        const { height, width } = this.state\n\n        if (!data && dataPoints) {\n            throw `\"dataPoints\" have been renamed to \"data\" to better reflect the fact that it's an array of objects`\n        }\n\n        if (data.length === 0) {\n            return <View style={style} />\n        }\n\n        const maxRadius = Math.min(width, height) / 2\n\n        if (Math.min(...data.map((obj) => valueAccessor({ item: obj }))) < 0) {\n            console.error(\"don't pass negative numbers to pie-chart, it makes no sense!\")\n        }\n\n        const _outerRadius = this._calculateRadius(outerRadius, maxRadius, maxRadius)\n        const _innerRadius = this._calculateRadius(innerRadius, maxRadius, 0)\n        const _labelRadius = this._calculateRadius(labelRadius, maxRadius, _outerRadius)\n\n        if (outerRadius > 0 && _innerRadius >= outerRadius) {\n            console.warn('innerRadius is equal to or greater than outerRadius')\n        }\n\n        const arcs = data.map((item) => {\n            const arc = shape\n                .arc()\n                .outerRadius(_outerRadius)\n                .innerRadius(_innerRadius)\n                .padAngle(padAngle) // Angle between sections\n\n            item.arc &&\n                Object.entries(item.arc).forEach(([key, value]) => {\n                    if (typeof arc[key] === 'function') {\n                        if (typeof value === 'string') {\n                            arc[key]((value.split('%')[0] / 100) * _outerRadius)\n                        } else {\n                            arc[key](value)\n                        }\n                    }\n                })\n\n            return arc\n        })\n\n        const labelArcs = data.map((item, index) => {\n            if (labelRadius) {\n                return shape\n                    .arc()\n                    .outerRadius(_labelRadius)\n                    .innerRadius(_labelRadius)\n                    .padAngle(padAngle)\n            }\n            return arcs[index]\n        })\n\n        const pieSlices = shape\n            .pie()\n            .value((d) => valueAccessor({ item: d }))\n            .sort(sort)\n            .startAngle(startAngle)\n            .endAngle(endAngle)(data)\n\n        const slices = pieSlices.map((slice, index) => ({\n            ...slice,\n            pieCentroid: arcs[index].centroid(slice),\n            labelCentroid: labelArcs[index].centroid(slice),\n        }))\n\n        const extraProps = {\n            width,\n            height,\n            data,\n            slices,\n        }\n\n        return (\n            <View style={style}>\n                <View style={{ flex: 1 }} onLayout={(event) => this._onLayout(event)}>\n                    {height > 0 && width > 0 && (\n                        <Svg style={{ height, width }}>\n                            {/* center the progress circle*/}\n                            <G x={width / 2} y={height / 2}>\n                                {React.Children.map(children, (child) => {\n                                    if (child && child.props.belowChart) {\n                                        return React.cloneElement(child, extraProps)\n                                    }\n                                    return null\n                                })}\n                                {pieSlices.map((slice, index) => {\n                                    const { key, onPress, svg } = data[index]\n                                    return (\n                                        <Path\n                                            key={key}\n                                            onPress={onPress}\n                                            {...svg}\n                                            d={arcs[index](slice)}\n                                            animate={animate}\n                                            animationDuration={animationDuration}\n                                        />\n                                    )\n                                })}\n                                {React.Children.map(children, (child) => {\n                                    if (child && !child.props.belowChart) {\n                                        return React.cloneElement(child, extraProps)\n                                    }\n                                    return null\n                                })}\n                            </G>\n                        </Svg>\n                    )}\n                </View>\n            </View>\n        )\n    }\n}\n\nPieChart.propTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape({\n            svg: PropTypes.object,\n            key: PropTypes.any.isRequired,\n            value: PropTypes.number,\n            arc: PropTypes.object,\n        })\n    ).isRequired,\n    innerRadius: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    outerRadius: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    labelRadius: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    padAngle: PropTypes.number,\n    animate: PropTypes.bool,\n    animationDuration: PropTypes.number,\n    style: PropTypes.any,\n    sort: PropTypes.func,\n    valueAccessor: PropTypes.func,\n}\n\nPieChart.defaultProps = {\n    width: 100,\n    height: 100,\n    padAngle: 0.05,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    valueAccessor: ({ item }) => item.value,\n    innerRadius: '50%',\n    sort: (a, b) => b.value - a.value,\n}\n\nexport default PieChart\n"]},"metadata":{},"sourceType":"module"}