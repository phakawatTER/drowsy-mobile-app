{"ast":null,"code":"var _jsxFileName = \"/Users/phakawat/Desktop/drowsy-mobile-app/node_modules/react-native-easy-toast/index.js\";\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport RNViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport PropTypes from 'prop-types';\nvar ViewPropTypes = RNViewPropTypes || View.propTypes;\nexport var DURATION = {\n  LENGTH_SHORT: 500,\n  FOREVER: 0\n};\nvar {\n  height,\n  width\n} = Dimensions.get('window');\nexport default class Toast extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShow: false,\n      text: '',\n      opacityValue: new Animated.Value(this.props.opacity)\n    };\n  }\n\n  show(text, duration, callback) {\n    this.duration = typeof duration === 'number' ? duration : DURATION.LENGTH_SHORT;\n    this.callback = callback;\n    this.setState({\n      isShow: true,\n      text: text\n    });\n    this.animation = Animated.timing(this.state.opacityValue, {\n      toValue: this.props.opacity,\n      duration: this.props.fadeInDuration\n    });\n    this.animation.start(() => {\n      this.isShow = true;\n      if (duration !== DURATION.FOREVER) this.close();\n    });\n  }\n\n  close(duration) {\n    var delay = typeof duration === 'undefined' ? this.duration : duration;\n    if (delay === DURATION.FOREVER) delay = this.props.defaultCloseDelay || 250;\n    if (!this.isShow && !this.state.isShow) return;\n    this.timer && clearTimeout(this.timer);\n    this.timer = setTimeout(() => {\n      this.animation = Animated.timing(this.state.opacityValue, {\n        toValue: 0.0,\n        duration: this.props.fadeOutDuration\n      });\n      this.animation.start(() => {\n        this.setState({\n          isShow: false\n        });\n        this.isShow = false;\n\n        if (typeof this.callback === 'function') {\n          this.callback();\n        }\n      });\n    }, delay);\n  }\n\n  componentWillUnmount() {\n    this.animation && this.animation.stop();\n    this.timer && clearTimeout(this.timer);\n  }\n\n  render() {\n    var pos;\n\n    switch (this.props.position) {\n      case 'top':\n        pos = this.props.positionValue;\n        break;\n\n      case 'center':\n        pos = height / 2;\n        break;\n\n      case 'bottom':\n        pos = height - this.props.positionValue;\n        break;\n    }\n\n    var view = this.state.isShow ? React.createElement(View, {\n      style: [styles.container, {\n        top: pos\n      }],\n      pointerEvents: \"none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      }\n    }, React.createElement(Animated.View, {\n      style: [styles.content, {\n        opacity: this.state.opacityValue\n      }, this.props.style],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      }\n    }, React.isValidElement(this.state.text) ? this.state.text : React.createElement(Text, {\n      style: this.props.textStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      }\n    }, this.state.text))) : null;\n    return view;\n  }\n\n}\nvar styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    elevation: 999,\n    alignItems: 'center',\n    zIndex: 10000\n  },\n  content: {\n    backgroundColor: 'black',\n    borderRadius: 5,\n    padding: 10\n  },\n  text: {\n    color: 'white'\n  }\n});\nToast.propTypes = {\n  style: ViewPropTypes.style,\n  position: PropTypes.oneOf(['top', 'center', 'bottom']),\n  textStyle: Text.propTypes.style,\n  positionValue: PropTypes.number,\n  fadeInDuration: PropTypes.number,\n  fadeOutDuration: PropTypes.number,\n  opacity: PropTypes.number\n};\nToast.defaultProps = {\n  position: 'bottom',\n  textStyle: styles.text,\n  positionValue: 120,\n  fadeInDuration: 500,\n  fadeOutDuration: 500,\n  opacity: 1\n};","map":{"version":3,"sources":["/Users/phakawat/Desktop/drowsy-mobile-app/node_modules/react-native-easy-toast/index.js"],"names":["React","Component","PropTypes","ViewPropTypes","RNViewPropTypes","View","propTypes","DURATION","LENGTH_SHORT","FOREVER","height","width","Dimensions","get","Toast","constructor","props","state","isShow","text","opacityValue","Animated","Value","opacity","show","duration","callback","setState","animation","timing","toValue","fadeInDuration","start","close","delay","defaultCloseDelay","timer","clearTimeout","setTimeout","fadeOutDuration","componentWillUnmount","stop","render","pos","position","positionValue","view","styles","container","top","content","style","isValidElement","textStyle","StyleSheet","create","left","right","elevation","alignItems","zIndex","backgroundColor","borderRadius","padding","color","oneOf","Text","number","defaultProps"],"mappings":"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","sourcesContent":["/**\n * react-native-easy-toast\n * https://github.com/crazycodeboy/react-native-easy-toast\n * Email:crazycodeboy@gmail.com\n * Blog:http://jiapenghui.com\n * @flow\n */\n\nimport React, {Component} from 'react';\nimport {\n    StyleSheet,\n    View,\n    Animated,\n    Dimensions,\n    Text,\n    ViewPropTypes as RNViewPropTypes,\n} from 'react-native'\n\nimport PropTypes from 'prop-types';\nconst ViewPropTypes = RNViewPropTypes || View.propTypes;\nexport const DURATION = { \n    LENGTH_SHORT: 500,\n    FOREVER: 0,\n};\n\nconst {height, width} = Dimensions.get('window');\n\nexport default class Toast extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isShow: false,\n            text: '',\n            opacityValue: new Animated.Value(this.props.opacity),\n        }\n    }\n\n    show(text, duration, callback) {\n        this.duration = typeof duration === 'number' ? duration : DURATION.LENGTH_SHORT;\n        this.callback = callback;\n        this.setState({\n            isShow: true,\n            text: text,\n        });\n\n        this.animation = Animated.timing(\n            this.state.opacityValue,\n            {\n                toValue: this.props.opacity,\n                duration: this.props.fadeInDuration,\n            }\n        )\n        this.animation.start(() => {\n            this.isShow = true;\n            if(duration !== DURATION.FOREVER) this.close();\n        });\n    }\n\n    close( duration ) {\n        let delay = typeof duration === 'undefined' ? this.duration : duration;\n\n        if(delay === DURATION.FOREVER) delay = this.props.defaultCloseDelay || 250;\n\n        if (!this.isShow && !this.state.isShow) return;\n        this.timer && clearTimeout(this.timer);\n        this.timer = setTimeout(() => {\n            this.animation = Animated.timing(\n                this.state.opacityValue,\n                {\n                    toValue: 0.0,\n                    duration: this.props.fadeOutDuration,\n                }\n            )\n            this.animation.start(() => {\n                this.setState({\n                    isShow: false,\n                });\n                this.isShow = false;\n                if(typeof this.callback === 'function') {\n                    this.callback();\n                }\n            });\n        }, delay);\n    }\n\n    componentWillUnmount() {\n        this.animation && this.animation.stop()\n        this.timer && clearTimeout(this.timer);\n    }\n\n    render() {\n        let pos;\n        switch (this.props.position) {\n            case 'top':\n                pos = this.props.positionValue;\n                break;\n            case 'center':\n                pos = height / 2;\n                break;\n            case 'bottom':\n                pos = height - this.props.positionValue;\n                break;\n        }\n\n        const view = this.state.isShow ?\n            <View\n                style={[styles.container, { top: pos }]}\n                pointerEvents=\"none\"\n            >\n                <Animated.View\n                    style={[styles.content, { opacity: this.state.opacityValue }, this.props.style]}\n                >\n                    {React.isValidElement(this.state.text) ? this.state.text : <Text style={this.props.textStyle}>{this.state.text}</Text>}\n                </Animated.View>\n            </View> : null;\n        return view;\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        elevation: 999,\n        alignItems: 'center',\n        zIndex: 10000,\n    },\n    content: {\n        backgroundColor: 'black',\n        borderRadius: 5,\n        padding: 10,\n    },\n    text: {\n        color: 'white'\n    }\n});\n\nToast.propTypes = {\n    style: ViewPropTypes.style,\n    position: PropTypes.oneOf([\n        'top',\n        'center',\n        'bottom',\n    ]),\n    textStyle: Text.propTypes.style,\n    positionValue:PropTypes.number,\n    fadeInDuration:PropTypes.number,\n    fadeOutDuration:PropTypes.number,\n    opacity:PropTypes.number\n}\n\nToast.defaultProps = {\n    position: 'bottom',\n    textStyle: styles.text,\n    positionValue: 120,\n    fadeInDuration: 500,\n    fadeOutDuration: 500,\n    opacity: 1\n}\n"]},"metadata":{},"sourceType":"module"}