{"ast":null,"code":"var _jsxFileName = \"/Users/phakawat/Desktop/drowsy-mobile-app/screens/Dashboard.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React from \"react\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Spinner from \"react-native-loading-spinner-overlay\";\nimport { Block, Text, theme } from \"galio-framework\";\nimport { Button } from \"../components\";\nimport { Images, argonTheme } from \"../constants\";\nimport { backgroundColor } from \"../constants/colors\";\nimport { HeaderHeight } from \"../constants/utils\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { API_GET_NOTIFICATION_RECORD } from \"../link\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport firebase from \"firebase\";\nimport { config } from \"../firebase-config\";\nimport { PieChart } from 'react-native-svg-charts';\nimport 'react-native-svg';\nvar {\n  width,\n  height\n} = Dimensions.get(\"screen\");\nvar thumbMeasure = (width - 48 - 32) / 3;\nvar listWidth = 0;\n\nclass Profile extends React.Component {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n\n    this.fadeOut = () => {\n      this.state.fadeOut.setValue(0);\n      Animated.timing(this.state.fadeOut, {\n        toValue: 1,\n        duration: 10000\n      }).start();\n    };\n\n    this.loadUserInfo = _asyncToGenerator(function* () {\n      var userInfo = yield AsyncStorage.getItem(\"userInfo\");\n      userInfo = JSON.parse(userInfo);\n\n      _this.setState({\n        userInfo: userInfo\n      }, () => {});\n    });\n\n    this.searchEvent = query => {\n      this.setState({\n        searchQuery: query\n      });\n    };\n\n    this.showModal = () => {\n      this.modalRef.current.setModalVisible(true);\n    };\n\n    this.getNotificationRecord = () => {\n      this.setState({\n        isLoading: true\n      });\n      AsyncStorage.getItem(\"userInfo\").then(userInfo => {\n        var {\n          token,\n          uid,\n          from\n        } = JSON.parse(userInfo);\n        var payload = {\n          user_id: uid,\n          from: from\n        };\n        axios.create({\n          headers: {\n            \"Content-Type\": \"application/json\",\n            token: token\n          }\n        }).post(API_GET_NOTIFICATION_RECORD, payload).then(response => {\n          var {\n            code,\n            result\n          } = response.data;\n\n          if (code === 200) {\n            var eventGroup = {};\n            result.map((data, index) => {\n              var {\n                event\n              } = data;\n              if (!(event in eventGroup)) eventGroup[event] = 1;else eventGroup[event] += 1;\n            });\n            this.setState({\n              eventGroup,\n              notificationRecs: result,\n              isLoading: false\n            }, () => {\n              var notificationRef = firebase.database().ref().child(\"notification\").child(uid).limitToLast(1);\n              notificationRef.on(\"child_added\", snapshot => {\n                var found = this.state.notificationRecs.find(obj => {\n                  return obj.timestamp === snapshot.val().timestamp;\n                });\n\n                if (!found) {\n                  this.state.notificationRecs = [snapshot.val(), ...this.state.notificationRecs];\n                  var _eventGroup = {};\n                  this.state.notificationRecs.map((data, index) => {\n                    var {\n                      event\n                    } = data;\n                    if (!(event in _eventGroup)) _eventGroup[event] = 1;else _eventGroup[event] += 1;\n                  });\n                  this.setState({\n                    eventGroup: _eventGroup,\n                    notificationRecs: this.state.notificationRecs,\n                    modalVisible: true\n                  }, () => {\n                    var {\n                      timestamp,\n                      event\n                    } = snapshot.val();\n                    timestamp = moment(timestamp).format(\"DD-MM-YYYY HH:MM:ss a\");\n                  });\n                }\n              });\n            });\n          } else {}\n        }).catch(err => {\n          this.setState({\n            isLoading: false\n          });\n          console.log(err);\n        });\n      }).catch(err => {\n        this.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    this.getPieData = eventGroup => {\n      var pieData = Object.keys(eventGroup).map((key, index) => {\n        return {\n          value: eventGroup[key],\n          svg: {\n            fill: backgroundColor[index]\n          },\n          key: \"pie-\".concat(key)\n        };\n      });\n      return pieData;\n    };\n\n    this.getTodayRecord = () => {\n      var {\n        notificationRecs\n      } = this.state;\n      var currentTIME = moment(new Date()).format(\"YYYY-MM-DD\").toString();\n      var todayRecs = notificationRecs.filter(data => {\n        var timestamp = moment(data.timestamp).format(\"YYYY-MM-DD\").toString();\n        return moment(timestamp).isBetween(currentTIME, currentTIME, null, \"[]\");\n      });\n      return todayRecs;\n    };\n\n    this.getTodayEventGroup = todayRecs => {\n      var eventGroup = {};\n      todayRecs.map((data, index) => {\n        var {\n          event\n        } = data;\n        if (!(event in eventGroup)) eventGroup[event] = 1;else eventGroup[event] += 1;\n      });\n      return eventGroup;\n    };\n\n    this.state = {\n      eventGroup: {},\n      searchQuery: \"\",\n      fadeOut: new Animated.Value(0),\n      modalVisible: false,\n      shouldFetch: true,\n      headerHeight: 0,\n      slides: [],\n      notificationRecs: [],\n      isLoading: true,\n      displayPerPage: 15,\n      currentUser: \"\",\n      listIndex: 0,\n      userInfo: {\n        fname: \"\",\n        lname: \"\",\n        email: \"\"\n      }\n    };\n    this.modalRef = React.createRef();\n    this.listRef = React.createRef();\n    this.toastRef = React.createRef();\n\n    try {\n      firebase.initializeApp(config);\n    } catch (err) {}\n  }\n\n  componentWillMount() {\n    this.loadUserInfo();\n    this.getNotificationRecord();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    var headerHeight = nextProps.navigation.getParam(\"headerHeight\");\n\n    if (this.state.headerHeight !== headerHeight) {\n      this.setState({\n        headerHeight: headerHeight\n      });\n    }\n  }\n\n  componentDidMount() {\n    var {\n      navigation\n    } = this.props;\n    this.focusListener = navigation.addListener('didFocus', () => {\n      var {\n        notificationRecs\n      } = this.state;\n\n      if (notificationRecs.length === 0) {\n        this.getNotificationRecord();\n      }\n    });\n  }\n\n  componentDidUpdate(nextProps, nextState) {\n    if (this.state.notificationRecs.length !== 0 && this.state.modalVisible) {\n      if (nextState.notificationRecs.length !== this.state.notificationRecs) {\n        this.fadeOut();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    var {\n      uid\n    } = this.state.userInfo;\n    var notificationRef = firebase.database().ref().child(\"notification\").child(uid).limitToLast(1);\n    notificationRef.off(\"child_added\");\n  }\n\n  render() {\n    var todayRecs = this.getTodayRecord();\n    var todayEventGroup = this.getTodayEventGroup(todayRecs);\n    var {\n      eventGroup\n    } = this.state;\n\n    var renderPieChart = eventGroup => {\n      var data = this.getPieData(eventGroup);\n      return React.createElement(PieChart, {\n        data: data,\n        style: _objectSpread({}, styles.pieChart),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        }\n      });\n    };\n\n    var renderPieChartList = eventGroup => {\n      return this.state.eventGroup.length !== 0 ? Object.keys(eventGroup).map((key, index) => {\n        return React.createElement(Block, {\n          row: true,\n          style: {\n            paddingVertical: 5\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269\n          }\n        }, React.createElement(Block, {\n          style: {\n            borderRadius: 10,\n            width: 20,\n            height: 20,\n            backgroundColor: backgroundColor[index]\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270\n          }\n        }), React.createElement(Text, {\n          bold: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271\n          }\n        }, \" \", key), React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272\n          }\n        }, \" \", eventGroup[key]));\n      }) : null;\n    };\n\n    return React.createElement(Block, {\n      flex: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      }\n    }, React.createElement(Spinner, {\n      visible: this.state.isLoading,\n      textStyle: styles.spinnerTextStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      }\n    }), React.createElement(ScrollView, {\n      vertical: true,\n      showsVerticalScrollIndicator: false,\n      style: {\n        width\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      }\n    }, React.createElement(Block, {\n      flex: true,\n      style: _objectSpread({}, styles.profileCard),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      }\n    }, React.createElement(Block, {\n      flex: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      }\n    }, React.createElement(Block, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      }\n    }, React.createElement(Text, {\n      bold: true,\n      size: 28,\n      color: \"#32325D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      }\n    }, \"All Time Records\"), React.createElement(Text, {\n      size: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      }\n    }, \"total\", React.createElement(Text, {\n      color: argonTheme.COLORS.WARNING,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      }\n    }, \" \", this.state.notificationRecs.length, \" \"), \"record(s)\"), React.createElement(Block, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      }\n    }, renderPieChart(eventGroup), React.createElement(Block, {\n      flex: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      }\n    }, renderPieChartList(eventGroup)))), React.createElement(Block, {\n      middle: true,\n      style: {\n        marginTop: 30,\n        marginBottom: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      }\n    }, React.createElement(Block, {\n      style: styles.divider,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      }\n    })))), Object.keys(todayEventGroup).length !== 0 ? React.createElement(Block, {\n      flex: true,\n      style: _objectSpread({}, styles.profileCard),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      }\n    }, React.createElement(Block, {\n      flex: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      }\n    }, React.createElement(Block, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      }\n    }, React.createElement(Text, {\n      bold: true,\n      size: 28,\n      color: \"#32325D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      }\n    }, \"Today Records\"), React.createElement(Text, {\n      size: 20,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      }\n    }, \"total\", React.createElement(Text, {\n      color: argonTheme.COLORS.WARNING,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      }\n    }, \" \", todayRecs.length, \" \"), \"record(s)\"), React.createElement(Block, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      }\n    }, renderPieChart(todayEventGroup), React.createElement(Block, {\n      flex: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      }\n    }, renderPieChartList(todayEventGroup)))), React.createElement(Block, {\n      middle: true,\n      style: {\n        marginTop: 30,\n        marginBottom: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      }\n    }, React.createElement(Block, {\n      style: styles.divider,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      }\n    })))) : null));\n  }\n\n}\n\nvar styles = StyleSheet.create({\n  pieChart: {\n    height: 200\n  },\n  dimmer: {\n    backgroundColor: \"rgba(0,0,0,0.5)\",\n    minWidth: width,\n    minHeight: height,\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  activeDotStyle: {\n    backgroundColor: 'rgba(0, 0, 0, .7)'\n  },\n  dotStyle: {\n    backgroundColor: 'rgba(0, 0, 0, .2)'\n  },\n  pagination: {\n    marginHorizontal: 1.25,\n    borderRadius: 5,\n    backgroundColor: \"black\",\n    width: 10,\n    height: 10,\n    paddingHorizontal: 0,\n    paddingVertical: 0\n  },\n  mainContent: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'space-around'\n  },\n  image: {\n    width: 320,\n    height: 320\n  },\n  text: {\n    color: 'rgba(255, 255, 255, 0.8)',\n    backgroundColor: 'transparent',\n    textAlign: 'center',\n    paddingHorizontal: 16\n  },\n  title: {\n    fontSize: 22,\n    color: 'white',\n    backgroundColor: 'transparent',\n    textAlign: 'center',\n    marginBottom: 16\n  },\n  recordContainer: {\n    paddingTop: 20\n  },\n  profile: {\n    marginTop: Platform.OS === \"android\" ? -HeaderHeight : 0,\n    flex: 1\n  },\n  profileContainer: {\n    width: width,\n    height: height,\n    padding: 0,\n    zIndex: 1\n  },\n  profileBackground: {\n    width: width,\n    height: height / 2\n  },\n  profileCard: {\n    padding: theme.SIZES.BASE,\n    marginHorizontal: theme.SIZES.BASE,\n    marginTop: 20,\n    borderTopLeftRadius: 6,\n    borderTopRightRadius: 6,\n    backgroundColor: theme.COLORS.WHITE,\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowRadius: 8,\n    shadowOpacity: 0.2,\n    zIndex: 2\n  },\n  info: {\n    paddingHorizontal: 40\n  },\n  avatarContainer: {\n    position: \"relative\",\n    marginTop: -80\n  },\n  avatar: {\n    width: 124,\n    height: 124,\n    borderRadius: 62,\n    borderWidth: 1\n  },\n  nameInfo: {\n    marginTop: 35\n  },\n  divider: {\n    width: \"90%\",\n    borderWidth: 1,\n    borderColor: \"#E9ECEF\"\n  },\n  thumb: {\n    borderRadius: 4,\n    marginVertical: 4,\n    alignSelf: \"center\",\n    width: thumbMeasure,\n    height: thumbMeasure\n  }\n});\nexport default Profile;","map":{"version":3,"sources":["/Users/phakawat/Desktop/drowsy-mobile-app/screens/Dashboard.js"],"names":["React","Spinner","Block","Text","theme","Button","Images","argonTheme","backgroundColor","HeaderHeight","API_GET_NOTIFICATION_RECORD","axios","moment","firebase","config","PieChart","width","height","Dimensions","get","thumbMeasure","listWidth","Profile","Component","constructor","props","fadeOut","state","setValue","Animated","timing","toValue","duration","start","loadUserInfo","userInfo","AsyncStorage","getItem","JSON","parse","setState","searchEvent","query","searchQuery","showModal","modalRef","current","setModalVisible","getNotificationRecord","isLoading","then","token","uid","from","payload","user_id","create","headers","post","response","code","result","data","eventGroup","map","index","event","notificationRecs","notificationRef","database","ref","child","limitToLast","on","snapshot","found","find","obj","timestamp","val","modalVisible","format","catch","err","console","log","getPieData","pieData","Object","keys","key","value","svg","fill","getTodayRecord","currentTIME","Date","toString","todayRecs","filter","isBetween","getTodayEventGroup","Value","shouldFetch","headerHeight","slides","displayPerPage","currentUser","listIndex","fname","lname","email","createRef","listRef","toastRef","initializeApp","componentWillMount","componentWillReceiveProps","nextProps","navigation","getParam","componentDidMount","focusListener","addListener","length","componentDidUpdate","nextState","componentWillUnmount","off","render","todayEventGroup","renderPieChart","styles","pieChart","renderPieChartList","paddingVertical","borderRadius","spinnerTextStyle","profileCard","COLORS","WARNING","marginTop","marginBottom","divider","StyleSheet","dimmer","minWidth","minHeight","flex","flexDirection","justifyContent","alignItems","activeDotStyle","dotStyle","pagination","marginHorizontal","paddingHorizontal","mainContent","image","text","color","textAlign","title","fontSize","recordContainer","paddingTop","profile","Platform","OS","profileContainer","padding","zIndex","profileBackground","SIZES","BASE","borderTopLeftRadius","borderTopRightRadius","WHITE","shadowColor","shadowOffset","shadowRadius","shadowOpacity","info","avatarContainer","position","avatar","borderWidth","nameInfo","borderColor","thumb","marginVertical","alignSelf"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n    Animated,\n    StyleSheet,\n    Dimensions,\n    ScrollView,\n    Image,\n    ImageBackground,\n    Platform,\n    View,\n    Modal,\n    FlatList,\n    BackHandler,\n    TouchableHighlight\n\n} from \"react-native\";\nimport Spinner from \"react-native-loading-spinner-overlay\"\nimport { Block, Text, theme } from \"galio-framework\";\nimport { Button } from \"../components\";\nimport { Images, argonTheme } from \"../constants\";\nimport { backgroundColor } from \"../constants/colors\"\n// import {colors} from\nimport { HeaderHeight } from \"../constants/utils\";\nimport { AsyncStorage } from \"react-native\";\nimport { API_GET_NOTIFICATION_RECORD } from \"../link\"\nimport axios from \"axios\"\nimport moment from \"moment\"\nimport firebase from \"firebase\"\nimport { config } from \"../firebase-config\"\nimport { PieChart } from 'react-native-svg-charts'\nimport 'react-native-svg';\nconst { width, height } = Dimensions.get(\"screen\");\nconst thumbMeasure = (width - 48 - 32) / 3;\nvar listWidth = 0\n\nclass Profile extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            eventGroup: {},\n            searchQuery: \"\",\n            fadeOut: new Animated.Value(0),\n            modalVisible: false,\n            shouldFetch: true,\n            headerHeight: 0,\n            slides: [],\n            notificationRecs: [],\n            isLoading: true,\n            displayPerPage: 15,\n            currentUser: \"\",\n            listIndex: 0,\n            userInfo: {\n                fname: \"\",\n                lname: \"\",\n                email: \"\"\n            }\n        }\n        this.modalRef = React.createRef()\n        this.listRef = React.createRef()\n        this.toastRef = React.createRef()\n        try {\n            firebase.initializeApp(config)\n        } catch (err) { }\n\n    }\n\n    fadeOut = () => {\n        this.state.fadeOut.setValue(0)\n        Animated.timing(\n            this.state.fadeOut,\n            {\n                toValue: 1,\n                duration: 10000\n            }\n        ).start()\n\n    }\n\n    loadUserInfo = async () => {\n        let userInfo = await AsyncStorage.getItem(\"userInfo\")\n        userInfo = JSON.parse(userInfo)\n        this.setState({ userInfo: userInfo }, () => {\n        })\n    }\n\n    componentWillMount() {\n        this.loadUserInfo()\n        this.getNotificationRecord()\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        let headerHeight = nextProps.navigation.getParam(\"headerHeight\")\n        // recieve the height of header \n        if (this.state.headerHeight !== headerHeight) {\n            this.setState({ headerHeight: headerHeight })\n        }\n    }\n\n    componentDidMount() {\n        const { navigation } = this.props;\n        this.focusListener = navigation.addListener('didFocus', () => {\n            const { notificationRecs } = this.state\n            if (notificationRecs.length === 0) {\n                this.getNotificationRecord()\n            }\n        });\n\n    }\n\n    componentDidUpdate(nextProps, nextState) {\n\n        // IF NEW EVENT ADDED INTO THE RECORD SO ANIMATE LATEST BLOCK BACKGROUND\n        if (this.state.notificationRecs.length !== 0 && this.state.modalVisible) {\n            if (nextState.notificationRecs.length !== this.state.notificationRecs) {\n                this.fadeOut()\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        let { uid } = this.state.userInfo\n        let notificationRef = firebase\n            .database().ref()\n            .child(\"notification\").child(uid).limitToLast(1)\n        notificationRef.off(\"child_added\") // turn off notification on when unmount\n    }\n\n    searchEvent = (query) => {\n        this.setState({ searchQuery: query })\n\n    }\n\n    showModal = () => {\n        this.modalRef.current.setModalVisible(true)\n    }\n\n    getNotificationRecord = () => {\n        this.setState({\n            isLoading: true,\n        })\n        AsyncStorage.getItem(\"userInfo\").then(userInfo => {\n            let { token, uid, from } = JSON.parse(userInfo)\n            let payload = {\n                user_id: uid,\n                from: from\n            }\n            axios\n                .create({\n                    headers: { \"Content-Type\": \"application/json\", token: token }\n                })\n                .post(API_GET_NOTIFICATION_RECORD, payload)\n                .then(response => {\n                    let { code, result } = response.data\n                    if (code === 200) {\n                        let eventGroup = {}\n                        result.map((data, index) => {\n                            let { event } = data\n                            if (!(event in eventGroup)) eventGroup[event] = 1\n                            else eventGroup[event] += 1\n                        })\n                        this.setState({\n                            eventGroup,\n                            notificationRecs: result,\n                            isLoading: false\n                        }, () => {\n                            // realtime listener to new coming events\n                            // reference to user collection\n                            let notificationRef = firebase\n                                .database().ref()\n                                .child(\"notification\").child(uid).limitToLast(1)\n                            // child_added listener\n                            notificationRef.on(\"child_added\", (snapshot) => {\n                                let found = this.state.notificationRecs.find(obj => {\n                                    return obj.timestamp === snapshot.val().timestamp\n                                })\n                                // if new child added to the collection so update it \n                                if (!found) {\n                                    this.state.notificationRecs = [snapshot.val(), ... this.state.notificationRecs]\n                                    let eventGroup = {}\n                                    this.state.notificationRecs.map((data, index) => {\n                                        let { event } = data\n                                        if (!(event in eventGroup)) eventGroup[event] = 1\n                                        else eventGroup[event] += 1\n                                    })\n                                    this.setState({\n                                        eventGroup,\n                                        notificationRecs: this.state.notificationRecs,\n                                        modalVisible: true\n                                    }, () => {\n                                        // show toast\n                                        let { timestamp, event } = snapshot.val()\n                                        timestamp = moment(timestamp).format(\"DD-MM-YYYY HH:MM:ss a\")\n                                    })\n\n                                }\n                            })\n                        })\n                    } else {\n                    }\n                }).catch(err => {\n                    this.setState({ isLoading: false })\n                    console.log(err)\n                })\n        }).catch(err => {\n            this.setState({ isLoading: false })\n        })\n    }\n\n    getPieData = (eventGroup) => {\n        let pieData = Object.keys(eventGroup).map((key, index) => {\n            return ({\n                value: eventGroup[key],\n                svg: {\n                    fill: backgroundColor[index]\n                },\n                key: `pie-${key}`\n            })\n        })\n        return pieData\n\n\n    }\n\n    getTodayRecord = () => {\n        let { notificationRecs } = this.state\n        let currentTIME = moment(new Date()).format(\"YYYY-MM-DD\").toString()\n        let todayRecs = notificationRecs.filter(data => {\n            let timestamp = moment(data.timestamp).format(\"YYYY-MM-DD\").toString()\n            return moment(timestamp).isBetween(currentTIME, currentTIME, null, \"[]\")\n        })\n\n        return todayRecs\n\n    }\n\n    getTodayEventGroup = (todayRecs) => {\n        let eventGroup = {}\n        todayRecs.map((data, index) => {\n            let { event } = data\n            if (!(event in eventGroup)) eventGroup[event] = 1\n            else eventGroup[event] += 1\n        })\n        // alert(JSON.stringify(eventGroup))\n        return eventGroup\n\n    }\n\n    render() {\n        const todayRecs = this.getTodayRecord()\n        const todayEventGroup = this.getTodayEventGroup(todayRecs)\n        const { eventGroup } = this.state\n        const renderPieChart = (eventGroup) => {\n            let data = this.getPieData(eventGroup)\n            return (\n                <PieChart\n                    data={data}\n                    style={{ ...styles.pieChart }}\n                />\n            )\n        }\n\n        const renderPieChartList = (eventGroup) => {\n            return (this.state.eventGroup.length !== 0 ?\n                Object.keys(eventGroup).map((key, index) => {\n                    // alert(this.state.eventGroup[)\n                    return (\n                        <Block row style={{ paddingVertical: 5 }}>\n                            <Block style={{ borderRadius: 10, width: 20, height: 20, backgroundColor: backgroundColor[index] }} />\n                            <Text bold> {key}</Text>\n                            <Text> {eventGroup[key]}</Text>\n                        </Block>\n                    )\n                })\n                : null)\n        }\n\n        return (\n            <Block flex >\n                <Spinner\n                    visible={this.state.isLoading}\n                    textStyle={styles.spinnerTextStyle}\n                />\n                <ScrollView\n                    vertical={true}\n                    showsVerticalScrollIndicator={false}\n                    style={{\n                        width,\n                    }}\n                >\n                    <Block flex style={{ ...styles.profileCard }}>\n                        <Block flex>\n\n                            <Block>\n                                <Text bold size={28} color=\"#32325D\">All Time Records</Text>\n\n                                <Text size={20}>\n                                    total<Text color={argonTheme.COLORS.WARNING}> {this.state.notificationRecs.length} </Text>\n                                    record(s)\n                        </Text>\n                                {/* GRAPH WILL BE PUT HERE */}\n                                <Block >\n                                    {renderPieChart(eventGroup)}\n                                    <Block flex>\n                                        {renderPieChartList(eventGroup)}\n                                    </Block>\n\n                                </Block>\n\n\n                            </Block>\n                            <Block middle style={{ marginTop: 30, marginBottom: 16 }}>\n                                <Block style={styles.divider} />\n                            </Block>\n                        </Block>\n                    </Block>\n\n                    {\n                        Object.keys(todayEventGroup).length !== 0 ?\n                            <Block flex style={{ ...styles.profileCard }}>\n                                <Block flex>\n\n                                    <Block>\n                                        <Text bold size={28} color=\"#32325D\">Today Records</Text>\n\n                                        <Text size={20}>\n                                            total<Text color={argonTheme.COLORS.WARNING}> {todayRecs.length} </Text>\n                                            record(s)\n                        </Text>\n                                        {/* GRAPH WILL BE PUT HERE */}\n                                        <Block >\n                                            {renderPieChart(todayEventGroup)}\n                                            <Block flex>\n                                                {renderPieChartList(todayEventGroup)}\n                                            </Block>\n\n                                        </Block>\n\n\n                                    </Block>\n                                    <Block middle style={{ marginTop: 30, marginBottom: 16 }}>\n                                        <Block style={styles.divider} />\n                                    </Block>\n                                </Block>\n                            </Block>\n                            : null\n                    }\n\n                </ScrollView>\n            </Block >\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    pieChart: {\n        height: 200\n    },\n    dimmer: {\n        backgroundColor: \"rgba(0,0,0,0.5)\",\n        minWidth: width,\n        minHeight: height,\n        flex: 1,\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n\n    activeDotStyle: {\n        backgroundColor: 'rgba(0, 0, 0, .7)',\n    },\n    dotStyle: {\n        backgroundColor: 'rgba(0, 0, 0, .2)',\n    },\n    pagination: {\n        marginHorizontal: 1.25,\n        borderRadius: 5,\n        backgroundColor: \"black\",\n        width: 10,\n        height: 10,\n        paddingHorizontal: 0,\n        paddingVertical: 0\n    },\n    mainContent: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'space-around',\n    },\n    image: {\n        width: 320,\n        height: 320,\n    },\n    text: {\n        color: 'rgba(255, 255, 255, 0.8)',\n        backgroundColor: 'transparent',\n        textAlign: 'center',\n        paddingHorizontal: 16,\n    },\n    title: {\n        fontSize: 22,\n        color: 'white',\n        backgroundColor: 'transparent',\n        textAlign: 'center',\n        marginBottom: 16,\n    },\n    recordContainer: {\n        paddingTop: 20\n    },\n    profile: {\n        marginTop: Platform.OS === \"android\" ? -HeaderHeight : 0,\n        // marginBottom: -HeaderHeight * 2,\n        flex: 1\n    },\n    profileContainer: {\n        width: width,\n        height: height,\n        padding: 0,\n        zIndex: 1\n    },\n    profileBackground: {\n        width: width,\n        height: height / 2\n    },\n    profileCard: {\n        padding: theme.SIZES.BASE,\n        marginHorizontal: theme.SIZES.BASE,\n        marginTop: 20,\n        borderTopLeftRadius: 6,\n        borderTopRightRadius: 6,\n        backgroundColor: theme.COLORS.WHITE,\n        shadowColor: \"black\",\n        shadowOffset: { width: 0, height: 0 },\n        shadowRadius: 8,\n        shadowOpacity: 0.2,\n        zIndex: 2\n    },\n    info: {\n        paddingHorizontal: 40\n    },\n    avatarContainer: {\n        position: \"relative\",\n        marginTop: -80\n    },\n    avatar: {\n        width: 124,\n        height: 124,\n        borderRadius: 62,\n        borderWidth: 1,\n    },\n    nameInfo: {\n        marginTop: 35\n    },\n    divider: {\n        width: \"90%\",\n        borderWidth: 1,\n        borderColor: \"#E9ECEF\"\n    },\n    thumb: {\n        borderRadius: 4,\n        marginVertical: 4,\n        alignSelf: \"center\",\n        width: thumbMeasure,\n        height: thumbMeasure\n    }\n});\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}