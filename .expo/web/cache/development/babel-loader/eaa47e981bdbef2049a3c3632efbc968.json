{"ast":null,"code":"var _jsxFileName = \"/Users/phakawat/Desktop/drowsy-mobile-app/node_modules/react-navigation-tabs/src/views/BottomTabBar.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { ThemeColors, ThemeContext } from '@react-navigation/core';\nimport { SafeAreaView } from '@react-navigation/native';\nimport CrossFadeIcon from \"./CrossFadeIcon\";\nimport withDimensions from \"../utils/withDimensions\";\nvar majorVersion = parseInt(Platform.Version, 10);\nvar isIos = Platform.OS === 'ios';\nvar isIOS11 = majorVersion >= 11 && isIos;\nvar DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nclass TouchableWithoutFeedbackWrapper extends React.Component {\n  render() {\n    var _this$props = this.props,\n        {\n      onPress,\n      onLongPress,\n      testID,\n      accessibilityLabel,\n      accessibilityRole,\n      accessibilityStates\n    } = _this$props,\n        props = _objectWithoutProperties(_this$props, [\"onPress\", \"onLongPress\", \"testID\", \"accessibilityLabel\", \"accessibilityRole\", \"accessibilityStates\"]);\n\n    return React.createElement(TouchableWithoutFeedback, {\n      onPress: onPress,\n      onLongPress: onLongPress,\n      testID: testID,\n      hitSlop: {\n        left: 15,\n        right: 15,\n        top: 0,\n        bottom: 5\n      },\n      accessibilityLabel: accessibilityLabel,\n      accessibilityRole: accessibilityRole,\n      accessibilityStates: accessibilityStates,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      }\n    }, React.createElement(View, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      }\n    })));\n  }\n\n}\n\nclass TabBarBottom extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      layout: {\n        height: 0,\n        width: 0\n      },\n      keyboard: false,\n      visible: new Animated.Value(1)\n    };\n\n    this._handleKeyboardShow = () => this.setState({\n      keyboard: true\n    }, () => Animated.timing(this.state.visible, {\n      toValue: 0,\n      duration: 150,\n      useNativeDriver: true\n    }).start());\n\n    this._handleKeyboardHide = () => Animated.timing(this.state.visible, {\n      toValue: 1,\n      duration: 100,\n      useNativeDriver: true\n    }).start(() => {\n      this.setState({\n        keyboard: false\n      });\n    });\n\n    this._handleLayout = e => {\n      var {\n        layout\n      } = this.state;\n      var {\n        height,\n        width\n      } = e.nativeEvent.layout;\n\n      if (height === layout.height && width === layout.width) {\n        return;\n      }\n\n      this.setState({\n        layout: {\n          height,\n          width\n        }\n      });\n    };\n\n    this._getActiveTintColor = () => {\n      var {\n        activeTintColor\n      } = this.props;\n\n      if (!activeTintColor) {\n        return;\n      } else if (typeof activeTintColor === 'string') {\n        return activeTintColor;\n      }\n\n      return activeTintColor[this.context];\n    };\n\n    this._getInactiveTintColor = () => {\n      var {\n        inactiveTintColor\n      } = this.props;\n\n      if (!inactiveTintColor) {\n        return;\n      } else if (typeof inactiveTintColor === 'string') {\n        return inactiveTintColor;\n      }\n\n      return inactiveTintColor[this.context];\n    };\n\n    this._getActiveBackgroundColor = () => {\n      var {\n        activeBackgroundColor\n      } = this.props;\n\n      if (!activeBackgroundColor) {\n        return;\n      } else if (typeof activeBackgroundColor === 'string') {\n        return activeBackgroundColor;\n      }\n\n      return activeBackgroundColor[this.context];\n    };\n\n    this._getInactiveBackgroundColor = () => {\n      var {\n        inactiveBackgroundColor\n      } = this.props;\n\n      if (!inactiveBackgroundColor) {\n        return;\n      } else if (typeof inactiveBackgroundColor === 'string') {\n        return inactiveBackgroundColor;\n      }\n\n      return inactiveBackgroundColor[this.context];\n    };\n\n    this._renderLabel = (_ref) => {\n      var {\n        route,\n        focused\n      } = _ref;\n      var {\n        labelStyle,\n        showLabel,\n        showIcon,\n        allowFontScaling\n      } = this.props;\n\n      if (showLabel === false) {\n        return null;\n      }\n\n      var activeTintColor = this._getActiveTintColor();\n\n      var inactiveTintColor = this._getInactiveTintColor();\n\n      var label = this.props.getLabelText({\n        route\n      });\n      var tintColor = focused ? activeTintColor : inactiveTintColor;\n\n      if (typeof label === 'string') {\n        return React.createElement(Animated.Text, {\n          numberOfLines: 1,\n          style: [styles.label, {\n            color: tintColor\n          }, showIcon && this._shouldUseHorizontalLabels() ? styles.labelBeside : styles.labelBeneath, labelStyle],\n          allowFontScaling: allowFontScaling,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          }\n        }, label);\n      }\n\n      if (typeof label === 'function') {\n        return label({\n          route,\n          focused,\n          tintColor\n        });\n      }\n\n      return label;\n    };\n\n    this._renderIcon = (_ref2) => {\n      var {\n        route,\n        focused\n      } = _ref2;\n      var {\n        navigation,\n        renderIcon,\n        showIcon,\n        showLabel\n      } = this.props;\n\n      if (showIcon === false) {\n        return null;\n      }\n\n      var horizontal = this._shouldUseHorizontalLabels();\n\n      var activeTintColor = this._getActiveTintColor();\n\n      var inactiveTintColor = this._getInactiveTintColor();\n\n      var activeOpacity = focused ? 1 : 0;\n      var inactiveOpacity = focused ? 0 : 1;\n      return React.createElement(CrossFadeIcon, {\n        route: route,\n        horizontal: horizontal,\n        navigation: navigation,\n        activeOpacity: activeOpacity,\n        inactiveOpacity: inactiveOpacity,\n        activeTintColor: activeTintColor,\n        inactiveTintColor: inactiveTintColor,\n        renderIcon: renderIcon,\n        style: [styles.iconWithExplicitHeight, showLabel === false && !horizontal && styles.iconWithoutLabel, showLabel !== false && !horizontal && styles.iconWithLabel],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        }\n      });\n    };\n\n    this._shouldUseHorizontalLabels = () => {\n      var {\n        routes\n      } = this.props.navigation.state;\n      var {\n        isLandscape,\n        dimensions,\n        adaptive,\n        tabStyle\n      } = this.props;\n\n      if (!adaptive) {\n        return false;\n      }\n\n      if (Platform.isPad) {\n        var maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n        var flattenedStyle = StyleSheet.flatten(tabStyle);\n\n        if (flattenedStyle) {\n          if (typeof flattenedStyle.width === 'number') {\n            maxTabItemWidth = flattenedStyle.width;\n          } else if (typeof flattenedStyle.maxWidth === 'number') {\n            maxTabItemWidth = flattenedStyle.maxWidth;\n          }\n        }\n\n        return routes.length * maxTabItemWidth <= dimensions.width;\n      } else {\n        return isLandscape;\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (Platform.OS === 'ios') {\n      Keyboard.addListener('keyboardWillShow', this._handleKeyboardShow);\n      Keyboard.addListener('keyboardWillHide', this._handleKeyboardHide);\n    } else {\n      Keyboard.addListener('keyboardDidShow', this._handleKeyboardShow);\n      Keyboard.addListener('keyboardDidHide', this._handleKeyboardHide);\n    }\n  }\n\n  componentWillUnmount() {\n    if (Platform.OS === 'ios') {\n      Keyboard.removeListener('keyboardWillShow', this._handleKeyboardShow);\n      Keyboard.removeListener('keyboardWillHide', this._handleKeyboardHide);\n    } else {\n      Keyboard.removeListener('keyboardDidShow', this._handleKeyboardShow);\n      Keyboard.removeListener('keyboardDidHide', this._handleKeyboardHide);\n    }\n  }\n\n  render() {\n    var {\n      navigation,\n      keyboardHidesTabBar,\n      onTabPress,\n      onTabLongPress,\n      safeAreaInset,\n      style,\n      tabStyle\n    } = this.props;\n    var {\n      routes\n    } = navigation.state;\n    var isDark = this.context === 'dark';\n\n    var activeBackgroundColor = this._getActiveBackgroundColor();\n\n    var inactiveBackgroundColor = this._getInactiveBackgroundColor();\n\n    var tabBarStyle = [styles.tabBar, isDark ? styles.tabBarDark : styles.tabBarLight, this._shouldUseHorizontalLabels() && !Platform.isPad ? styles.tabBarCompact : styles.tabBarRegular, style];\n    return React.createElement(Animated.View, {\n      style: [styles.container, keyboardHidesTabBar ? {\n        transform: [{\n          translateY: this.state.visible.interpolate({\n            inputRange: [0, 1],\n            outputRange: [this.state.layout.height, 0]\n          })\n        }],\n        position: this.state.keyboard ? 'absolute' : null\n      } : null],\n      pointerEvents: keyboardHidesTabBar && this.state.keyboard ? 'none' : 'auto',\n      onLayout: this._handleLayout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      }\n    }, React.createElement(SafeAreaView, {\n      style: tabBarStyle,\n      forceInset: safeAreaInset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      }\n    }, routes.map((route, index) => {\n      var focused = index === navigation.state.index;\n      var scene = {\n        route,\n        focused\n      };\n      var accessibilityLabel = this.props.getAccessibilityLabel({\n        route\n      });\n      var accessibilityRole = this.props.getAccessibilityRole({\n        route\n      });\n      var accessibilityStates = this.props.getAccessibilityStates(scene);\n      var testID = this.props.getTestID({\n        route\n      });\n      var backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;\n      var ButtonComponent = this.props.getButtonComponent({\n        route\n      }) || TouchableWithoutFeedbackWrapper;\n      return React.createElement(ButtonComponent, {\n        key: route.key,\n        onPress: () => onTabPress({\n          route\n        }),\n        onLongPress: () => onTabLongPress({\n          route\n        }),\n        testID: testID,\n        accessibilityLabel: accessibilityLabel,\n        accessibilityRole: accessibilityRole,\n        accessibilityStates: accessibilityStates,\n        style: [styles.tab, {\n          backgroundColor\n        }, this._shouldUseHorizontalLabels() ? styles.tabLandscape : styles.tabPortrait, tabStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        }\n      }, this._renderIcon(scene), this._renderLabel(scene));\n    })));\n  }\n\n}\n\nTabBarBottom.contextType = ThemeContext;\nTabBarBottom.defaultProps = {\n  keyboardHidesTabBar: false,\n  activeTintColor: {\n    light: '#007AFF',\n    dark: '#fff'\n  },\n  inactiveTintColor: {\n    light: '#8e8e93',\n    dark: '#7f7f7f'\n  },\n  activeBackgroundColor: 'transparent',\n  inactiveBackgroundColor: 'transparent',\n  showLabel: true,\n  showIcon: true,\n  allowFontScaling: true,\n  adaptive: isIOS11,\n  safeAreaInset: {\n    bottom: 'always',\n    top: 'never'\n  }\n};\nvar DEFAULT_HEIGHT = 49;\nvar COMPACT_HEIGHT = 29;\nvar styles = StyleSheet.create({\n  tabBar: {\n    borderTopWidth: StyleSheet.hairlineWidth,\n    flexDirection: 'row'\n  },\n  tabBarLight: {\n    backgroundColor: ThemeColors.light.header,\n    borderTopColor: ThemeColors.light.headerBorder\n  },\n  tabBarDark: {\n    backgroundColor: ThemeColors.dark.header,\n    borderTopColor: ThemeColors.dark.headerBorder\n  },\n  container: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    elevation: 8\n  },\n  tabBarCompact: {\n    height: COMPACT_HEIGHT\n  },\n  tabBarRegular: {\n    height: DEFAULT_HEIGHT\n  },\n  tab: {\n    flex: 1,\n    alignItems: isIos ? 'center' : 'stretch'\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column'\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  iconWithoutLabel: {\n    flex: 1\n  },\n  iconWithLabel: {\n    flex: 1\n  },\n  iconWithExplicitHeight: {\n    height: Platform.isPad ? DEFAULT_HEIGHT : COMPACT_HEIGHT\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent'\n  },\n  labelBeneath: {\n    fontSize: 11,\n    marginBottom: 1.5\n  },\n  labelBeside: {\n    fontSize: 12,\n    marginLeft: 15\n  }\n});\nexport default withDimensions(TabBarBottom);","map":{"version":3,"sources":["/Users/phakawat/Desktop/drowsy-mobile-app/node_modules/react-navigation-tabs/src/views/BottomTabBar.js"],"names":["React","ThemeColors","ThemeContext","SafeAreaView","CrossFadeIcon","withDimensions","majorVersion","parseInt","Platform","Version","isIos","OS","isIOS11","DEFAULT_MAX_TAB_ITEM_WIDTH","TouchableWithoutFeedbackWrapper","Component","render","props","onPress","onLongPress","testID","accessibilityLabel","accessibilityRole","accessibilityStates","left","right","top","bottom","TabBarBottom","state","layout","height","width","keyboard","visible","Animated","Value","_handleKeyboardShow","setState","timing","toValue","duration","useNativeDriver","start","_handleKeyboardHide","_handleLayout","e","nativeEvent","_getActiveTintColor","activeTintColor","context","_getInactiveTintColor","inactiveTintColor","_getActiveBackgroundColor","activeBackgroundColor","_getInactiveBackgroundColor","inactiveBackgroundColor","_renderLabel","route","focused","labelStyle","showLabel","showIcon","allowFontScaling","label","getLabelText","tintColor","styles","color","_shouldUseHorizontalLabels","labelBeside","labelBeneath","_renderIcon","navigation","renderIcon","horizontal","activeOpacity","inactiveOpacity","iconWithExplicitHeight","iconWithoutLabel","iconWithLabel","routes","isLandscape","dimensions","adaptive","tabStyle","isPad","maxTabItemWidth","flattenedStyle","StyleSheet","flatten","maxWidth","length","componentDidMount","Keyboard","addListener","componentWillUnmount","removeListener","keyboardHidesTabBar","onTabPress","onTabLongPress","safeAreaInset","style","isDark","tabBarStyle","tabBar","tabBarDark","tabBarLight","tabBarCompact","tabBarRegular","container","transform","translateY","interpolate","inputRange","outputRange","position","map","index","scene","getAccessibilityLabel","getAccessibilityRole","getAccessibilityStates","getTestID","backgroundColor","ButtonComponent","getButtonComponent","key","tab","tabLandscape","tabPortrait","contextType","defaultProps","light","dark","DEFAULT_HEIGHT","COMPACT_HEIGHT","create","borderTopWidth","hairlineWidth","flexDirection","header","borderTopColor","headerBorder","elevation","flex","alignItems","justifyContent","textAlign","fontSize","marginBottom","marginLeft"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport React from 'react';\nimport {\n  Animated,\n  TouchableWithoutFeedback,\n  StyleSheet,\n  View,\n  Keyboard,\n  Platform,\n} from 'react-native';\nimport { ThemeColors, ThemeContext } from '@react-navigation/core';\nimport { SafeAreaView } from '@react-navigation/native';\n\nimport CrossFadeIcon from './CrossFadeIcon';\nimport withDimensions from '../utils/withDimensions';\n\nexport type ThemedColor = {\n  light: string,\n  dark: string,\n};\n\nexport type TabBarOptions = {\n  keyboardHidesTabBar: boolean,\n  activeTintColor?: string | ThemedColor,\n  inactiveTintColor?: string | ThemedColor,\n  activeBackgroundColor?: string | ThemedColor,\n  inactiveBackgroundColor?: string | ThemedColor,\n  allowFontScaling: boolean,\n  showLabel: boolean,\n  showIcon: boolean,\n  labelStyle: any,\n  tabStyle: any,\n  adaptive?: boolean,\n  style: any,\n};\n\ntype Props = TabBarOptions & {\n  navigation: any,\n  descriptors: any,\n  jumpTo: any,\n  onTabPress: any,\n  onTabLongPress: any,\n  getAccessibilityLabel: (props: { route: any }) => string,\n  getAccessibilityRole: (props: { route: any }) => string,\n  getAccessibilityStates: (props: { route: any }) => string[],\n  getButtonComponent: ({ route: any }) => any,\n  getLabelText: ({ route: any }) => any,\n  getTestID: (props: { route: any }) => string,\n  renderIcon: any,\n  dimensions: { width: number, height: number },\n  isLandscape: boolean,\n  safeAreaInset: { top: string, right: string, bottom: string, left: string },\n};\n\ntype State = {\n  layout: { height: number, width: number },\n  keyboard: boolean,\n  visible: Animated.Value,\n};\n\nconst majorVersion = parseInt(Platform.Version, 10);\nconst isIos = Platform.OS === 'ios';\nconst isIOS11 = majorVersion >= 11 && isIos;\n\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nclass TouchableWithoutFeedbackWrapper extends React.Component<*> {\n  render() {\n    const {\n      onPress,\n      onLongPress,\n      testID,\n      accessibilityLabel,\n      accessibilityRole,\n      accessibilityStates,\n      ...props\n    } = this.props;\n\n    return (\n      <TouchableWithoutFeedback\n        onPress={onPress}\n        onLongPress={onLongPress}\n        testID={testID}\n        hitSlop={{ left: 15, right: 15, top: 0, bottom: 5 }}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityRole={accessibilityRole}\n        accessibilityStates={accessibilityStates}\n      >\n        <View {...props} />\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nclass TabBarBottom extends React.Component<Props, State> {\n  static contextType = ThemeContext;\n\n  static defaultProps = {\n    keyboardHidesTabBar: false,\n    activeTintColor: {\n      light: '#007AFF',\n      dark: '#fff',\n    },\n    inactiveTintColor: {\n      light: '#8e8e93',\n      dark: '#7f7f7f',\n    },\n    activeBackgroundColor: 'transparent',\n    inactiveBackgroundColor: 'transparent',\n    showLabel: true,\n    showIcon: true,\n    allowFontScaling: true,\n    adaptive: isIOS11,\n    safeAreaInset: { bottom: 'always', top: 'never' },\n  };\n\n  state = {\n    layout: { height: 0, width: 0 },\n    keyboard: false,\n    visible: new Animated.Value(1),\n  };\n\n  componentDidMount() {\n    if (Platform.OS === 'ios') {\n      Keyboard.addListener('keyboardWillShow', this._handleKeyboardShow);\n      Keyboard.addListener('keyboardWillHide', this._handleKeyboardHide);\n    } else {\n      Keyboard.addListener('keyboardDidShow', this._handleKeyboardShow);\n      Keyboard.addListener('keyboardDidHide', this._handleKeyboardHide);\n    }\n  }\n\n  componentWillUnmount() {\n    if (Platform.OS === 'ios') {\n      Keyboard.removeListener('keyboardWillShow', this._handleKeyboardShow);\n      Keyboard.removeListener('keyboardWillHide', this._handleKeyboardHide);\n    } else {\n      Keyboard.removeListener('keyboardDidShow', this._handleKeyboardShow);\n      Keyboard.removeListener('keyboardDidHide', this._handleKeyboardHide);\n    }\n  }\n\n  _handleKeyboardShow = () =>\n    this.setState({ keyboard: true }, () =>\n      Animated.timing(this.state.visible, {\n        toValue: 0,\n        duration: 150,\n        useNativeDriver: true,\n      }).start()\n    );\n\n  _handleKeyboardHide = () =>\n    Animated.timing(this.state.visible, {\n      toValue: 1,\n      duration: 100,\n      useNativeDriver: true,\n    }).start(() => {\n      this.setState({ keyboard: false });\n    });\n\n  _handleLayout = e => {\n    const { layout } = this.state;\n    const { height, width } = e.nativeEvent.layout;\n\n    if (height === layout.height && width === layout.width) {\n      return;\n    }\n\n    this.setState({\n      layout: {\n        height,\n        width,\n      },\n    });\n  };\n\n  _getActiveTintColor = () => {\n    let { activeTintColor } = this.props;\n    if (!activeTintColor) {\n      return;\n    } else if (typeof activeTintColor === 'string') {\n      return activeTintColor;\n    }\n\n    return activeTintColor[this.context];\n  };\n\n  _getInactiveTintColor = () => {\n    let { inactiveTintColor } = this.props;\n    if (!inactiveTintColor) {\n      return;\n    } else if (typeof inactiveTintColor === 'string') {\n      return inactiveTintColor;\n    }\n\n    return inactiveTintColor[this.context];\n  };\n\n  _getActiveBackgroundColor = () => {\n    let { activeBackgroundColor } = this.props;\n    if (!activeBackgroundColor) {\n      return;\n    } else if (typeof activeBackgroundColor === 'string') {\n      return activeBackgroundColor;\n    }\n\n    return activeBackgroundColor[this.context];\n  };\n\n  _getInactiveBackgroundColor = () => {\n    let { inactiveBackgroundColor } = this.props;\n    if (!inactiveBackgroundColor) {\n      return;\n    } else if (typeof inactiveBackgroundColor === 'string') {\n      return inactiveBackgroundColor;\n    }\n\n    return inactiveBackgroundColor[this.context];\n  };\n\n  _renderLabel = ({ route, focused }) => {\n    const { labelStyle, showLabel, showIcon, allowFontScaling } = this.props;\n\n    if (showLabel === false) {\n      return null;\n    }\n\n    const activeTintColor = this._getActiveTintColor();\n    const inactiveTintColor = this._getInactiveTintColor();\n    const label = this.props.getLabelText({ route });\n    const tintColor = focused ? activeTintColor : inactiveTintColor;\n\n    if (typeof label === 'string') {\n      return (\n        <Animated.Text\n          numberOfLines={1}\n          style={[\n            styles.label,\n            { color: tintColor },\n            showIcon && this._shouldUseHorizontalLabels()\n              ? styles.labelBeside\n              : styles.labelBeneath,\n            labelStyle,\n          ]}\n          allowFontScaling={allowFontScaling}\n        >\n          {label}\n        </Animated.Text>\n      );\n    }\n\n    if (typeof label === 'function') {\n      return label({ route, focused, tintColor });\n    }\n\n    return label;\n  };\n\n  _renderIcon = ({ route, focused }) => {\n    const { navigation, renderIcon, showIcon, showLabel } = this.props;\n    if (showIcon === false) {\n      return null;\n    }\n\n    const horizontal = this._shouldUseHorizontalLabels();\n\n    const activeTintColor = this._getActiveTintColor();\n    const inactiveTintColor = this._getInactiveTintColor();\n    const activeOpacity = focused ? 1 : 0;\n    const inactiveOpacity = focused ? 0 : 1;\n\n    return (\n      <CrossFadeIcon\n        route={route}\n        horizontal={horizontal}\n        navigation={navigation}\n        activeOpacity={activeOpacity}\n        inactiveOpacity={inactiveOpacity}\n        activeTintColor={activeTintColor}\n        inactiveTintColor={inactiveTintColor}\n        renderIcon={renderIcon}\n        style={[\n          styles.iconWithExplicitHeight,\n          showLabel === false && !horizontal && styles.iconWithoutLabel,\n          showLabel !== false && !horizontal && styles.iconWithLabel,\n        ]}\n      />\n    );\n  };\n\n  _shouldUseHorizontalLabels = () => {\n    const { routes } = this.props.navigation.state;\n    const { isLandscape, dimensions, adaptive, tabStyle } = this.props;\n\n    if (!adaptive) {\n      return false;\n    }\n\n    if (Platform.isPad) {\n      let maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n\n      const flattenedStyle = StyleSheet.flatten(tabStyle);\n\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          maxTabItemWidth = flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          maxTabItemWidth = flattenedStyle.maxWidth;\n        }\n      }\n\n      return routes.length * maxTabItemWidth <= dimensions.width;\n    } else {\n      return isLandscape;\n    }\n  };\n\n  render() {\n    const {\n      navigation,\n      keyboardHidesTabBar,\n      onTabPress,\n      onTabLongPress,\n      safeAreaInset,\n      style,\n      tabStyle,\n    } = this.props;\n\n    const { routes } = navigation.state;\n    const isDark = this.context === 'dark';\n\n    const activeBackgroundColor = this._getActiveBackgroundColor();\n    const inactiveBackgroundColor = this._getInactiveBackgroundColor();\n\n    const tabBarStyle = [\n      styles.tabBar,\n      isDark ? styles.tabBarDark : styles.tabBarLight,\n      this._shouldUseHorizontalLabels() && !Platform.isPad\n        ? styles.tabBarCompact\n        : styles.tabBarRegular,\n      style,\n    ];\n\n    return (\n      <Animated.View\n        style={[\n          styles.container,\n          keyboardHidesTabBar\n            ? {\n                // When the keyboard is shown, slide down the tab bar\n                transform: [\n                  {\n                    translateY: this.state.visible.interpolate({\n                      inputRange: [0, 1],\n                      outputRange: [this.state.layout.height, 0],\n                    }),\n                  },\n                ],\n                // Absolutely position the tab bar so that the content is below it\n                // This is needed to avoid gap at bottom when the tab bar is hidden\n                position: this.state.keyboard ? 'absolute' : null,\n              }\n            : null,\n        ]}\n        pointerEvents={\n          keyboardHidesTabBar && this.state.keyboard ? 'none' : 'auto'\n        }\n        onLayout={this._handleLayout}\n      >\n        <SafeAreaView style={tabBarStyle} forceInset={safeAreaInset}>\n          {routes.map((route, index) => {\n            const focused = index === navigation.state.index;\n            const scene = { route, focused };\n            const accessibilityLabel = this.props.getAccessibilityLabel({\n              route,\n            });\n\n            const accessibilityRole = this.props.getAccessibilityRole({\n              route,\n            });\n\n            const accessibilityStates = this.props.getAccessibilityStates(\n              scene\n            );\n\n            const testID = this.props.getTestID({ route });\n\n            const backgroundColor = focused\n              ? activeBackgroundColor\n              : inactiveBackgroundColor;\n\n            const ButtonComponent =\n              this.props.getButtonComponent({ route }) ||\n              TouchableWithoutFeedbackWrapper;\n\n            return (\n              <ButtonComponent\n                key={route.key}\n                onPress={() => onTabPress({ route })}\n                onLongPress={() => onTabLongPress({ route })}\n                testID={testID}\n                accessibilityLabel={accessibilityLabel}\n                accessibilityRole={accessibilityRole}\n                accessibilityStates={accessibilityStates}\n                style={[\n                  styles.tab,\n                  { backgroundColor },\n                  this._shouldUseHorizontalLabels()\n                    ? styles.tabLandscape\n                    : styles.tabPortrait,\n                  tabStyle,\n                ]}\n              >\n                {this._renderIcon(scene)}\n                {this._renderLabel(scene)}\n              </ButtonComponent>\n            );\n          })}\n        </SafeAreaView>\n      </Animated.View>\n    );\n  }\n}\n\nconst DEFAULT_HEIGHT = 49;\nconst COMPACT_HEIGHT = 29;\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    borderTopWidth: StyleSheet.hairlineWidth,\n    flexDirection: 'row',\n  },\n  tabBarLight: {\n    backgroundColor: ThemeColors.light.header,\n    borderTopColor: ThemeColors.light.headerBorder,\n  },\n  tabBarDark: {\n    backgroundColor: ThemeColors.dark.header,\n    borderTopColor: ThemeColors.dark.headerBorder,\n  },\n  container: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    elevation: 8,\n  },\n  tabBarCompact: {\n    height: COMPACT_HEIGHT,\n  },\n  tabBarRegular: {\n    height: DEFAULT_HEIGHT,\n  },\n  tab: {\n    flex: 1,\n    alignItems: isIos ? 'center' : 'stretch',\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column',\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n  },\n  iconWithoutLabel: {\n    flex: 1,\n  },\n  iconWithLabel: {\n    flex: 1,\n  },\n  iconWithExplicitHeight: {\n    height: Platform.isPad ? DEFAULT_HEIGHT : COMPACT_HEIGHT,\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n  },\n  labelBeneath: {\n    fontSize: 11,\n    marginBottom: 1.5,\n  },\n  labelBeside: {\n    fontSize: 12,\n    marginLeft: 15,\n  },\n});\n\nexport default withDimensions(TabBarBottom);\n"]},"metadata":{},"sourceType":"module"}