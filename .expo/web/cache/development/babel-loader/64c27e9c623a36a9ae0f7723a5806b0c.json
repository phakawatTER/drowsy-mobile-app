{"ast":null,"code":"var _jsxFileName = \"/Users/phakawat/Desktop/drowsy-mobile-app/node_modules/react-native-svg-charts/src/progress-circle.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport PropTypes from 'prop-types';\nimport * as shape from 'd3-shape';\nimport Path from \"./animated-path\";\nimport Svg, { G } from 'react-native-svg';\n\nclass ProgressCircle extends PureComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      height: 0,\n      width: 0\n    };\n  }\n\n  _onLayout(event) {\n    var {\n      nativeEvent: {\n        layout: {\n          height,\n          width\n        }\n      }\n    } = event;\n    this.setState({\n      height,\n      width\n    });\n  }\n\n  render() {\n    var {\n      style,\n      progressColor,\n      backgroundColor,\n      strokeWidth,\n      startAngle,\n      endAngle,\n      animate,\n      animateDuration,\n      children,\n      cornerRadius\n    } = this.props;\n    var {\n      progress\n    } = this.props;\n    var {\n      height,\n      width\n    } = this.state;\n    var outerDiameter = Math.min(width, height);\n\n    if (!isFinite(progress) || isNaN(progress)) {\n      progress = 0;\n    }\n\n    var data = [{\n      key: 'rest',\n      value: 1 - progress,\n      color: backgroundColor\n    }, {\n      key: 'progress',\n      value: progress,\n      color: progressColor\n    }];\n    var pieSlices = shape.pie().value(d => d.value).sort(a => a.key === 'rest' ? 1 : -1).startAngle(startAngle).endAngle(endAngle)(data);\n    var arcs = pieSlices.map((slice, index) => _objectSpread({}, data[index], {}, slice, {\n      path: shape.arc().outerRadius(outerDiameter / 2).innerRadius(outerDiameter / 2 - strokeWidth).startAngle(index === 0 ? startAngle : slice.startAngle).endAngle(index === 0 ? endAngle : slice.endAngle).cornerRadius(cornerRadius)()\n    }));\n    var extraProps = {\n      width,\n      height\n    };\n    return React.createElement(View, {\n      style: style,\n      onLayout: event => this._onLayout(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      }\n    }, height > 0 && width > 0 && React.createElement(Svg, {\n      style: {\n        height,\n        width\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      }\n    }, React.createElement(G, {\n      x: width / 2,\n      y: height / 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      }\n    }, React.Children.map(children, child => {\n      if (child && child.props.belowChart) {\n        return React.cloneElement(child, extraProps);\n      }\n\n      return null;\n    }), arcs.map((shape, index) => {\n      return React.createElement(Path, {\n        key: index,\n        fill: shape.color,\n        d: shape.path,\n        animate: animate,\n        animationDuration: animateDuration,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        }\n      });\n    }), React.Children.map(children, child => {\n      if (child && !child.props.belowChart) {\n        return React.cloneElement(child, extraProps);\n      }\n\n      return null;\n    }))));\n  }\n\n}\n\nProgressCircle.propTypes = {\n  progress: PropTypes.number.isRequired,\n  style: PropTypes.any,\n  progressColor: PropTypes.any,\n  backgroundColor: PropTypes.any,\n  strokeWidth: PropTypes.number,\n  startAngle: PropTypes.number,\n  endAngle: PropTypes.number,\n  animate: PropTypes.bool,\n  cornerRadius: PropTypes.number,\n  animateDuration: PropTypes.number\n};\nProgressCircle.defaultProps = {\n  progressColor: 'black',\n  backgroundColor: '#ECECEC',\n  strokeWidth: 5,\n  startAngle: 0,\n  endAngle: Math.PI * 2,\n  cornerRadius: 45\n};\nexport default ProgressCircle;","map":{"version":3,"sources":["/Users/phakawat/Desktop/drowsy-mobile-app/node_modules/react-native-svg-charts/src/progress-circle.js"],"names":["React","PureComponent","PropTypes","shape","Path","Svg","G","ProgressCircle","state","height","width","_onLayout","event","nativeEvent","layout","setState","render","style","progressColor","backgroundColor","strokeWidth","startAngle","endAngle","animate","animateDuration","children","cornerRadius","props","progress","outerDiameter","Math","min","isFinite","isNaN","data","key","value","color","pieSlices","pie","d","sort","a","arcs","map","slice","index","path","arc","outerRadius","innerRadius","extraProps","Children","child","belowChart","cloneElement","propTypes","number","isRequired","any","bool","defaultProps","PI"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport { View } from 'react-native'\nimport PropTypes from 'prop-types'\nimport * as shape from 'd3-shape'\nimport Path from './animated-path'\nimport Svg, { G } from 'react-native-svg'\n\nclass ProgressCircle extends PureComponent {\n    state = {\n        height: 0,\n        width: 0,\n    }\n\n    _onLayout(event) {\n        const {\n            nativeEvent: {\n                layout: { height, width },\n            },\n        } = event\n        this.setState({ height, width })\n    }\n\n    render() {\n        const {\n            style,\n            progressColor,\n            backgroundColor,\n            strokeWidth,\n            startAngle,\n            endAngle,\n            animate,\n            animateDuration,\n            children,\n            cornerRadius,\n        } = this.props\n\n        let { progress } = this.props\n\n        const { height, width } = this.state\n\n        const outerDiameter = Math.min(width, height)\n\n        if (!isFinite(progress) || isNaN(progress)) {\n            progress = 0\n        }\n\n        // important order to have progress render over \"rest\"\n        const data = [\n            {\n                key: 'rest',\n                value: 1 - progress,\n                color: backgroundColor,\n            },\n            {\n                key: 'progress',\n                value: progress,\n                color: progressColor,\n            },\n        ]\n\n        const pieSlices = shape\n            .pie()\n            .value((d) => d.value)\n            .sort((a) => (a.key === 'rest' ? 1 : -1))\n            .startAngle(startAngle)\n            .endAngle(endAngle)(data)\n\n        const arcs = pieSlices.map((slice, index) => ({\n            ...data[index],\n            ...slice,\n            path: shape\n                .arc()\n                .outerRadius(outerDiameter / 2) // Radius of the pie\n                .innerRadius(outerDiameter / 2 - strokeWidth) // Inner radius: to create a donut or pie\n                .startAngle(index === 0 ? startAngle : slice.startAngle)\n                .endAngle(index === 0 ? endAngle : slice.endAngle)\n                .cornerRadius(cornerRadius)(),\n        }))\n\n        const extraProps = {\n            width,\n            height,\n        }\n\n        return (\n            <View style={style} onLayout={(event) => this._onLayout(event)}>\n                {height > 0 && width > 0 && (\n                    <Svg style={{ height, width }}>\n                        {/* center the progress circle*/}\n                        <G x={width / 2} y={height / 2}>\n                            {React.Children.map(children, (child) => {\n                                if (child && child.props.belowChart) {\n                                    return React.cloneElement(child, extraProps)\n                                }\n                                return null\n                            })}\n                            {arcs.map((shape, index) => {\n                                return (\n                                    <Path\n                                        key={index}\n                                        fill={shape.color}\n                                        d={shape.path}\n                                        animate={animate}\n                                        animationDuration={animateDuration}\n                                    />\n                                )\n                            })}\n                            {React.Children.map(children, (child) => {\n                                if (child && !child.props.belowChart) {\n                                    return React.cloneElement(child, extraProps)\n                                }\n                                return null\n                            })}\n                        </G>\n                    </Svg>\n                )}\n            </View>\n        )\n    }\n}\n\nProgressCircle.propTypes = {\n    progress: PropTypes.number.isRequired,\n    style: PropTypes.any,\n    progressColor: PropTypes.any,\n    backgroundColor: PropTypes.any,\n    strokeWidth: PropTypes.number,\n    startAngle: PropTypes.number,\n    endAngle: PropTypes.number,\n    animate: PropTypes.bool,\n    cornerRadius: PropTypes.number,\n    animateDuration: PropTypes.number,\n}\n\nProgressCircle.defaultProps = {\n    progressColor: 'black',\n    backgroundColor: '#ECECEC',\n    strokeWidth: 5,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    cornerRadius: 45,\n}\n\nexport default ProgressCircle\n"]},"metadata":{},"sourceType":"module"}