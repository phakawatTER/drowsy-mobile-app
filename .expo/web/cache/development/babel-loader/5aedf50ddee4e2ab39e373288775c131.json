{"ast":null,"code":"var _jsxFileName = \"/Users/phakawat/Desktop/drowsy-mobile-app/node_modules/react-native-svg-charts/src/chart/chart.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as array from 'd3-array';\nimport * as scale from 'd3-scale';\nimport * as shape from 'd3-shape';\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Svg from 'react-native-svg';\nimport Path from \"../animated-path\";\n\nclass Chart extends PureComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      width: 0,\n      height: 0\n    };\n  }\n\n  _onLayout(event) {\n    var {\n      nativeEvent: {\n        layout: {\n          height,\n          width\n        }\n      }\n    } = event;\n    this.setState({\n      height,\n      width\n    });\n  }\n\n  createPaths() {\n    throw 'Extending \"Chart\" requires you to override \"createPaths';\n  }\n\n  render() {\n    var {\n      data,\n      xAccessor,\n      yAccessor,\n      yScale,\n      xScale,\n      style,\n      animate,\n      animationDuration,\n      numberOfTicks,\n      contentInset: {\n        top = 0,\n        bottom = 0,\n        left = 0,\n        right = 0\n      },\n      gridMax,\n      gridMin,\n      clampX,\n      clampY,\n      svg,\n      children\n    } = this.props;\n    var {\n      width,\n      height\n    } = this.state;\n\n    if (data.length === 0) {\n      return React.createElement(View, {\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        }\n      });\n    }\n\n    var mappedData = data.map((item, index) => ({\n      y: yAccessor({\n        item,\n        index\n      }),\n      x: xAccessor({\n        item,\n        index\n      })\n    }));\n    var yValues = mappedData.map(item => item.y);\n    var xValues = mappedData.map(item => item.x);\n    var yExtent = array.extent([...yValues, gridMin, gridMax]);\n    var xExtent = array.extent([...xValues]);\n    var {\n      yMin = yExtent[0],\n      yMax = yExtent[1],\n      xMin = xExtent[0],\n      xMax = xExtent[1]\n    } = this.props;\n    var y = yScale().domain([yMin, yMax]).range([height - bottom, top]).clamp(clampY);\n    var x = xScale().domain([xMin, xMax]).range([left, width - right]).clamp(clampX);\n    var paths = this.createPaths({\n      data: mappedData,\n      x,\n      y\n    });\n    var ticks = y.ticks(numberOfTicks);\n\n    var extraProps = _objectSpread({\n      x,\n      y,\n      data,\n      ticks,\n      width,\n      height\n    }, paths);\n\n    return React.createElement(View, {\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 1\n      },\n      onLayout: event => this._onLayout(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      }\n    }, height > 0 && width > 0 && React.createElement(Svg, {\n      style: {\n        height,\n        width\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      }\n    }, React.Children.map(children, child => {\n      if (child && child.props.belowChart) {\n        return React.cloneElement(child, extraProps);\n      }\n\n      return null;\n    }), React.createElement(Path, _extends({\n      fill: 'none'\n    }, svg, {\n      d: paths.path,\n      animate: animate,\n      animationDuration: animationDuration,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      }\n    })), React.Children.map(children, child => {\n      if (child && !child.props.belowChart) {\n        return React.cloneElement(child, extraProps);\n      }\n\n      return null;\n    }))));\n  }\n\n}\n\nChart.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.object), PropTypes.arrayOf(PropTypes.number), PropTypes.arrayOf(PropTypes.array)]).isRequired,\n  svg: PropTypes.object,\n  style: PropTypes.any,\n  animate: PropTypes.bool,\n  animationDuration: PropTypes.number,\n  curve: PropTypes.func,\n  contentInset: PropTypes.shape({\n    top: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    bottom: PropTypes.number\n  }),\n  numberOfTicks: PropTypes.number,\n  gridMin: PropTypes.number,\n  gridMax: PropTypes.number,\n  yMin: PropTypes.any,\n  yMax: PropTypes.any,\n  xMin: PropTypes.any,\n  xMax: PropTypes.any,\n  clampX: PropTypes.bool,\n  clampY: PropTypes.bool,\n  xScale: PropTypes.func,\n  yScale: PropTypes.func,\n  xAccessor: PropTypes.func,\n  yAccessor: PropTypes.func\n};\nChart.defaultProps = {\n  svg: {},\n  width: 100,\n  height: 100,\n  curve: shape.curveLinear,\n  contentInset: {},\n  numberOfTicks: 10,\n  xScale: scale.scaleLinear,\n  yScale: scale.scaleLinear,\n  xAccessor: (_ref) => {\n    var {\n      index\n    } = _ref;\n    return index;\n  },\n  yAccessor: (_ref2) => {\n    var {\n      item\n    } = _ref2;\n    return item;\n  }\n};\nexport default Chart;","map":{"version":3,"sources":["/Users/phakawat/Desktop/drowsy-mobile-app/node_modules/react-native-svg-charts/src/chart/chart.js"],"names":["array","scale","shape","PropTypes","React","PureComponent","Svg","Path","Chart","state","width","height","_onLayout","event","nativeEvent","layout","setState","createPaths","render","data","xAccessor","yAccessor","yScale","xScale","style","animate","animationDuration","numberOfTicks","contentInset","top","bottom","left","right","gridMax","gridMin","clampX","clampY","svg","children","props","length","mappedData","map","item","index","y","x","yValues","xValues","yExtent","extent","xExtent","yMin","yMax","xMin","xMax","domain","range","clamp","paths","ticks","extraProps","flex","Children","child","belowChart","cloneElement","path","propTypes","oneOfType","arrayOf","object","number","isRequired","any","bool","curve","func","defaultProps","curveLinear","scaleLinear"],"mappings":"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","sourcesContent":["import * as array from 'd3-array'\nimport * as scale from 'd3-scale'\nimport * as shape from 'd3-shape'\nimport PropTypes from 'prop-types'\nimport React, { PureComponent } from 'react'\nimport { View } from 'react-native'\nimport Svg from 'react-native-svg'\nimport Path from '../animated-path'\n\nclass Chart extends PureComponent {\n    state = {\n        width: 0,\n        height: 0,\n    }\n\n    _onLayout(event) {\n        const {\n            nativeEvent: {\n                layout: { height, width },\n            },\n        } = event\n        this.setState({ height, width })\n    }\n\n    createPaths() {\n        throw 'Extending \"Chart\" requires you to override \"createPaths'\n    }\n\n    render() {\n        const {\n            data,\n            xAccessor,\n            yAccessor,\n            yScale,\n            xScale,\n            style,\n            animate,\n            animationDuration,\n            numberOfTicks,\n            contentInset: { top = 0, bottom = 0, left = 0, right = 0 },\n            gridMax,\n            gridMin,\n            clampX,\n            clampY,\n            svg,\n            children,\n        } = this.props\n\n        const { width, height } = this.state\n\n        if (data.length === 0) {\n            return <View style={style} />\n        }\n\n        const mappedData = data.map((item, index) => ({\n            y: yAccessor({ item, index }),\n            x: xAccessor({ item, index }),\n        }))\n\n        const yValues = mappedData.map((item) => item.y)\n        const xValues = mappedData.map((item) => item.x)\n\n        const yExtent = array.extent([...yValues, gridMin, gridMax])\n        const xExtent = array.extent([...xValues])\n\n        const { yMin = yExtent[0], yMax = yExtent[1], xMin = xExtent[0], xMax = xExtent[1] } = this.props\n\n        //invert range to support svg coordinate system\n        const y = yScale()\n            .domain([yMin, yMax])\n            .range([height - bottom, top])\n            .clamp(clampY)\n\n        const x = xScale()\n            .domain([xMin, xMax])\n            .range([left, width - right])\n            .clamp(clampX)\n\n        const paths = this.createPaths({\n            data: mappedData,\n            x,\n            y,\n        })\n\n        const ticks = y.ticks(numberOfTicks)\n\n        const extraProps = {\n            x,\n            y,\n            data,\n            ticks,\n            width,\n            height,\n            ...paths,\n        }\n\n        return (\n            <View style={style}>\n                <View style={{ flex: 1 }} onLayout={(event) => this._onLayout(event)}>\n                    {height > 0 && width > 0 && (\n                        <Svg style={{ height, width }}>\n                            {React.Children.map(children, (child) => {\n                                if (child && child.props.belowChart) {\n                                    return React.cloneElement(child, extraProps)\n                                }\n                                return null\n                            })}\n                            <Path\n                                fill={'none'}\n                                {...svg}\n                                d={paths.path}\n                                animate={animate}\n                                animationDuration={animationDuration}\n                            />\n                            {React.Children.map(children, (child) => {\n                                if (child && !child.props.belowChart) {\n                                    return React.cloneElement(child, extraProps)\n                                }\n                                return null\n                            })}\n                        </Svg>\n                    )}\n                </View>\n            </View>\n        )\n    }\n}\n\nChart.propTypes = {\n    data: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.object),\n        PropTypes.arrayOf(PropTypes.number),\n        PropTypes.arrayOf(PropTypes.array),\n    ]).isRequired,\n    svg: PropTypes.object,\n\n    style: PropTypes.any,\n\n    animate: PropTypes.bool,\n    animationDuration: PropTypes.number,\n\n    curve: PropTypes.func,\n    contentInset: PropTypes.shape({\n        top: PropTypes.number,\n        left: PropTypes.number,\n        right: PropTypes.number,\n        bottom: PropTypes.number,\n    }),\n    numberOfTicks: PropTypes.number,\n\n    gridMin: PropTypes.number,\n    gridMax: PropTypes.number,\n\n    yMin: PropTypes.any,\n    yMax: PropTypes.any,\n    xMin: PropTypes.any,\n    xMax: PropTypes.any,\n    clampX: PropTypes.bool,\n    clampY: PropTypes.bool,\n\n    xScale: PropTypes.func,\n    yScale: PropTypes.func,\n\n    xAccessor: PropTypes.func,\n    yAccessor: PropTypes.func,\n}\n\nChart.defaultProps = {\n    svg: {},\n    width: 100,\n    height: 100,\n    curve: shape.curveLinear,\n    contentInset: {},\n    numberOfTicks: 10,\n    xScale: scale.scaleLinear,\n    yScale: scale.scaleLinear,\n    xAccessor: ({ index }) => index,\n    yAccessor: ({ item }) => item,\n}\n\nexport default Chart\n"]},"metadata":{},"sourceType":"module"}