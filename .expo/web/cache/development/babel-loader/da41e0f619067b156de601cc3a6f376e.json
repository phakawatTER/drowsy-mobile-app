{"ast":null,"code":"var _jsxFileName = \"/Users/phakawat/Desktop/drowsy-mobile-app/components/Select.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PropTypes from 'prop-types';\nimport ModalDropdown from 'react-native-modal-dropdown';\nimport { Block, Text } from 'galio-framework';\nimport Icon from \"./Icon\";\nimport { argonTheme } from \"../constants\";\n\nclass DropDown extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      value: 1\n    };\n\n    this.handleOnSelect = (index, value) => {\n      var {\n        onSelect\n      } = this.props;\n      this.setState({\n        value: value\n      });\n      onSelect && onSelect(index, value);\n    };\n  }\n\n  render() {\n    var _this$props = this.props,\n        {\n      onSelect,\n      iconName,\n      iconFamily,\n      iconSize,\n      iconColor,\n      color,\n      textStyle,\n      style\n    } = _this$props,\n        props = _objectWithoutProperties(_this$props, [\"onSelect\", \"iconName\", \"iconFamily\", \"iconSize\", \"iconColor\", \"color\", \"textStyle\", \"style\"]);\n\n    var modalStyles = [styles.qty, color && {\n      backgroundColor: color\n    }, style];\n    var textStyles = [styles.text, textStyle];\n    return React.createElement(ModalDropdown, _extends({\n      style: modalStyles,\n      onSelect: this.handleOnSelect,\n      dropdownStyle: styles.dropdown,\n      dropdownTextStyle: {\n        paddingLeft: 16,\n        fontSize: 12\n      }\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      }\n    }), React.createElement(Block, {\n      flex: true,\n      row: true,\n      middle: true,\n      space: \"between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      }\n    }, React.createElement(Text, {\n      size: 12,\n      style: textStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      }\n    }, this.state.value), React.createElement(Icon, {\n      name: iconName || \"nav-down\",\n      family: iconFamily || \"ArgonExtra\",\n      size: iconSize || 10,\n      color: iconColor || argonTheme.COLORS.WHITE,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      }\n    })));\n  }\n\n}\n\nDropDown.propTypes = {\n  onSelect: PropTypes.func,\n  iconName: PropTypes.string,\n  iconFamily: PropTypes.string,\n  iconSize: PropTypes.number,\n  color: PropTypes.string,\n  textStyle: PropTypes.any\n};\nvar styles = StyleSheet.create({\n  qty: {\n    width: 100,\n    backgroundColor: argonTheme.COLORS.DEFAULT,\n    paddingHorizontal: 16,\n    paddingTop: 10,\n    paddingBottom: 9.5,\n    borderRadius: 4,\n    shadowColor: \"rgba(0, 0, 0, 0.1)\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 4,\n    shadowOpacity: 1\n  },\n  text: {\n    color: argonTheme.COLORS.WHITE,\n    fontWeight: '600'\n  },\n  dropdown: {\n    marginTop: 8,\n    marginLeft: -16,\n    width: 100\n  }\n});\nexport default DropDown;","map":{"version":3,"sources":["/Users/phakawat/Desktop/drowsy-mobile-app/components/Select.js"],"names":["React","PropTypes","ModalDropdown","Block","Text","Icon","argonTheme","DropDown","Component","state","value","handleOnSelect","index","onSelect","props","setState","render","iconName","iconFamily","iconSize","iconColor","color","textStyle","style","modalStyles","styles","qty","backgroundColor","textStyles","text","dropdown","paddingLeft","fontSize","COLORS","WHITE","propTypes","func","string","number","any","StyleSheet","create","width","DEFAULT","paddingHorizontal","paddingTop","paddingBottom","borderRadius","shadowColor","shadowOffset","height","shadowRadius","shadowOpacity","fontWeight","marginTop","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport PropTypes from 'prop-types';\nimport ModalDropdown from 'react-native-modal-dropdown';\nimport { Block, Text } from 'galio-framework';\n\nimport Icon from './Icon';\nimport { argonTheme } from '../constants';\n\nclass DropDown extends React.Component {\n  state = {\n    value: 1,\n  }\n\n  handleOnSelect = (index, value) => {\n    const { onSelect } = this.props;\n\n    this.setState({ value: value });\n    onSelect && onSelect(index, value);\n  }\n\n  render() {\n    const { onSelect, iconName, iconFamily, iconSize, iconColor, color, textStyle, style, ...props } = this.props;\n\n    const modalStyles = [\n      styles.qty,\n      color && { backgroundColor: color },\n      style\n    ];\n\n    const textStyles = [\n      styles.text,\n      textStyle\n    ];\n\n    return (\n      <ModalDropdown\n        style={modalStyles}\n        onSelect={this.handleOnSelect}\n        dropdownStyle={styles.dropdown}\n        dropdownTextStyle={{paddingLeft:16, fontSize:12}}\n        {...props}>\n        <Block flex row middle space=\"between\">\n          <Text size={12} style={textStyles}>{this.state.value}</Text>\n          <Icon name={iconName || \"nav-down\"} family={iconFamily || \"ArgonExtra\"} size={iconSize || 10} color={iconColor || argonTheme.COLORS.WHITE} />\n        </Block>\n      </ModalDropdown>\n    )\n  }\n}\n\nDropDown.propTypes = {\n  onSelect: PropTypes.func,\n  iconName: PropTypes.string,\n  iconFamily: PropTypes.string,\n  iconSize: PropTypes.number,\n  color: PropTypes.string,\n  textStyle: PropTypes.any,\n};\n\nconst styles = StyleSheet.create({\n  qty: {\n    width: 100,\n    backgroundColor: argonTheme.COLORS.DEFAULT,\n    paddingHorizontal: 16,\n    paddingTop: 10,\n    paddingBottom:9.5,\n    borderRadius: 4,\n    shadowColor: \"rgba(0, 0, 0, 0.1)\",\n    shadowOffset: { width: 0, height: 2 },\n    shadowRadius: 4,\n    shadowOpacity: 1,\n  },\n  text: {\n    color: argonTheme.COLORS.WHITE,\n    fontWeight: '600'\n  },\n  dropdown: {\n    marginTop: 8,\n    marginLeft: -16,\n    width: 100,\n  },\n});\n\nexport default DropDown;\n"]},"metadata":{},"sourceType":"module"}