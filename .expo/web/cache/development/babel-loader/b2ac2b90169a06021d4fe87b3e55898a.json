{"ast":null,"code":"var _jsxFileName = \"/Users/phakawat/Desktop/drowsy-mobile-app/node_modules/react-native-svg-charts/src/bar-chart/bar-chart.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as array from 'd3-array';\nimport * as scale from 'd3-scale';\nimport * as shape from 'd3-shape';\nimport PropTypes from 'prop-types';\nimport React, { PureComponent } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Svg from 'react-native-svg';\nimport Path from \"../animated-path\";\n\nclass BarChart extends PureComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      width: 0,\n      height: 0\n    };\n  }\n\n  _onLayout(event) {\n    var {\n      nativeEvent: {\n        layout: {\n          height,\n          width\n        }\n      }\n    } = event;\n    this.setState({\n      height,\n      width\n    });\n  }\n\n  calcXScale(domain) {\n    var {\n      horizontal,\n      contentInset: {\n        left = 0,\n        right = 0\n      },\n      spacingInner,\n      spacingOuter,\n      clamp\n    } = this.props;\n    var {\n      width\n    } = this.state;\n\n    if (horizontal) {\n      return scale.scaleLinear().domain(domain).range([left, width - right]).clamp(clamp);\n    }\n\n    return scale.scaleBand().domain(domain).range([left, width - right]).paddingInner([spacingInner]).paddingOuter([spacingOuter]);\n  }\n\n  calcYScale(domain) {\n    var {\n      horizontal,\n      contentInset: {\n        top = 0,\n        bottom = 0\n      },\n      spacingInner,\n      spacingOuter,\n      clamp\n    } = this.props;\n    var {\n      height\n    } = this.state;\n\n    if (horizontal) {\n      return scale.scaleBand().domain(domain).range([top, height - bottom]).paddingInner([spacingInner]).paddingOuter([spacingOuter]);\n    }\n\n    return scale.scaleLinear().domain(domain).range([height - bottom, top]).clamp(clamp);\n  }\n\n  calcAreas(x, y) {\n    var {\n      horizontal,\n      data,\n      yAccessor\n    } = this.props;\n    var values = data.map(item => yAccessor({\n      item\n    }));\n\n    if (horizontal) {\n      return data.map((bar, index) => ({\n        bar,\n        path: shape.area().y((value, _index) => _index === 0 ? y(index) : y(index) + y.bandwidth()).x0(x(0)).x1(value => x(value)).defined(value => typeof value === 'number')([values[index], values[index]])\n      }));\n    }\n\n    return data.map((bar, index) => ({\n      bar,\n      path: shape.area().y0(y(0)).y1(value => y(value)).x((value, _index) => _index === 0 ? x(index) : x(index) + x.bandwidth()).defined(value => typeof value === 'number')([values[index], values[index]])\n    }));\n  }\n\n  calcExtent() {\n    var {\n      data,\n      gridMin,\n      gridMax,\n      yAccessor\n    } = this.props;\n    var values = data.map(obj => yAccessor({\n      item: obj\n    }));\n    var extent = array.extent([...values, gridMax, gridMin]);\n    var {\n      yMin = extent[0],\n      yMax = extent[1]\n    } = this.props;\n    return [yMin, yMax];\n  }\n\n  calcIndexes() {\n    var {\n      data\n    } = this.props;\n    return data.map((_, index) => index);\n  }\n\n  render() {\n    var {\n      data,\n      animate,\n      animationDuration,\n      style,\n      numberOfTicks,\n      svg,\n      horizontal,\n      children\n    } = this.props;\n    var {\n      height,\n      width\n    } = this.state;\n\n    if (data.length === 0) {\n      return React.createElement(View, {\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        }\n      });\n    }\n\n    var extent = this.calcExtent();\n    var indexes = this.calcIndexes();\n    var ticks = array.ticks(extent[0], extent[1], numberOfTicks);\n    var xDomain = horizontal ? extent : indexes;\n    var yDomain = horizontal ? indexes : extent;\n    var x = this.calcXScale(xDomain);\n    var y = this.calcYScale(yDomain);\n    var bandwidth = horizontal ? y.bandwidth() : x.bandwidth();\n    var areas = this.calcAreas(x, y).filter(area => area.bar !== null && area.bar !== undefined && area.path !== null);\n    var extraProps = {\n      x,\n      y,\n      width,\n      height,\n      bandwidth,\n      ticks,\n      data\n    };\n    return React.createElement(View, {\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 1\n      },\n      onLayout: event => this._onLayout(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      }\n    }, height > 0 && width > 0 && React.createElement(Svg, {\n      style: {\n        height,\n        width\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      }\n    }, React.Children.map(children, child => {\n      if (child && child.props.belowChart) {\n        return React.cloneElement(child, extraProps);\n      }\n    }), areas.map((area, index) => {\n      var {\n        bar: {\n          svg: barSvg = {}\n        },\n        path\n      } = area;\n      return React.createElement(Path, _extends({\n        key: index\n      }, svg, barSvg, {\n        d: path,\n        animate: animate,\n        animationDuration: animationDuration,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        }\n      }));\n    }), React.Children.map(children, child => {\n      if (child && !child.props.belowChart) {\n        return React.cloneElement(child, extraProps);\n      }\n    }))));\n  }\n\n}\n\nBarChart.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.object])).isRequired,\n  style: PropTypes.any,\n  spacingInner: PropTypes.number,\n  spacingOuter: PropTypes.number,\n  animate: PropTypes.bool,\n  animationDuration: PropTypes.number,\n  contentInset: PropTypes.shape({\n    top: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    bottom: PropTypes.number\n  }),\n  numberOfTicks: PropTypes.number,\n  gridMin: PropTypes.number,\n  gridMax: PropTypes.number,\n  svg: PropTypes.object,\n  yMin: PropTypes.any,\n  yMax: PropTypes.any,\n  clamp: PropTypes.bool\n};\nBarChart.defaultProps = {\n  spacingInner: 0.05,\n  spacingOuter: 0.05,\n  contentInset: {},\n  numberOfTicks: 10,\n  svg: {},\n  yAccessor: (_ref) => {\n    var {\n      item\n    } = _ref;\n    return item;\n  }\n};\nexport default BarChart;","map":{"version":3,"sources":["/Users/phakawat/Desktop/drowsy-mobile-app/node_modules/react-native-svg-charts/src/bar-chart/bar-chart.js"],"names":["array","scale","shape","PropTypes","React","PureComponent","Svg","Path","BarChart","state","width","height","_onLayout","event","nativeEvent","layout","setState","calcXScale","domain","horizontal","contentInset","left","right","spacingInner","spacingOuter","clamp","props","scaleLinear","range","scaleBand","paddingInner","paddingOuter","calcYScale","top","bottom","calcAreas","x","y","data","yAccessor","values","map","item","bar","index","path","area","value","_index","bandwidth","x0","x1","defined","y0","y1","calcExtent","gridMin","gridMax","obj","extent","yMin","yMax","calcIndexes","_","render","animate","animationDuration","style","numberOfTicks","svg","children","length","indexes","ticks","xDomain","yDomain","areas","filter","undefined","extraProps","flex","Children","child","belowChart","cloneElement","barSvg","propTypes","arrayOf","oneOfType","number","object","isRequired","any","bool","defaultProps"],"mappings":"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","sourcesContent":["import * as array from 'd3-array'\nimport * as scale from 'd3-scale'\nimport * as shape from 'd3-shape'\nimport PropTypes from 'prop-types'\nimport React, { PureComponent } from 'react'\nimport { View } from 'react-native'\nimport Svg from 'react-native-svg'\nimport Path from '../animated-path'\n\nclass BarChart extends PureComponent {\n    state = {\n        width: 0,\n        height: 0,\n    }\n\n    _onLayout(event) {\n        const {\n            nativeEvent: {\n                layout: { height, width },\n            },\n        } = event\n        this.setState({ height, width })\n    }\n\n    calcXScale(domain) {\n        const {\n            horizontal,\n            contentInset: { left = 0, right = 0 },\n            spacingInner,\n            spacingOuter,\n            clamp,\n        } = this.props\n\n        const { width } = this.state\n\n        if (horizontal) {\n            return scale\n                .scaleLinear()\n                .domain(domain)\n                .range([left, width - right])\n                .clamp(clamp)\n        }\n\n        return scale\n            .scaleBand()\n            .domain(domain)\n            .range([left, width - right])\n            .paddingInner([spacingInner])\n            .paddingOuter([spacingOuter])\n    }\n\n    calcYScale(domain) {\n        const {\n            horizontal,\n            contentInset: { top = 0, bottom = 0 },\n            spacingInner,\n            spacingOuter,\n            clamp,\n        } = this.props\n\n        const { height } = this.state\n\n        if (horizontal) {\n            return scale\n                .scaleBand()\n                .domain(domain)\n                .range([top, height - bottom])\n                .paddingInner([spacingInner])\n                .paddingOuter([spacingOuter])\n        }\n\n        return scale\n            .scaleLinear()\n            .domain(domain)\n            .range([height - bottom, top])\n            .clamp(clamp)\n    }\n\n    calcAreas(x, y) {\n        const { horizontal, data, yAccessor } = this.props\n\n        const values = data.map((item) => yAccessor({ item }))\n\n        if (horizontal) {\n            return data.map((bar, index) => ({\n                bar,\n                path: shape\n                    .area()\n                    .y((value, _index) => (_index === 0 ? y(index) : y(index) + y.bandwidth()))\n                    .x0(x(0))\n                    .x1((value) => x(value))\n                    .defined((value) => typeof value === 'number')([values[index], values[index]]),\n            }))\n        }\n\n        return data.map((bar, index) => ({\n            bar,\n            path: shape\n                .area()\n                .y0(y(0))\n                .y1((value) => y(value))\n                .x((value, _index) => (_index === 0 ? x(index) : x(index) + x.bandwidth()))\n                .defined((value) => typeof value === 'number')([values[index], values[index]]),\n        }))\n    }\n\n    calcExtent() {\n        const { data, gridMin, gridMax, yAccessor } = this.props\n        const values = data.map((obj) => yAccessor({ item: obj }))\n\n        const extent = array.extent([...values, gridMax, gridMin])\n\n        const { yMin = extent[0], yMax = extent[1] } = this.props\n\n        return [yMin, yMax]\n    }\n\n    calcIndexes() {\n        const { data } = this.props\n        return data.map((_, index) => index)\n    }\n\n    render() {\n        const { data, animate, animationDuration, style, numberOfTicks, svg, horizontal, children } = this.props\n\n        const { height, width } = this.state\n\n        if (data.length === 0) {\n            return <View style={style} />\n        }\n\n        const extent = this.calcExtent()\n        const indexes = this.calcIndexes()\n        const ticks = array.ticks(extent[0], extent[1], numberOfTicks)\n\n        const xDomain = horizontal ? extent : indexes\n        const yDomain = horizontal ? indexes : extent\n\n        const x = this.calcXScale(xDomain)\n        const y = this.calcYScale(yDomain)\n\n        const bandwidth = horizontal ? y.bandwidth() : x.bandwidth()\n\n        const areas = this.calcAreas(x, y).filter(\n            (area) => area.bar !== null && area.bar !== undefined && area.path !== null\n        )\n\n        const extraProps = {\n            x,\n            y,\n            width,\n            height,\n            bandwidth,\n            ticks,\n            data,\n        }\n\n        return (\n            <View style={style}>\n                <View style={{ flex: 1 }} onLayout={(event) => this._onLayout(event)}>\n                    {height > 0 && width > 0 && (\n                        <Svg style={{ height, width }}>\n                            {React.Children.map(children, (child) => {\n                                if (child && child.props.belowChart) {\n                                    return React.cloneElement(child, extraProps)\n                                }\n                            })}\n                            {areas.map((area, index) => {\n                                const {\n                                    bar: { svg: barSvg = {} },\n                                    path,\n                                } = area\n\n                                return (\n                                    <Path\n                                        key={index}\n                                        {...svg}\n                                        {...barSvg}\n                                        d={path}\n                                        animate={animate}\n                                        animationDuration={animationDuration}\n                                    />\n                                )\n                            })}\n                            {React.Children.map(children, (child) => {\n                                if (child && !child.props.belowChart) {\n                                    return React.cloneElement(child, extraProps)\n                                }\n                            })}\n                        </Svg>\n                    )}\n                </View>\n            </View>\n        )\n    }\n}\n\nBarChart.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.object])).isRequired,\n    style: PropTypes.any,\n    spacingInner: PropTypes.number,\n    spacingOuter: PropTypes.number,\n    animate: PropTypes.bool,\n    animationDuration: PropTypes.number,\n    contentInset: PropTypes.shape({\n        top: PropTypes.number,\n        left: PropTypes.number,\n        right: PropTypes.number,\n        bottom: PropTypes.number,\n    }),\n    numberOfTicks: PropTypes.number,\n    gridMin: PropTypes.number,\n    gridMax: PropTypes.number,\n    svg: PropTypes.object,\n\n    yMin: PropTypes.any,\n    yMax: PropTypes.any,\n    clamp: PropTypes.bool,\n}\n\nBarChart.defaultProps = {\n    spacingInner: 0.05,\n    spacingOuter: 0.05,\n    contentInset: {},\n    numberOfTicks: 10,\n    svg: {},\n    yAccessor: ({ item }) => item,\n}\n\nexport default BarChart\n"]},"metadata":{},"sourceType":"module"}