{"ast":null,"code":"var _jsxFileName = \"/Users/phakawat/Desktop/drowsy-mobile-app/components/LiveStream.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React from \"react\";\nimport { Block, Text, theme } from \"galio-framework\";\nimport { AntDesign } from '@expo/vector-icons';\nimport { LIVESTREAM_SOCKET_ENDPOINT } from \"../link\";\nimport { Video } from \"expo-av\";\nimport moment from \"moment-timezone\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nvar {\n  width,\n  height\n} = Dimensions.get(\"screen\");\nvar thumbMeasure = (width - 48 - 32) / 3;\n\nclass LiveStream extends React.Component {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n    this.connectToImageSocket = _asyncToGenerator(function* () {\n      _this.s = require(\"socket.io-client\")(LIVESTREAM_SOCKET_ENDPOINT);\n      var userInfo = _this.props.userInfo;\n\n      _this.setState({\n        userInfo\n      });\n\n      var {\n        uid\n      } = userInfo;\n\n      _this.s.on(\"connect\", () => {\n        console.log(\"connected to ter's socket\");\n      });\n\n      _this.s.on(\"live_stream_\".concat(uid), data => {\n        var {\n          jpg_text,\n          coor,\n          ear,\n          gas\n        } = data;\n        var uri = \"data:image/jpeg;base64,\".concat(jpg_text);\n\n        try {\n          clearTimeout(_this.image_timer);\n        } catch (err) {}\n\n        try {\n          if (!_this.state.isLive) {\n            _this.props.setIsLive(true);\n\n            _this.setState({\n              isLive: true\n            });\n          }\n\n          _this.setState({\n            coor,\n            ear,\n            gas\n          });\n\n          _this.refs.streamVDO.setNativeProps({\n            source: [{\n              uri\n            }]\n          });\n\n          _this.image_timer = setTimeout(() => {\n            _this.props.setIsLive(false);\n\n            _this.setState({\n              isLive: false\n            });\n\n            _this.refs.streamVDO.setNativeProps({\n              source: []\n            });\n          }, 2000);\n        } catch (err) {}\n      });\n\n      _this.s.on(\"disconnect\", () => {\n        console.log(\"disconnected from ter's socket\");\n      });\n    });\n    this.state = {\n      modal_opacity: new Animated.Value(0),\n      display_livestream: \"none\",\n      vdo_uri: null,\n      liveVDO: false,\n      isLive: false,\n      ear: 0,\n      coor: [0, 0],\n      gas: {\n        co: 0,\n        lpg: 0,\n        smoke: 0\n      }\n    };\n  }\n\n  componentWillMount() {\n    this.connectToImageSocket();\n  }\n\n  componentWillUnmount() {\n    this.s.disconnect();\n  }\n\n  componentDidUpdate(prevProps, prevstate) {\n    if (JSON.stringify(prevProps.userInfo) !== JSON.stringify(this.props.userInfo)) {\n      this.s.disconnect();\n      this.connectToImageSocket();\n    }\n\n    if (prevProps.showLive !== this.props.showLive) {\n      if (this.props.showLive == true) {\n        this.setState({\n          display_livestream: \"\"\n        }, () => {\n          this.state.modal_opacity.setValue(0);\n          Animated.timing(this.state.modal_opacity, {\n            toValue: 1,\n            duration: 300\n          }).start();\n        });\n      } else {\n        Animated.timing(this.state.modal_opacity, {\n          toValue: 0,\n          duration: 300\n        }).start(() => {\n          this.setState({\n            display_livestream: \"none\"\n          });\n        });\n      }\n    }\n  }\n\n  render() {\n    var {\n      isLive,\n      ear,\n      coor,\n      gas\n    } = this.state;\n    return React.createElement(React.Fragment, null, React.createElement(Animated.View, {\n      style: _objectSpread({\n        display: this.state.display_livestream\n      }, styles.dimmer, {\n        zIndex: 100,\n        opacity: this.state.modal_opacity\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      }\n    }, React.createElement(View, {\n      style: {\n        position: \"absolute\",\n        top: \"7.5%\",\n        right: \"5%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      }\n    }, React.createElement(TouchableHighlight, {\n      onPress: () => this.props.setShowLive(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      }\n    }, React.createElement(AntDesign, {\n      name: \"closecircleo\",\n      size: 30,\n      color: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      }\n    }))), !this.props.vdo_uri ? React.createElement(Block, {\n      style: {\n        width: \"100%\",\n        height: 300,\n        backgroundColor: \"black\"\n      },\n      middle: true,\n      space: \"evenly\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      }\n    }, React.createElement(Image, {\n      ref: \"streamVDO\",\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      }\n    }), React.createElement(Block, {\n      style: _objectSpread({}, styles.liveLogo, {}, {\n        backgroundColor: isLive ? \"crimson\" : \"grey\"\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      }\n    }, React.createElement(Text, {\n      bold: true,\n      color: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      }\n    }, \"Live\"))) : React.createElement(React.Fragment, null, React.createElement(Block, {\n      style: styles.vdo_title_block,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      }\n    }, React.createElement(Text, {\n      bold: true,\n      color: \"white\",\n      size: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      }\n    }, React.createElement(AntDesign, {\n      name: \"videocamera\",\n      size: 22,\n      color: \"crimson\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      }\n    }), \" \", \"RECORDED VIDEO\")), React.createElement(Block, {\n      style: styles.vdo_title_block,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      }\n    }, React.createElement(Text, {\n      bold: true,\n      color: \"white\",\n      size: 15,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      }\n    }, \"ACCTIME:\", \" \"), React.createElement(Text, {\n      color: \"white\",\n      size: 15,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      }\n    }, this.props.trip_acctime)), React.createElement(Block, {\n      style: styles.vdo_title_block,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      }\n    }, React.createElement(Text, {\n      bold: true,\n      color: \"white\",\n      size: 15,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      }\n    }, \"DATETIME:\", \" \"), React.createElement(Text, {\n      color: \"white\",\n      size: 15,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      }\n    }, moment.unix(this.props.trip_acctime).format(\"DD-MM-YYYY HH:mm:ss\"))), React.createElement(Video, {\n      ref: r => this.vid = r,\n      source: {\n        uri: this.props.vdo_uri\n      },\n      rate: 1.0,\n      volume: 1.0,\n      muted: false,\n      resizeMode: \"cover\",\n      repeat: true,\n      useNativeControls: true,\n      shouldPlay: true,\n      style: {\n        width: \"100%\",\n        height: 300\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      }\n    })), !this.props.vdo_uri ? React.createElement(Block, {\n      style: _objectSpread({}, styles.info_block),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      }\n    }, React.createElement(Text, {\n      bold: true,\n      style: styles.info_text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      }\n    }, \"Current Data\"), React.createElement(Text, {\n      style: styles.info_text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      }\n    }, \"EAR: \", ear.toFixed(2)), React.createElement(Text, {\n      style: styles.info_text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      }\n    }, \"Coordinate: (\", coor[0].toFixed(2), \",\", coor[1].toFixed(2), \")\"), Object.keys(gas).map(key => {\n      return React.createElement(Text, {\n        style: styles.info_text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        }\n      }, key.toUpperCase(), \": \", gas[key].toFixed(2), \" ppm\");\n    })) : null));\n  }\n\n}\n\nvar styles = StyleSheet.create({\n  vdo_title_block: {\n    padding: 10,\n    flexDirection: \"row\",\n    width: \"100%\"\n  },\n  backButton: {\n    display: \"flex\",\n    backgroundColor: \"transparent\"\n  },\n  info_block: {\n    alignSelf: \"baseline\",\n    padding: 10,\n    width: \"100%\"\n  },\n  info_text: {\n    color: \"white\"\n  },\n  liveLogo: {\n    backgroundColor: \"crimson\",\n    position: \"absolute\",\n    top: 10,\n    left: 2.5,\n    padding: 5,\n    borderRadius: 2.5\n  },\n  dimmer: {\n    position: \"absolute\",\n    backgroundColor: \"rgba(0,0,0,0.9)\",\n    minWidth: width,\n    minHeight: height,\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default LiveStream;","map":{"version":3,"sources":["/Users/phakawat/Desktop/drowsy-mobile-app/components/LiveStream.js"],"names":["React","Block","Text","theme","AntDesign","LIVESTREAM_SOCKET_ENDPOINT","Video","moment","width","height","Dimensions","get","thumbMeasure","LiveStream","Component","constructor","props","connectToImageSocket","s","require","userInfo","setState","uid","on","console","log","data","jpg_text","coor","ear","gas","uri","clearTimeout","image_timer","err","state","isLive","setIsLive","refs","streamVDO","setNativeProps","source","setTimeout","modal_opacity","Animated","Value","display_livestream","vdo_uri","liveVDO","co","lpg","smoke","componentWillMount","componentWillUnmount","disconnect","componentDidUpdate","prevProps","prevstate","JSON","stringify","showLive","setValue","timing","toValue","duration","start","render","display","styles","dimmer","zIndex","opacity","position","top","right","setShowLive","backgroundColor","liveLogo","vdo_title_block","trip_acctime","unix","format","r","vid","info_block","info_text","toFixed","Object","keys","map","key","toUpperCase","StyleSheet","create","padding","flexDirection","backButton","alignSelf","color","left","borderRadius","minWidth","minHeight","flex","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { Block, Text, theme } from \"galio-framework\";\nimport { AntDesign } from '@expo/vector-icons';\nimport { LIVESTREAM_SOCKET_ENDPOINT } from \"../link\"\nimport { Video } from \"expo-av\"\nimport moment from \"moment-timezone\"\nimport {\n    Animated,\n    StyleSheet,\n    Dimensions,\n    Image,\n    View,\n    Modal,\n    TouchableHighlight,\n    AsyncStorage\n} from \"react-native\";\nconst { width, height } = Dimensions.get(\"screen\");\nconst thumbMeasure = (width - 48 - 32) / 3;\n\nclass LiveStream extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            modal_opacity: new Animated.Value(0),\n            display_livestream: \"none\",\n            vdo_uri: null,\n            liveVDO: false,\n            isLive: false,\n            ear: 0,\n            coor: [0, 0],\n            gas: { co: 0, lpg: 0, smoke: 0 }\n        }\n    }\n    componentWillMount() {\n        this.connectToImageSocket()\n    }\n    componentWillUnmount() {\n        this.s.disconnect()\n    }\n\n    componentDidUpdate(prevProps, prevstate) {\n        if (JSON.stringify(prevProps.userInfo) !== JSON.stringify(this.props.userInfo)) {  // if user info updated\n            this.s.disconnect()\n            this.connectToImageSocket()\n        }\n        if (prevProps.showLive !== this.props.showLive) {\n            if (this.props.showLive == true) {\n                this.setState({ display_livestream: \"\" }, () => {\n                    this.state.modal_opacity.setValue(0)\n                    Animated.timing(\n                        this.state.modal_opacity,\n                        {\n                            toValue: 1,\n                            duration: 300\n                        }\n                    ).start()\n                })\n\n            } else {\n                Animated.timing(\n                    this.state.modal_opacity,\n                    {\n                        toValue: 0,\n                        duration: 300\n                    }\n                ).start(() => { this.setState({ display_livestream: \"none\" }) })\n            }\n        }\n    }\n\n    connectToImageSocket = async () => {\n        this.s = require(\"socket.io-client\")(LIVESTREAM_SOCKET_ENDPOINT)\n        let userInfo = this.props.userInfo\n        this.setState({ userInfo })\n        let { uid } = userInfo\n        this.s.on(\"connect\", () => {\n            console.log(\"connected to ter's socket\")\n        })\n        this.s.on(`live_stream_${uid}`, (data) => {\n            let { jpg_text, coor, ear, gas } = data\n            let uri = `data:image/jpeg;base64,${jpg_text}`\n            try {\n                clearTimeout(this.image_timer)\n            } catch (err) { }\n            try {\n                if (!this.state.isLive) {\n                    this.props.setIsLive(true)\n                    this.setState({ isLive: true })\n                }\n                this.setState({\n                    coor, ear, gas\n                })\n\n                this.refs.streamVDO.setNativeProps({\n                    source: [{ uri }]\n                });\n                this.image_timer = setTimeout(() => {\n                    this.props.setIsLive(false)\n                    this.setState({ isLive: false })\n                    this.refs.streamVDO.setNativeProps({\n                        source: []\n                    });\n                }, 2000)\n            } catch (err) { }\n\n        })\n        this.s.on(\"disconnect\", () => {\n            console.log(\"disconnected from ter's socket\")\n        })\n    }\n    render() {\n        let { isLive, ear, coor, gas } = this.state\n        return (\n            <>\n                <Animated.View\n                    style={{\n                        display: this.state.display_livestream,\n                        ...styles.dimmer,\n                        zIndex: 100,\n                        opacity: this.state.modal_opacity\n                    }\n                    } >\n                    {/* CLOSE MODAL BUTTON */}\n                    <View style={{ position: \"absolute\", top: \"7.5%\", right: \"5%\" }}>\n                        <TouchableHighlight onPress={() => this.props.setShowLive(false)}>\n                            <AntDesign\n                                name=\"closecircleo\"\n                                size={30}\n                                color=\"white\"\n                            />\n                        </TouchableHighlight>\n                    </View>\n\n                    {\n                        !this.props.vdo_uri ? <Block\n                            style={{ width: \"100%\", height: 300, backgroundColor: \"black\" }}\n                            middle\n                            space=\"evenly\">\n                            <Image\n                                ref={\"streamVDO\"}\n                                style={{ width: \"100%\", height: \"100%\" }}\n                            />\n\n\n                            <Block style={{ ...styles.liveLogo, ...{ backgroundColor: isLive ? \"crimson\" : \"grey\" } }}>\n                                <Text bold color={\"white\"}>\n                                    Live\n                          </Text>\n                            </Block>\n                        </Block>\n                            :\n                            <>\n                                <Block style={styles.vdo_title_block}>\n                                    <Text bold color=\"white\" size={24}>\n                                        <AntDesign\n                                            name=\"videocamera\"\n                                            size={22}\n                                            color=\"crimson\"\n                                        />\n                                        {\" \"}RECORDED VIDEO\n                                    </Text>\n                                </Block>\n                                <Block style={styles.vdo_title_block}>\n                                    <Text bold color=\"white\" size={15}>\n                                        ACCTIME:{\" \"}\n                                    </Text>\n                                    <Text color=\"white\" size={15}>{this.props.trip_acctime}</Text>\n                                </Block>\n                                <Block style={styles.vdo_title_block}>\n                                    <Text bold color=\"white\" size={15}>\n                                        DATETIME:{\" \"}\n                                    </Text>\n                                    <Text color=\"white\" size={15}>{moment.unix(this.props.trip_acctime).format(\"DD-MM-YYYY HH:mm:ss\")}</Text>\n                                </Block>\n                                <Video\n                                    ref={r => this.vid = r}\n                                    source={{ uri: this.props.vdo_uri }}\n                                    rate={1.0}\n                                    volume={1.0}\n                                    muted={false}\n                                    resizeMode=\"cover\"\n                                    repeat\n                                    useNativeControls\n                                    shouldPlay\n                                    style={{ width: \"100%\", height: 300 }}\n                                />\n                            </>\n                    }\n                    {\n                        !this.props.vdo_uri ?\n                            <Block style={{ ...styles.info_block }}>\n                                <Text bold style={styles.info_text}>Current Data</Text>\n                                <Text style={styles.info_text}>EAR: {ear.toFixed(2)}</Text>\n                                <Text style={styles.info_text}>Coordinate: ({coor[0].toFixed(2)},{coor[1].toFixed(2)})</Text>\n                                {\n                                    Object.keys(gas).map(key => {\n                                        return (\n                                            <Text style={styles.info_text}>{key.toUpperCase()}: {gas[key].toFixed(2)} ppm</Text>\n                                        )\n                                    })\n                                }\n                            </Block>\n                            : null\n                    }\n                </Animated.View >\n            </>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    vdo_title_block: {\n        padding: 10,\n        flexDirection: \"row\",\n        width: \"100%\"\n    },\n    backButton: {\n        display: \"flex\",\n        backgroundColor: \"transparent\",\n\n    },\n    info_block: {\n        alignSelf: \"baseline\",\n        padding: 10,\n        width: \"100%\"\n    },\n\n    info_text: { color: \"white\" },\n    liveLogo: {\n        backgroundColor: \"crimson\",\n        position: \"absolute\",\n        top: 10,\n        left: 2.5,\n        padding: 5,\n        borderRadius: 2.5\n    },\n    dimmer: {\n        position: \"absolute\",\n        backgroundColor: \"rgba(0,0,0,0.9)\",\n        minWidth: width,\n        minHeight: height,\n        flex: 1,\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n    }\n})\nexport default LiveStream;"]},"metadata":{},"sourceType":"module"}