{"ast":null,"code":"var _jsxFileName = \"/Users/phakawat/Desktop/drowsy-mobile-app/components/Icon.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React from 'react';\nimport * as Font from 'expo-font';\nimport { createIconSetFromIcoMoon } from '@expo/vector-icons';\nimport { Icon } from 'galio-framework';\nimport argonConfig from \"../assets/font/argon.json\";\n\nvar ArgonExtra = require(\"../assets/font/argon.ttf\");\n\nvar IconArgonExtra = createIconSetFromIcoMoon(argonConfig, 'ArgonExtra');\n\nclass IconExtra extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      fontLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield Font.loadAsync({\n        ArgonExtra: ArgonExtra\n      });\n\n      _this.setState({\n        fontLoaded: true\n      });\n    })();\n  }\n\n  render() {\n    var _this$props = this.props,\n        {\n      name,\n      family\n    } = _this$props,\n        rest = _objectWithoutProperties(_this$props, [\"name\", \"family\"]);\n\n    if (name && family && this.state.fontLoaded) {\n      if (family === 'ArgonExtra') {\n        return React.createElement(IconArgonExtra, _extends({\n          name: name,\n          family: family\n        }, rest, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          }\n        }));\n      }\n\n      return React.createElement(Icon, _extends({\n        name: name,\n        family: family\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        }\n      }));\n    }\n\n    return null;\n  }\n\n}\n\nexport default IconExtra;","map":{"version":3,"sources":["/Users/phakawat/Desktop/drowsy-mobile-app/components/Icon.js"],"names":["React","Font","createIconSetFromIcoMoon","Icon","argonConfig","ArgonExtra","require","IconArgonExtra","IconExtra","Component","state","fontLoaded","componentDidMount","loadAsync","setState","render","props","name","family","rest"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,SAASC,wBAAT,QAAyC,oBAAzC;AACA,SAASC,IAAT,QAAqB,iBAArB;AAEA,OAAOC,WAAP;;AACA,IAAMC,UAAU,GAAGC,OAAO,4BAA1B;;AACA,IAAMC,cAAc,GAAGL,wBAAwB,CAACE,WAAD,EAAc,YAAd,CAA/C;;AAEA,MAAMI,SAAN,SAAwBR,KAAK,CAACS,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AACNC,MAAAA,UAAU,EAAE;AADN,KAD8B;AAAA;;AAKhCC,EAAAA,iBAAN,GAA0B;AAAA;;AAAA;AACxB,YAAMX,IAAI,CAACY,SAAL,CAAe;AAAER,QAAAA,UAAU,EAAEA;AAAd,OAAf,CAAN;;AACA,MAAA,KAAI,CAACS,QAAL,CAAc;AAAEH,QAAAA,UAAU,EAAE;AAAd,OAAd;AAFwB;AAGzB;;AAEDI,EAAAA,MAAM,GAAG;AACP,sBAAkC,KAAKC,KAAvC;AAAA,QAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAN;AAAA,QAAyBC,IAAzB;;AAEA,QAAIF,IAAI,IAAIC,MAAR,IAAkB,KAAKR,KAAL,CAAWC,UAAjC,EAA6C;AAC3C,UAAIO,MAAM,KAAK,YAAf,EAA6B;AAC3B,eAAO,oBAAC,cAAD;AAAgB,UAAA,IAAI,EAAED,IAAtB;AAA4B,UAAA,MAAM,EAAEC;AAApC,WAAgDC,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD;;AACD,aAAO,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEF,IAAZ;AAAkB,QAAA,MAAM,EAAEC;AAA1B,SAAsCC,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;AAED,WAAO,IAAP;AACD;;AArBqC;;AAwBxC,eAAeX,SAAf","sourcesContent":["import React from 'react';\nimport * as Font from 'expo-font';\nimport { createIconSetFromIcoMoon } from '@expo/vector-icons';\nimport { Icon } from 'galio-framework';\n\nimport argonConfig from '../assets/font/argon.json';\nconst ArgonExtra = require('../assets/font/argon.ttf');\nconst IconArgonExtra = createIconSetFromIcoMoon(argonConfig, 'ArgonExtra');\n\nclass IconExtra extends React.Component {\n  state = {\n    fontLoaded: false,\n  }\n\n  async componentDidMount() {\n    await Font.loadAsync({ ArgonExtra: ArgonExtra });\n    this.setState({ fontLoaded: true });\n  }\n\n  render() {\n    const { name, family, ...rest } = this.props;\n    \n    if (name && family && this.state.fontLoaded) {\n      if (family === 'ArgonExtra') {\n        return <IconArgonExtra name={name} family={family} {...rest} />;\n      }\n      return <Icon name={name} family={family} {...rest} />;\n    }\n\n    return null;\n  }\n}\n\nexport default IconExtra;\n"]},"metadata":{},"sourceType":"module"}