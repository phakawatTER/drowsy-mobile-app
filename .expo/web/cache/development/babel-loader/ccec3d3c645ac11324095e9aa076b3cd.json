{"ast":null,"code":"var _jsxFileName = \"/Users/phakawat/Desktop/drowsy-mobile-app/screens/Map.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { Block, Button, Text, theme } from 'galio-framework';\nimport firebase from \"firebase\";\nvar {\n  height,\n  width\n} = Dimensions.get('screen');\nimport { Images, argonTheme } from \"../constants\";\nimport { HeaderHeight } from \"../constants/utils\";\nimport MapView from 'react-native-maps';\nimport { config } from \"../firebase-config\";\nimport { SOCKET_ENDPOINT } from \"../link\";\nexport default class Pro extends React.Component {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n    this.loadUserInfo = _asyncToGenerator(function* () {\n      var userInfo = AsyncStorage.getItem(\"userInfo\").then(data => {\n        var {\n          navigation\n        } = _this.props;\n        var handle = navigation.getParam(\"handle\");\n        var userInfo = JSON.parse(data);\n        var {\n          uid\n        } = userInfo;\n\n        _this.setState({\n          userInfo\n        });\n\n        if (handle !== \"tracking\") return;\n        _this.server_socket = require(\"socket.io-client\")(SOCKET_ENDPOINT);\n\n        _this.server_socket.on(\"connect\", () => {\n          console.log(\"MAP SOCKET CONNECTED\");\n        });\n\n        _this.server_socket.on(\"disconnect\", () => {\n          console.log(\"MAP SOCKET DISCONNECTED\");\n        });\n\n        _this.server_socket.on(\"trip_update_\".concat(uid), tripdata => {\n          console.log(\"THIS IS UPDATE DATA\", tripdata);\n          var coordinate = tripdata.latlng;\n          var co = tripdata.co;\n          var direction = tripdata.direction;\n          var speed = tripdata.speed;\n\n          try {\n            clearTimeout(_this.offlineTimer);\n          } catch (err) {}\n\n          _this.offlineTimer = setTimeout(() => {\n            _this.setState({\n              speed: 0,\n              status: \"offline\"\n            });\n          }, 5000);\n\n          _this.setState({\n            status: \"online\",\n            speed,\n            direction,\n            location: {\n              latitude: parseFloat(coordinate[0]),\n              longitude: parseFloat(coordinate[1])\n            },\n            gasdata: {\n              co: co\n            }\n          }, () => {\n            _this.updateCarMarker();\n          });\n        });\n\n        _this.latestTrip = _this.databaseRef.child(\"trip/\".concat(uid));\n\n        _this.latestTrip.once(\"value\", snapshot => {\n          trip = snapshot.val();\n          if (!trip) return;\n          acctime = null;\n          Object.keys(trip).map(key => {\n            acctime = key;\n          });\n          _this.tripDataRef = _this.databaseRef.child(\"trip/\".concat(uid, \"/\").concat(acctime)).orderByKey().limitToLast(1);\n\n          _this.tripDataRef.once(\"child_added\", snapshot => {\n            var tripdata = snapshot.val();\n            console.log(tripdata);\n            var coordinate = tripdata.latlng;\n            var co = tripdata.co;\n            var direction = tripdata.direction;\n            var speed = tripdata.speed;\n\n            _this.setState({\n              direction,\n              location: {\n                latitude: parseFloat(coordinate[0]),\n                longitude: parseFloat(coordinate[1])\n              }\n            }, () => {\n              _this.updateCarMarker();\n            });\n          });\n        });\n      }).catch(err => {});\n    });\n\n    this.updateCarMarker = () => {\n      var {\n        location,\n        direction\n      } = this.state;\n      this.mapRef.current.fitToCoordinates([location], 100);\n    };\n\n    this.onMapReadyDisplay = _asyncToGenerator(function* () {\n      var {\n        location\n      } = _this.state;\n\n      _this.mapRef.current.animateCamera({\n        center: location\n      }, {\n        duration: 2000\n      });\n\n      setTimeout(() => {\n        try {\n          _this.markerRef.current.showCallout();\n\n          _this.mapRef.current.fitToCoordinates([location], {\n            animated: true\n          });\n        } catch (err) {\n          console.log(\"THIS IS ERROR\", err);\n        }\n      }, 2000);\n    });\n    this.state = {\n      speed: 0,\n      direction: 0,\n      status: \"offline\",\n      location: {\n        latitude: 5,\n        longitude: 5,\n        latitudeDelta: 0,\n        longitudeDelta: 0\n      },\n      gasdata: {\n        co: 0,\n        lpg: 0\n      }\n    };\n    this.mapRef = React.createRef();\n    this.markerRef = React.createRef();\n    this.onMapReadyDisplay = this.onMapReadyDisplay.bind(this);\n\n    try {\n      firebase.initializeApp(config);\n    } catch (err) {}\n\n    this.databaseRef = firebase.database().ref();\n  }\n\n  componentDidMount() {\n    var {\n      navigation\n    } = this.props;\n    var latlng = navigation.getParam(\"latlng\");\n    var back = navigation.getParam(\"back\");\n    var time = navigation.getParam(\"time\");\n    var event = navigation.getParam(\"event\");\n    var speed = navigation.getParam(\"speed\");\n    var direction = navigation.getParam(\"direction\");\n    this.setState({\n      speed: speed ? speed : this.state.speed,\n      event,\n      direction,\n      location: latlng ? {\n        latitude: parseFloat(latlng[0]),\n        longitude: parseFloat(latlng[1])\n      } : this.state.location,\n      back: back,\n      time: time\n    });\n    this.loadUserInfo();\n  }\n\n  componentWillUnmount() {\n    try {\n      this.tripDataRef.off(\"child_added\");\n      this.latestTrip.off(\"value\");\n    } catch (err) {}\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (this.state.location !== nextState.location) {\n      if (Platform.OS == \"Andriod\") {\n        this.markerRef.current.animateMarkerToCoordinate(nextState.location, 3200);\n      } else {}\n    }\n  }\n\n  render() {\n    var {\n      navigation\n    } = this.props;\n    var handle = navigation.getParam(\"handle\");\n    var {\n      time,\n      event,\n      status\n    } = this.state;\n\n    var renderCarMarker = () => {\n      return handle === \"display\" ? React.createElement(MapView.Marker, {\n        ref: this.markerRef,\n        title: event,\n        description: \"Occured at: \".concat(time),\n        coordinate: this.state.location,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        }\n      }, React.createElement(Image, {\n        source: Images.saloon_online,\n        style: {\n          width: 40,\n          height: 60,\n          transform: [{\n            rotate: \"\".concat(this.state.direction, \"deg\")\n          }]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        }\n      })) : React.createElement(MapView.Marker, {\n        ref: this.markerRef,\n        coordinate: this.state.location,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        }\n      }, React.createElement(Image, {\n        source: status == \"online\" ? Images.saloon_online : Images.saloon_offline,\n        style: {\n          width: 40,\n          height: 60,\n          transform: [{\n            rotate: \"\".concat(this.state.direction, \"deg\")\n          }]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        }\n      }));\n    };\n\n    return React.createElement(Block, {\n      flex: true,\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      }\n    }, React.createElement(StatusBar, {\n      barStyle: \"light-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      }\n    }), React.createElement(Block, {\n      flex: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      }\n    }, React.createElement(Block, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      }\n    }, React.createElement(Block, {\n      style: _objectSpread({}, styles.mapHeader),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      }\n    }, handle === \"tracking\" ? React.createElement(Block, {\n      style: _objectSpread({}, styles.info, {}, styles.topInfo),\n      row: true,\n      space: \"evenly\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      }\n    }, React.createElement(Text, {\n      color: \"#FFFFFF\",\n      bold: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      }\n    }, \"Current Speed :\", parseFloat(this.state.speed).toFixed(2), \" km/h\"), React.createElement(Text, {\n      color: \"#FFFFFF\",\n      bold: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      }\n    }, \"CO: \", this.state.gasdata.co, \" ppm\")) : React.createElement(Block, {\n      style: _objectSpread({}, styles.info, {\n        paddingHorizontal: \"10%\",\n        paddingTop: 20\n      }),\n      flex: true,\n      space: \"evenly\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      }\n    }, React.createElement(Text, {\n      color: \"#FFFFFF\",\n      bold: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      }\n    }, \"Occured at \", this.props.navigation.getParam(\"time\")), React.createElement(Text, {\n      color: \"#FFFFFF\",\n      bold: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      }\n    }, \"Current Speed :\", parseFloat(this.state.speed).toFixed(2), \" km/h\"))), React.createElement(MapView, {\n      maxZoonLevel: 10,\n      rotateEnabled: false,\n      onMapReady: () => {\n        this.onMapReadyDisplay();\n      },\n      ref: this.mapRef,\n      style: _objectSpread({}, styles.mapStyle),\n      initialRegion: {\n        latitude: 13.736717,\n        longitude: 100.523186\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      }\n    }, renderCarMarker()), React.createElement(Button, {\n      shadowless: true,\n      style: styles.button,\n      color: \"#20232a\",\n      onPress: () => navigation.navigate(this.state.back),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      }\n    }, React.createElement(Text, {\n      bold: true,\n      color: theme.COLORS.WHITE,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      }\n    }, \"Go Back\")))));\n  }\n\n}\nvar styles = StyleSheet.create({\n  topInfo: {\n    paddingVertical: \"10%\"\n  },\n  mapHeader: {\n    maxHeight: 0.1 * height,\n    height: 0.1 * height\n  },\n  mapStyle: {\n    height: 0.8 * height,\n    width: width\n  },\n  profileCard: {\n    padding: theme.SIZES.BASE,\n    marginHorizontal: theme.SIZES.BASE,\n    marginTop: 65,\n    borderTopLeftRadius: 6,\n    borderTopRightRadius: 6,\n    backgroundColor: theme.COLORS.WHITE,\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowRadius: 8,\n    shadowOpacity: 0.2,\n    zIndex: 2\n  },\n  container: {\n    backgroundColor: \"#20232a\",\n    marginTop: Platform.OS === 'android' ? -HeaderHeight : 0\n  },\n  padded: {\n    paddingHorizontal: theme.SIZES.BASE * 2,\n    zIndex: 3,\n    position: 'absolute',\n    bottom: Platform.OS === 'android' ? theme.SIZES.BASE * 2 : theme.SIZES.BASE * 3\n  },\n  button: {\n    width: width,\n    height: 0.1 * height,\n    shadowRadius: 0,\n    shadowOpacity: 0\n  },\n  pro: {\n    backgroundColor: argonTheme.COLORS.INFO,\n    paddingHorizontal: 8,\n    marginLeft: 3,\n    borderRadius: 4,\n    height: 22,\n    marginTop: 15\n  },\n  gradient: {\n    zIndex: 1,\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    height: 66\n  }\n});","map":{"version":3,"sources":["/Users/phakawat/Desktop/drowsy-mobile-app/screens/Map.js"],"names":["React","Block","Button","Text","theme","firebase","height","width","Dimensions","get","Images","argonTheme","HeaderHeight","MapView","config","SOCKET_ENDPOINT","Pro","Component","constructor","props","loadUserInfo","userInfo","AsyncStorage","getItem","then","data","navigation","handle","getParam","JSON","parse","uid","setState","server_socket","require","on","console","log","tripdata","coordinate","latlng","co","direction","speed","clearTimeout","offlineTimer","err","setTimeout","status","location","latitude","parseFloat","longitude","gasdata","updateCarMarker","latestTrip","databaseRef","child","once","snapshot","trip","val","acctime","Object","keys","map","key","tripDataRef","orderByKey","limitToLast","catch","state","mapRef","current","fitToCoordinates","onMapReadyDisplay","animateCamera","center","duration","markerRef","showCallout","animated","latitudeDelta","longitudeDelta","lpg","createRef","bind","initializeApp","database","ref","componentDidMount","back","time","event","componentWillUnmount","off","componentWillUpdate","nextProps","nextState","Platform","OS","animateMarkerToCoordinate","render","renderCarMarker","saloon_online","transform","rotate","saloon_offline","styles","container","mapHeader","info","topInfo","toFixed","paddingHorizontal","paddingTop","mapStyle","button","navigate","COLORS","WHITE","StyleSheet","create","paddingVertical","maxHeight","profileCard","padding","SIZES","BASE","marginHorizontal","marginTop","borderTopLeftRadius","borderTopRightRadius","backgroundColor","shadowColor","shadowOffset","shadowRadius","shadowOpacity","zIndex","padded","position","bottom","pro","INFO","marginLeft","borderRadius","gradient","left","right"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;AAEA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,EAA8BC,KAA9B,QAA2C,iBAA3C;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,IAAM;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,IAAoBC,UAAU,CAACC,GAAX,CAAe,QAAf,CAA1B;AACA,SAASC,MAAT,EAAiBC,UAAjB;AACA,SAASC,YAAT;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,MAAT;AACA,SAASC,eAAT;AAEA,eAAe,MAAMC,GAAN,SAAkBhB,KAAK,CAACiB,SAAxB,CAAkC;AAC/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAAA;;AACjB,UAAMA,KAAN,CADiB;AAAA;AAAA,SA0BnBC,YA1BmB,qBA0BJ,aAAY;AACzB,UAAIC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAjC,CAAsCC,IAAI,IAAI;AAC3D,YAAI;AAAEC,UAAAA;AAAF,YAAiB,KAAI,CAACP,KAA1B;AACA,YAAIQ,MAAM,GAAGD,UAAU,CAACE,QAAX,CAAoB,QAApB,CAAb;AACA,YAAIP,QAAQ,GAAGQ,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAf;AACA,YAAI;AAAEM,UAAAA;AAAF,YAAUV,QAAd;;AACA,QAAA,KAAI,CAACW,QAAL,CAAc;AAAEX,UAAAA;AAAF,SAAd;;AACA,YAAIM,MAAM,KAAK,UAAf,EAA2B;AAC3B,QAAA,KAAI,CAACM,aAAL,GAAqBC,OAAO,CAAC,kBAAD,CAAP,CAA4BnB,eAA5B,CAArB;;AACA,QAAA,KAAI,CAACkB,aAAL,CAAmBE,EAAnB,CAAsB,SAAtB,EAAiC,MAAM;AACrCC,UAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,SAFD;;AAGA,QAAA,KAAI,CAACJ,aAAL,CAAmBE,EAAnB,CAAsB,YAAtB,EAAoC,MAAM;AACxCC,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD,SAFD;;AAGA,QAAA,KAAI,CAACJ,aAAL,CAAmBE,EAAnB,uBAAqCJ,GAArC,GAA6CO,QAAD,IAAc;AACxDF,UAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCC,QAAnC;AACA,cAAIC,UAAU,GAAGD,QAAQ,CAACE,MAA1B;AACA,cAAIC,EAAE,GAAGH,QAAQ,CAACG,EAAlB;AACA,cAAIC,SAAS,GAAGJ,QAAQ,CAACI,SAAzB;AACA,cAAIC,KAAK,GAAGL,QAAQ,CAACK,KAArB;;AACA,cAAI;AACFC,YAAAA,YAAY,CAAC,KAAI,CAACC,YAAN,CAAZ;AACD,WAFD,CAEE,OAAOC,GAAP,EAAY,CAAG;;AACjB,UAAA,KAAI,CAACD,YAAL,GAAoBE,UAAU,CAAC,MAAM;AACnC,YAAA,KAAI,CAACf,QAAL,CAAc;AAAEW,cAAAA,KAAK,EAAE,CAAT;AAAYK,cAAAA,MAAM,EAAE;AAApB,aAAd;AACD,WAF6B,EAE3B,IAF2B,CAA9B;;AAIA,UAAA,KAAI,CAAChB,QAAL,CAAc;AACZgB,YAAAA,MAAM,EAAE,QADI;AAEZL,YAAAA,KAFY;AAGZD,YAAAA,SAHY;AAIZO,YAAAA,QAAQ,EAAE;AACRC,cAAAA,QAAQ,EAAEC,UAAU,CAACZ,UAAU,CAAC,CAAD,CAAX,CADZ;AAERa,cAAAA,SAAS,EAAED,UAAU,CAACZ,UAAU,CAAC,CAAD,CAAX;AAFb,aAJE;AAOTc,YAAAA,OAAO,EAAE;AAAEZ,cAAAA,EAAE,EAAEA;AAAN;AAPA,WAAd,EAQG,MAAM;AACP,YAAA,KAAI,CAACa,eAAL;AACD,WAVD;AAWD,SAxBD;;AAyBA,QAAA,KAAI,CAACC,UAAL,GAAkB,KAAI,CAACC,WAAL,CAAiBC,KAAjB,gBAA+B1B,GAA/B,EAAlB;;AACA,QAAA,KAAI,CAACwB,UAAL,CAAgBG,IAAhB,CAAqB,OAArB,EAA8BC,QAAQ,IAAI;AACxCC,UAAAA,IAAI,GAAGD,QAAQ,CAACE,GAAT,EAAP;AACA,cAAI,CAACD,IAAL,EAAW;AACXE,UAAAA,OAAO,GAAG,IAAV;AACAC,UAAAA,MAAM,CAACC,IAAP,CAAYJ,IAAZ,EAAkBK,GAAlB,CAAsBC,GAAG,IAAI;AAC3BJ,YAAAA,OAAO,GAAGI,GAAV;AACD,WAFD;AAGA,UAAA,KAAI,CAACC,WAAL,GAAmB,KAAI,CAACX,WAAL,CAAiBC,KAAjB,gBAA+B1B,GAA/B,cAAsC+B,OAAtC,GAAiDM,UAAjD,GAA8DC,WAA9D,CAA0E,CAA1E,CAAnB;;AACA,UAAA,KAAI,CAACF,WAAL,CAAiBT,IAAjB,CAAsB,aAAtB,EAAqCC,QAAQ,IAAI;AAC/C,gBAAIrB,QAAQ,GAAGqB,QAAQ,CAACE,GAAT,EAAf;AACAzB,YAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACA,gBAAIC,UAAU,GAAGD,QAAQ,CAACE,MAA1B;AACA,gBAAIC,EAAE,GAAGH,QAAQ,CAACG,EAAlB;AACA,gBAAIC,SAAS,GAAGJ,QAAQ,CAACI,SAAzB;AACA,gBAAIC,KAAK,GAAGL,QAAQ,CAACK,KAArB;;AAEA,YAAA,KAAI,CAACX,QAAL,CAAc;AACZU,cAAAA,SADY;AAEZO,cAAAA,QAAQ,EAAE;AACRC,gBAAAA,QAAQ,EAAEC,UAAU,CAACZ,UAAU,CAAC,CAAD,CAAX,CADZ;AAERa,gBAAAA,SAAS,EAAED,UAAU,CAACZ,UAAU,CAAC,CAAD,CAAX;AAFb;AAFE,aAAd,EAMG,MAAM;AACP,cAAA,KAAI,CAACe,eAAL;AACD,aARD;AASD,WAjBD;AAkBD,SA1BD;AA2BD,OAnEc,EAmEZgB,KAnEY,CAmENxB,GAAG,IAAI,CACf,CApEc,CAAf;AAqED,KAhGkB;;AAAA,SA4InBQ,eA5ImB,GA4ID,MAAM;AACtB,UAAI;AAAEL,QAAAA,QAAF;AAAYP,QAAAA;AAAZ,UAA0B,KAAK6B,KAAnC;AACA,WAAKC,MAAL,CAAYC,OAAZ,CAAoBC,gBAApB,CAAqC,CAACzB,QAAD,CAArC,EAAiD,GAAjD;AAED,KAhJkB;;AAAA,SAkJnB0B,iBAlJmB,qBAkJC,aAAY;AAC9B,UAAI;AAAE1B,QAAAA;AAAF,UAAe,KAAI,CAACsB,KAAxB;;AACA,MAAA,KAAI,CAACC,MAAL,CAAYC,OAAZ,CAAoBG,aAApB,CAAkC;AAAEC,QAAAA,MAAM,EAAE5B;AAAV,OAAlC,EAAwD;AAAE6B,QAAAA,QAAQ,EAAE;AAAZ,OAAxD;;AACA/B,MAAAA,UAAU,CAAC,MAAM;AACf,YAAI;AACF,UAAA,KAAI,CAACgC,SAAL,CAAeN,OAAf,CAAuBO,WAAvB;;AACA,UAAA,KAAI,CAACR,MAAL,CAAYC,OAAZ,CAAoBC,gBAApB,CAAqC,CAACzB,QAAD,CAArC,EAAiD;AAAEgC,YAAAA,QAAQ,EAAE;AAAZ,WAAjD;AACD,SAHD,CAGE,OAAOnC,GAAP,EAAY;AAAEV,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BS,GAA7B;AAAmC;AAEpD,OANS,EAMP,IANO,CAAV;AAOD,KA5JkB;AAEjB,SAAKyB,KAAL,GAAa;AACX5B,MAAAA,KAAK,EAAE,CADI;AAEXD,MAAAA,SAAS,EAAE,CAFA;AAGXM,MAAAA,MAAM,EAAE,SAHG;AAIXC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,QAAQ,EAAE,CADF;AAERE,QAAAA,SAAS,EAAE,CAFH;AAGR8B,QAAAA,aAAa,EAAE,CAHP;AAIRC,QAAAA,cAAc,EAAE;AAJR,OAJC;AAUX9B,MAAAA,OAAO,EAAE;AAAEZ,QAAAA,EAAE,EAAE,CAAN;AAAS2C,QAAAA,GAAG,EAAE;AAAd;AAVE,KAAb;AAcA,SAAKZ,MAAL,GAAcxE,KAAK,CAACqF,SAAN,EAAd;AACA,SAAKN,SAAL,GAAiB/E,KAAK,CAACqF,SAAN,EAAjB;AACA,SAAKV,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBW,IAAvB,CAA4B,IAA5B,CAAzB;;AACA,QAAI;AACFjF,MAAAA,QAAQ,CAACkF,aAAT,CAAuBzE,MAAvB;AACD,KAFD,CAEE,OAAOgC,GAAP,EAAY,CAAG;;AACjB,SAAKU,WAAL,GAAmBnD,QAAQ,CAACmF,QAAT,GAAoBC,GAApB,EAAnB;AAGD;;AAyEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAI;AAAEhE,MAAAA;AAAF,QAAiB,KAAKP,KAA1B;AACA,QAAIqB,MAAM,GAAGd,UAAU,CAACE,QAAX,CAAoB,QAApB,CAAb;AACA,QAAI+D,IAAI,GAAGjE,UAAU,CAACE,QAAX,CAAoB,MAApB,CAAX;AACA,QAAIgE,IAAI,GAAGlE,UAAU,CAACE,QAAX,CAAoB,MAApB,CAAX;AACA,QAAIiE,KAAK,GAAGnE,UAAU,CAACE,QAAX,CAAoB,OAApB,CAAZ;AACA,QAAIe,KAAK,GAAGjB,UAAU,CAACE,QAAX,CAAoB,OAApB,CAAZ;AACA,QAAIc,SAAS,GAAGhB,UAAU,CAACE,QAAX,CAAoB,WAApB,CAAhB;AACA,SAAKI,QAAL,CAAc;AACZW,MAAAA,KAAK,EAAEA,KAAK,GAAGA,KAAH,GAAW,KAAK4B,KAAL,CAAW5B,KADtB;AAEZkD,MAAAA,KAFY;AAGZnD,MAAAA,SAHY;AAIZO,MAAAA,QAAQ,EAAET,MAAM,GAAG;AACjBU,QAAAA,QAAQ,EAAEC,UAAU,CAACX,MAAM,CAAC,CAAD,CAAP,CADH;AAEjBY,QAAAA,SAAS,EAAED,UAAU,CAACX,MAAM,CAAC,CAAD,CAAP;AAFJ,OAAH,GAGZ,KAAK+B,KAAL,CAAWtB,QAPH;AAQZ0C,MAAAA,IAAI,EAAEA,IARM;AASZC,MAAAA,IAAI,EAAEA;AATM,KAAd;AAWA,SAAKxE,YAAL;AACD;;AAED0E,EAAAA,oBAAoB,GAAG;AACrB,QAAI;AACF,WAAK3B,WAAL,CAAiB4B,GAAjB,CAAqB,aAArB;AACA,WAAKxC,UAAL,CAAgBwC,GAAhB,CAAoB,OAApB;AACD,KAHD,CAIA,OAAOjD,GAAP,EAAY,CAAG;AAChB;;AAEDkD,EAAAA,mBAAmB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AAExC,QAAI,KAAK3B,KAAL,CAAWtB,QAAX,KAAwBiD,SAAS,CAACjD,QAAtC,EAAgD;AAC9C,UAAIkD,QAAQ,CAACC,EAAT,IAAe,SAAnB,EAA8B;AAC5B,aAAKrB,SAAL,CAAeN,OAAf,CAAuB4B,yBAAvB,CAAiDH,SAAS,CAACjD,QAA3D,EAAqE,IAArE;AACD,OAFD,MAEO,CAGN;AACF;AACF;;AAoBDqD,EAAAA,MAAM,GAAG;AACP,QAAM;AAAE5E,MAAAA;AAAF,QAAiB,KAAKP,KAA5B;AACA,QAAMQ,MAAM,GAAGD,UAAU,CAACE,QAAX,CAAoB,QAApB,CAAf;AACA,QAAM;AAAEgE,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAe7C,MAAAA;AAAf,QAA0B,KAAKuB,KAArC;;AACA,QAAMgC,eAAe,GAAG,MAAM;AAE5B,aACE5E,MAAM,KAAK,SAAX,GACE,oBAAC,OAAD,CAAS,MAAT;AACE,QAAA,GAAG,EAAE,KAAKoD,SADZ;AAEE,QAAA,KAAK,EAAEc,KAFT;AAGE,QAAA,WAAW,wBAAiBD,IAAjB,CAHb;AAKE,QAAA,UAAU,EAAE,KAAKrB,KAAL,CAAWtB,QALzB;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE,oBAAC,KAAD;AACE,QAAA,MAAM,EAAEvC,MAAM,CAAC8F,aADjB;AAEE,QAAA,KAAK,EAAE;AACLjG,UAAAA,KAAK,EAAE,EADF;AAELD,UAAAA,MAAM,EAAE,EAFH;AAGLmG,UAAAA,SAAS,EAAE,CACT;AAAEC,YAAAA,MAAM,YAAK,KAAKnC,KAAL,CAAW7B,SAAhB;AAAR,WADS;AAHN,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CADF,GAmBE,oBAAC,OAAD,CAAS,MAAT;AACE,QAAA,GAAG,EAAE,KAAKqC,SADZ;AAEE,QAAA,UAAU,EAAE,KAAKR,KAAL,CAAWtB,QAFzB;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,KAAD;AACE,QAAA,MAAM,EAAED,MAAM,IAAI,QAAV,GAAqBtC,MAAM,CAAC8F,aAA5B,GAA4C9F,MAAM,CAACiG,cAD7D;AAEE,QAAA,KAAK,EAAE;AACLpG,UAAAA,KAAK,EAAE,EADF;AAELD,UAAAA,MAAM,EAAE,EAFH;AAGLmG,UAAAA,SAAS,EAAE,CACT;AAAEC,YAAAA,MAAM,YAAK,KAAKnC,KAAL,CAAW7B,SAAhB;AAAR,WADS;AAHN,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CApBJ;AAmCD,KArCD;;AAwCA,WACE,oBAAC,KAAD;AAAO,MAAA,IAAI,MAAX;AAAY,MAAA,KAAK,EAAEkE,MAAM,CAACC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,oBAAOD,MAAM,CAACE,SAAd,CADP;AAAA;AAAA;AAAA;AAAA;AAAA,OAIInF,MAAM,KAAK,UAAX,GACE,oBAAC,KAAD;AAAO,MAAA,KAAK,oBAAOiF,MAAM,CAACG,IAAd,MAAuBH,MAAM,CAACI,OAA9B,CAAZ;AACE,MAAA,GAAG,MADL;AAEE,MAAA,KAAK,EAAE,QAFT;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE,SAAb;AAAwB,MAAA,IAAI,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,0BACkB7D,UAAU,CAAC,KAAKoB,KAAL,CAAW5B,KAAZ,CAAV,CAA6BsE,OAA7B,CAAqC,CAArC,CADlB,UAJF,EAOE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE,SAAb;AAAwB,MAAA,IAAI,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,eACO,KAAK1C,KAAL,CAAWlB,OAAX,CAAmBZ,EAD1B,SAPF,CADF,GAaE,oBAAC,KAAD;AAAO,MAAA,KAAK,oBAAOmE,MAAM,CAACG,IAAd;AAAoBG,QAAAA,iBAAiB,EAAE,KAAvC;AAA8CC,QAAAA,UAAU,EAAE;AAA1D,QAAZ;AACE,MAAA,IAAI,MADN;AAEE,MAAA,KAAK,EAAE,QAFT;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE,SAAb;AAAwB,MAAA,IAAI,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,sBACc,KAAKhG,KAAL,CAAWO,UAAX,CAAsBE,QAAtB,CAA+B,MAA/B,CADd,CAJF,EAOE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE,SAAb;AAAwB,MAAA,IAAI,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,0BACkBuB,UAAU,CAAC,KAAKoB,KAAL,CAAW5B,KAAZ,CAAV,CAA6BsE,OAA7B,CAAqC,CAArC,CADlB,UAPF,CAjBN,CADF,EAiCE,oBAAC,OAAD;AACE,MAAA,YAAY,EAAE,EADhB;AAEE,MAAA,aAAa,EAAE,KAFjB;AAGE,MAAA,UAAU,EAAE,MAAM;AAAE,aAAKtC,iBAAL;AAA0B,OAHhD;AAIE,MAAA,GAAG,EAAE,KAAKH,MAJZ;AAKE,MAAA,KAAK,oBAAOoC,MAAM,CAACQ,QAAd,CALP;AAME,MAAA,aAAa,EAAE;AACblE,QAAAA,QAAQ,EAAE,SADG;AAEbE,QAAAA,SAAS,EAAE;AAFE,OANjB;AAAA;AAAA;AAAA;AAAA;AAAA,OAWGmD,eAAe,EAXlB,CAjCF,EA8CE,oBAAC,MAAD;AACE,MAAA,UAAU,MADZ;AAEE,MAAA,KAAK,EAAEK,MAAM,CAACS,MAFhB;AAGE,MAAA,KAAK,EAAE,SAHT;AAIE,MAAA,OAAO,EAAE,MAAM3F,UAAU,CAAC4F,QAAX,CAAoB,KAAK/C,KAAL,CAAWoB,IAA/B,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,KAAK,EAAEvF,KAAK,CAACmH,MAAN,CAAaC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,CA9CF,CADF,CAFF,CADF;AA6DD;;AAxQ8C;AA2QjD,IAAMZ,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,OAAO,EAAE;AACPW,IAAAA,eAAe,EAAE;AADV,GADsB;AAK/Bb,EAAAA,SAAS,EAAE;AACTc,IAAAA,SAAS,EAAE,MAAMtH,MADR;AAETA,IAAAA,MAAM,EAAE,MAAMA;AAFL,GALoB;AAS/B8G,EAAAA,QAAQ,EAAE;AACR9G,IAAAA,MAAM,EAAE,MAAMA,MADN;AAERC,IAAAA,KAAK,EAAEA;AAFC,GATqB;AAa/BsH,EAAAA,WAAW,EAAE;AACXC,IAAAA,OAAO,EAAE1H,KAAK,CAAC2H,KAAN,CAAYC,IADV;AAEXC,IAAAA,gBAAgB,EAAE7H,KAAK,CAAC2H,KAAN,CAAYC,IAFnB;AAGXE,IAAAA,SAAS,EAAE,EAHA;AAIXC,IAAAA,mBAAmB,EAAE,CAJV;AAKXC,IAAAA,oBAAoB,EAAE,CALX;AAMXC,IAAAA,eAAe,EAAEjI,KAAK,CAACmH,MAAN,CAAaC,KANnB;AAOXc,IAAAA,WAAW,EAAE,OAPF;AAQXC,IAAAA,YAAY,EAAE;AAAEhI,MAAAA,KAAK,EAAE,CAAT;AAAYD,MAAAA,MAAM,EAAE;AAApB,KARH;AASXkI,IAAAA,YAAY,EAAE,CATH;AAUXC,IAAAA,aAAa,EAAE,GAVJ;AAWXC,IAAAA,MAAM,EAAE;AAXG,GAbkB;AA0B/B7B,EAAAA,SAAS,EAAE;AACTwB,IAAAA,eAAe,EAAE,SADR;AAETH,IAAAA,SAAS,EAAE/B,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4B,CAACxF,YAA7B,GAA4C;AAF9C,GA1BoB;AA8B/B+H,EAAAA,MAAM,EAAE;AACNzB,IAAAA,iBAAiB,EAAE9G,KAAK,CAAC2H,KAAN,CAAYC,IAAZ,GAAmB,CADhC;AAENU,IAAAA,MAAM,EAAE,CAFF;AAGNE,IAAAA,QAAQ,EAAE,UAHJ;AAINC,IAAAA,MAAM,EAAE1C,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4BhG,KAAK,CAAC2H,KAAN,CAAYC,IAAZ,GAAmB,CAA/C,GAAmD5H,KAAK,CAAC2H,KAAN,CAAYC,IAAZ,GAAmB;AAJxE,GA9BuB;AAoC/BX,EAAAA,MAAM,EAAE;AACN9G,IAAAA,KAAK,EAAEA,KADD;AAEND,IAAAA,MAAM,EAAE,MAAMA,MAFR;AAGNkI,IAAAA,YAAY,EAAE,CAHR;AAINC,IAAAA,aAAa,EAAE;AAJT,GApCuB;AA0C/BK,EAAAA,GAAG,EAAE;AACHT,IAAAA,eAAe,EAAE1H,UAAU,CAAC4G,MAAX,CAAkBwB,IADhC;AAEH7B,IAAAA,iBAAiB,EAAE,CAFhB;AAGH8B,IAAAA,UAAU,EAAE,CAHT;AAIHC,IAAAA,YAAY,EAAE,CAJX;AAKH3I,IAAAA,MAAM,EAAE,EALL;AAMH4H,IAAAA,SAAS,EAAE;AANR,GA1C0B;AAkD/BgB,EAAAA,QAAQ,EAAE;AACRR,IAAAA,MAAM,EAAE,CADA;AAERE,IAAAA,QAAQ,EAAE,UAFF;AAGRC,IAAAA,MAAM,EAAE,CAHA;AAIRM,IAAAA,IAAI,EAAE,CAJE;AAKRC,IAAAA,KAAK,EAAE,CALC;AAMR9I,IAAAA,MAAM,EAAE;AANA;AAlDqB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { ImageBackground, Image, StyleSheet, StatusBar, Dimensions, Platform, AsyncStorage } from 'react-native';\nimport { Block, Button, Text, theme } from 'galio-framework';\nimport firebase from \"firebase\"\nconst { height, width } = Dimensions.get('screen');\nimport { Images, argonTheme } from '../constants';\nimport { HeaderHeight } from \"../constants/utils\";\nimport MapView from 'react-native-maps';\nimport { config } from \"../firebase-config\"\nimport { SOCKET_ENDPOINT } from \"../link\"\n\nexport default class Pro extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      speed: 0,\n      direction: 0,\n      status: \"offline\",\n      location: {\n        latitude: 5,\n        longitude: 5,\n        latitudeDelta: 0,\n        longitudeDelta: 0,\n      },\n      gasdata: { co: 0, lpg: 0 }\n    }\n\n    // Reference to map\n    this.mapRef = React.createRef()\n    this.markerRef = React.createRef()\n    this.onMapReadyDisplay = this.onMapReadyDisplay.bind(this)\n    try {\n      firebase.initializeApp(config)\n    } catch (err) { }\n    this.databaseRef = firebase.database().ref()\n\n\n  }\n  loadUserInfo = async () => {\n    let userInfo = AsyncStorage.getItem(\"userInfo\").then(data => {\n      let { navigation } = this.props\n      let handle = navigation.getParam(\"handle\")\n      let userInfo = JSON.parse(data)\n      let { uid } = userInfo\n      this.setState({ userInfo })\n      if (handle !== \"tracking\") return\n      this.server_socket = require(\"socket.io-client\")(SOCKET_ENDPOINT)\n      this.server_socket.on(\"connect\", () => {\n        console.log(\"MAP SOCKET CONNECTED\")\n      })\n      this.server_socket.on(\"disconnect\", () => {\n        console.log(\"MAP SOCKET DISCONNECTED\")\n      })\n      this.server_socket.on(`trip_update_${uid}`, (tripdata) => {\n        console.log(\"THIS IS UPDATE DATA\", tripdata)\n        let coordinate = tripdata.latlng // COORDINATE OF VEHICLE\n        let co = tripdata.co // CO LEVEL\n        let direction = tripdata.direction\n        let speed = tripdata.speed\n        try {\n          clearTimeout(this.offlineTimer)\n        } catch (err) { }\n        this.offlineTimer = setTimeout(() => {\n          this.setState({ speed: 0, status: \"offline\" })\n        }, 5000)\n        // console.log(coordinate)\n        this.setState({\n          status: \"online\",\n          speed,\n          direction,\n          location: {\n            latitude: parseFloat(coordinate[0]),\n            longitude: parseFloat(coordinate[1])\n          }, gasdata: { co: co }\n        }, () => {\n          this.updateCarMarker()\n        })\n      })\n      this.latestTrip = this.databaseRef.child(`trip/${uid}`)\n      this.latestTrip.once(\"value\", snapshot => {\n        trip = snapshot.val()\n        if (!trip) return\n        acctime = null\n        Object.keys(trip).map(key => {\n          acctime = key\n        })\n        this.tripDataRef = this.databaseRef.child(`trip/${uid}/${acctime}`).orderByKey().limitToLast(1)\n        this.tripDataRef.once(\"child_added\", snapshot => {\n          let tripdata = snapshot.val()\n          console.log(tripdata)\n          let coordinate = tripdata.latlng // COORDINATE OF VEHICLE\n          let co = tripdata.co // CO LEVEL\n          let direction = tripdata.direction\n          let speed = tripdata.speed\n          // console.log(coordinate)\n          this.setState({\n            direction,\n            location: {\n              latitude: parseFloat(coordinate[0]),\n              longitude: parseFloat(coordinate[1])\n            },\n          }, () => {\n            this.updateCarMarker()\n          })\n        })\n      })\n    }).catch(err => {\n    })\n  }\n\n  componentDidMount() {\n    let { navigation } = this.props\n    let latlng = navigation.getParam(\"latlng\")\n    let back = navigation.getParam(\"back\")\n    let time = navigation.getParam(\"time\")\n    let event = navigation.getParam(\"event\")\n    let speed = navigation.getParam(\"speed\")\n    let direction = navigation.getParam(\"direction\")\n    this.setState({\n      speed: speed ? speed : this.state.speed,\n      event,\n      direction,\n      location: latlng ? {\n        latitude: parseFloat(latlng[0]),\n        longitude: parseFloat(latlng[1])\n      } : this.state.location,\n      back: back,\n      time: time\n    })\n    this.loadUserInfo()\n  }\n\n  componentWillUnmount() {\n    try {\n      this.tripDataRef.off(\"child_added\")\n      this.latestTrip.off(\"value\")\n    }\n    catch (err) { }\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    // IF CURRENT LOCATION IS NOT THE SAME AS THE NEXT LOCATION SO ANIMATE MARKER\n    if (this.state.location !== nextState.location) {\n      if (Platform.OS == \"Andriod\") {\n        this.markerRef.current.animateMarkerToCoordinate(nextState.location, 3200);\n      } else {\n        // alert(JSON.stringify(nextProps.animated_location))\n        // this.state.animated_location.timing({ ...nextState.animated_location}).start()\n      }\n    }\n  }\n\n  updateCarMarker = () => {\n    let { location, direction } = this.state\n    this.mapRef.current.fitToCoordinates([location], 100)\n\n  }\n\n  onMapReadyDisplay = async () => {\n    let { location } = this.state\n    this.mapRef.current.animateCamera({ center: location }, { duration: 2000 })\n    setTimeout(() => {\n      try {\n        this.markerRef.current.showCallout()\n        this.mapRef.current.fitToCoordinates([location], { animated: true })\n      } catch (err) { console.log(\"THIS IS ERROR\", err) }\n\n    }, 2000)\n  }\n\n  render() {\n    const { navigation } = this.props;\n    const handle = navigation.getParam(\"handle\")\n    const { time, event, status } = this.state\n    const renderCarMarker = () => {\n      // alert(JSON.stringify(this.state.location))\n      return (\n        handle === \"display\" ?\n          <MapView.Marker\n            ref={this.markerRef}\n            title={event}\n            description={`Occured at: ${time}`}\n            // description={`Occured at: ${time}`}\n            coordinate={this.state.location}\n          >\n            <Image\n              source={Images.saloon_online}\n              style={{\n                width: 40,\n                height: 60,\n                transform: [\n                  { rotate: `${this.state.direction}deg` }\n                ]\n              }} />\n          </MapView.Marker>\n          :\n          <MapView.Marker\n            ref={this.markerRef}\n            coordinate={this.state.location}\n          >\n            <Image\n              source={status == \"online\" ? Images.saloon_online : Images.saloon_offline}\n              style={{\n                width: 40,\n                height: 60,\n                transform: [\n                  { rotate: `${this.state.direction}deg` }\n                ]\n              }} />\n          </MapView.Marker>\n      )\n    }\n\n\n    return (\n      <Block flex style={styles.container}>\n        <StatusBar barStyle=\"light-content\" />\n        <Block flex>\n          <Block>\n            <Block\n              style={{ ...styles.mapHeader }}\n            >\n              {\n                handle === \"tracking\" ?\n                  <Block style={{ ...styles.info, ...styles.topInfo }}\n                    row\n                    space={\"evenly\"}\n                  >\n                    <Text color={\"#FFFFFF\"} bold>\n                      Current Speed :{parseFloat(this.state.speed).toFixed(2)} km/h\n                  </Text>\n                    <Text color={\"#FFFFFF\"} bold>\n                      CO: {this.state.gasdata.co} ppm\n                  </Text>\n                  </Block>\n                  :\n                  <Block style={{ ...styles.info, paddingHorizontal: \"10%\", paddingTop: 20 }}\n                    flex\n                    space={\"evenly\"}\n                  >\n                    <Text color={\"#FFFFFF\"} bold>\n                      Occured at {this.props.navigation.getParam(\"time\")}\n                    </Text>\n                    <Text color={\"#FFFFFF\"} bold>\n                      Current Speed :{parseFloat(this.state.speed).toFixed(2)} km/h\n                  </Text>\n                  </Block>\n              }\n\n            </Block>\n\n            <MapView\n              maxZoonLevel={10}\n              rotateEnabled={false}\n              onMapReady={() => { this.onMapReadyDisplay() }}\n              ref={this.mapRef}\n              style={{ ...styles.mapStyle }}\n              initialRegion={{\n                latitude: 13.736717,\n                longitude: 100.523186,\n              }}\n            >\n              {renderCarMarker()}\n            </MapView>\n            <Button\n              shadowless\n              style={styles.button}\n              color={\"#20232a\"}\n              onPress={() => navigation.navigate(this.state.back)}>\n              <Text bold color={theme.COLORS.WHITE}>Go Back</Text>\n            </Button>\n          </Block>\n        </Block>\n      </Block>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  topInfo: {\n    paddingVertical: \"10%\",\n    // color: \"white\"\n  },\n  mapHeader: {\n    maxHeight: 0.1 * height,\n    height: 0.1 * height,\n  },\n  mapStyle: {\n    height: 0.8 * height,\n    width: width\n  },\n  profileCard: {\n    padding: theme.SIZES.BASE,\n    marginHorizontal: theme.SIZES.BASE,\n    marginTop: 65,\n    borderTopLeftRadius: 6,\n    borderTopRightRadius: 6,\n    backgroundColor: theme.COLORS.WHITE,\n    shadowColor: \"black\",\n    shadowOffset: { width: 0, height: 0 },\n    shadowRadius: 8,\n    shadowOpacity: 0.2,\n    zIndex: 2\n  },\n  container: {\n    backgroundColor: \"#20232a\",\n    marginTop: Platform.OS === 'android' ? -HeaderHeight : 0,\n  },\n  padded: {\n    paddingHorizontal: theme.SIZES.BASE * 2,\n    zIndex: 3,\n    position: 'absolute',\n    bottom: Platform.OS === 'android' ? theme.SIZES.BASE * 2 : theme.SIZES.BASE * 3,\n  },\n  button: {\n    width: width,\n    height: 0.1 * height,\n    shadowRadius: 0,\n    shadowOpacity: 0,\n  },\n  pro: {\n    backgroundColor: argonTheme.COLORS.INFO,\n    paddingHorizontal: 8,\n    marginLeft: 3,\n    borderRadius: 4,\n    height: 22,\n    marginTop: 15\n  },\n  gradient: {\n    zIndex: 1,\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    height: 66,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}