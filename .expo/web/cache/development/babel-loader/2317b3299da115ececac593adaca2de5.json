{"ast":null,"code":"var _jsxFileName = \"/Users/phakawat/Desktop/drowsy-mobile-app/App.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { AppLoading } from 'expo';\nimport { Asset } from 'expo-asset';\nimport { Block, GalioProvider } from 'galio-framework';\nimport firebase from \"firebase\";\nimport Screens from \"./navigation/Screens\";\nimport { Images, articles, argonTheme } from \"./constants\";\nimport { config } from \"./firebase-config\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { Notifications } from 'expo';\nimport * as Permissions from 'expo-permissions';\nimport { API_LOGOUT } from \"./link\";\nimport axios from \"axios\";\nimport { Audio } from \"expo-av\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport DropdownAlert from 'react-native-dropdownalert';\nimport LiveStream from \"./components/LiveStream\";\nvar event_count = 0;\nvar trip_count = 0;\nvar assetImages = [Images.Onboarding, Images.LogoOnboarding, Images.Logo, Images.Pro, Images.ArgonLogo, Images.iOSLogo, Images.androidLogo];\narticles.map(article => assetImages.push(article.image));\n\nfunction cacheImages(images) {\n  return images.map(image => {\n    if (typeof image === 'string') {\n      return Image.prefetch(image);\n    } else {\n      return Asset.fromModule(image).downloadAsync();\n    }\n  });\n}\n\nexport default class App extends React.Component {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n\n    this.addNewNotification = notification => {\n      var {\n        notifications\n      } = this.state;\n      notifications.push(notification);\n      this.setState({\n        notifications\n      });\n    };\n\n    this.registerForPushNotification = _asyncToGenerator(function* () {\n      var {\n        uid\n      } = _this.state.userInfo;\n      var expoPushToken = _this.state.userInfo.expoPushToken;\n      var {\n        status: existingStatus\n      } = yield Permissions.getAsync(Permissions.NOTIFICATIONS);\n      var finalStatus = existingStatus;\n      console.log(finalStatus);\n\n      if (finalStatus !== \"granted\" || !expoPushToken) {\n        var {\n          status\n        } = yield Permissions.askAsync(Permissions.NOTIFICATIONS);\n        finalStatus = status;\n      }\n\n      if (finalStatus !== \"granted\") {\n        return;\n      }\n\n      var token = yield Notifications.getExpoPushTokenAsync();\n      console.log(token);\n\n      if (expoPushToken !== token) {\n        firebase.database().ref().child(\"user\").child(uid).update({\n          expoPushToken: token\n        });\n      }\n    });\n\n    this.logOut = () => {\n      var {\n        uid,\n        from,\n        token\n      } = this.state.userInfo;\n      axios.create({\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: token\n        }\n      }).post(API_LOGOUT, {\n        uid: uid,\n        from: from\n      }).then(response => {\n        trip_count = 0;\n        event_count = 0;\n        console.log(response.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.loadUserInfo = _asyncToGenerator(function* () {\n      var userInfo = yield AsyncStorage.getItem(\"userInfo\");\n      userInfo = JSON.parse(userInfo);\n\n      _this.setState({\n        userInfo: userInfo\n      }, () => {\n        if (userInfo) {\n          var {\n            uid\n          } = userInfo;\n          var loginRef = firebase.database().ref().child(\"login\").child(uid).child(\"app\").orderByKey().limitToLast(1);\n          loginRef.on(\"child_added\", snapshot => {\n            AsyncStorage.getItem(\"userInfo\").then(_userInfo => {\n              _userInfo = JSON.parse(_userInfo);\n              var {\n                token\n              } = _userInfo;\n              var loginInfo = snapshot.val();\n              var latestToken = loginInfo.token;\n\n              if (token !== latestToken) {\n                _this.logOut();\n\n                AsyncStorage.removeItem(\"userInfo\").then(data => {\n                  alert(\"Someone has logged in into your account. Your token has been expired!\");\n\n                  _this.screenRef.current._navigation.navigate(\"Login\");\n                }).catch(err => {\n                  console.log(err);\n                });\n              }\n            }).catch(err => {\n              console.log(err);\n            });\n          });\n        }\n      });\n    });\n\n    this.setUserInfo = userInfo => {\n      this.setState({\n        userInfo: userInfo\n      });\n    };\n\n    this.getUserInfo = () => {\n      return this.state.userInfo;\n    };\n\n    this.setHeaderHeight = size => {\n      this.setState({\n        headerHeight: size\n      });\n    };\n\n    this.getHeaderHeight = () => {\n      return this.state.headerHeight;\n    };\n\n    this.state = {\n      isLoadingComplete: false\n    };\n\n    this.toggleLiveStream = () => {\n      var {\n        showLive\n      } = this.state;\n      this.setState({\n        showLive: !showLive\n      });\n    };\n\n    this._loadResourcesAsync = _asyncToGenerator(function* () {\n      return Promise.all([...cacheImages(assetImages)]);\n    });\n\n    this._handleLoadingError = error => {\n      console.warn(error);\n    };\n\n    this._handleFinishLoading = () => {\n      this.setState({\n        isLoadingComplete: true\n      });\n    };\n\n    this.state = {\n      trip_vdo_uri: null,\n      showLive: false,\n      isLive: false,\n      userInfo: null,\n      notifications: []\n    };\n    this.setHeaderHeight = this.setHeaderHeight.bind(this);\n    this.getHeaderHeight = this.getHeaderHeight.bind(this);\n    this.setUserInfo = this.setUserInfo.bind(this);\n    this.getUserInfo = this.getUserInfo.bind(this);\n    this.addNewNotification = this.addNewNotification.bind(this);\n    this.screenRef = React.createRef();\n\n    try {\n      firebase.initializeApp(config);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.userInfo !== this.state.userInfo) {\n      if (this.state.userInfo) {\n        this.registerForPushNotification();\n        var {\n          uid\n        } = this.state.userInfo;\n        this.databaseRef = firebase.database().ref();\n        this.notificationRef = this.databaseRef.child(\"notification\").child(uid).limitToLast(1);\n        this.tripRef = this.databaseRef.child(\"usertrips/\".concat(uid)).limitToLast(1);\n        this.tripRef.on(\"child_added\", snapshot => {\n          if (trip_count == 0) {\n            trip_count += 1;\n            return;\n          }\n\n          this.dropDownAlertRef.alertWithType('success', 'Trip alert!', \"New trip has started !!\");\n        });\n        this.notificationRef.on(\"child_added\", snapshot => {\n          if (event_count == 0) {\n            event_count += 1;\n            return;\n          }\n\n          var {\n            event,\n            timestamp\n          } = snapshot.val();\n\n          try {\n            if ([\"Dangerous Eye Close\", \"Fatigue\"].includes(event)) {\n              this.dropDownAlertRef.alertWithType('error', 'Event alert!', \"Event \\\"\".concat(event, \"\\\" detected !!\"));\n              var soundObject = new Audio.Sound();\n\n              try {\n                soundObject.loadAsync(require(\"./assets/audio/alarm.mp3\")).then(response => {\n                  soundObject.playAsync();\n                  setTimeout(() => {\n                    soundObject.stopAsync();\n                  }, 2000);\n                });\n              } catch (err) {\n                console.log(err);\n              }\n            } else {\n              this.dropDownAlertRef.alertWithType('warn', 'Event alert!', \"Event \\\"\".concat(event, \"\\\" detected !!\"));\n            }\n          } catch (err) {}\n        });\n      } else {\n        this.notificationRef.off(\"child_added\");\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.loadUserInfo();\n  }\n\n  setShowLive(showLive, trip_vdo_uri, trip_acctime) {\n    this.setState({\n      showLive,\n      trip_vdo_uri,\n      trip_acctime\n    });\n  }\n\n  setIsLive(isLive) {\n    this.setState({\n      isLive\n    });\n  }\n\n  render() {\n    if (!this.state.isLoadingComplete) {\n      return React.createElement(AppLoading, {\n        startAsync: this._loadResourcesAsync,\n        onError: this._handleLoadingError,\n        onFinish: this._handleFinishLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        }\n      });\n    } else {\n      return React.createElement(GalioProvider, {\n        theme: argonTheme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        }\n      }, React.createElement(Block, {\n        flex: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        }\n      }, React.createElement(Screens, {\n        ref: this.screenRef,\n        screenProps: {\n          setShowLive: this.setShowLive.bind(this),\n          isLive: this.state.isLive,\n          logOut: this.logOut,\n          setUserInfo: this.setUserInfo,\n          getUserInfo: this.getUserInfo,\n          setHeaderHeight: this.setHeaderHeight,\n          getHeaderHeight: this.getHeaderHeight,\n          addNewNotification: this.addNewNotification\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        }\n      })), React.createElement(LiveStream, {\n        ref: this.livestreamRef,\n        userInfo: this.state.userInfo,\n        showLive: this.state.showLive,\n        vdo_uri: this.state.trip_vdo_uri,\n        trip_acctime: this.state.trip_acctime,\n        setShowLive: this.setShowLive.bind(this),\n        setIsLive: this.setIsLive.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        }\n      }), React.createElement(DropdownAlert, {\n        zIndex: 1000,\n        ref: _ref4 => {\n          this.dropDownAlertRef = _ref4;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        }\n      }));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/phakawat/Desktop/drowsy-mobile-app/App.js"],"names":["React","AppLoading","Asset","Block","GalioProvider","firebase","Screens","Images","articles","argonTheme","config","Notifications","Permissions","API_LOGOUT","axios","Audio","DropdownAlert","LiveStream","event_count","trip_count","assetImages","Onboarding","LogoOnboarding","Logo","Pro","ArgonLogo","iOSLogo","androidLogo","map","article","push","image","cacheImages","images","Image","prefetch","fromModule","downloadAsync","App","Component","constructor","props","addNewNotification","notification","notifications","state","setState","registerForPushNotification","uid","userInfo","expoPushToken","status","existingStatus","getAsync","NOTIFICATIONS","finalStatus","console","log","askAsync","token","getExpoPushTokenAsync","database","ref","child","update","logOut","from","create","headers","post","then","response","data","catch","err","loadUserInfo","AsyncStorage","getItem","JSON","parse","loginRef","orderByKey","limitToLast","on","snapshot","_userInfo","loginInfo","val","latestToken","removeItem","alert","screenRef","current","_navigation","navigate","setUserInfo","getUserInfo","setHeaderHeight","size","headerHeight","getHeaderHeight","isLoadingComplete","toggleLiveStream","showLive","_loadResourcesAsync","Promise","all","_handleLoadingError","error","warn","_handleFinishLoading","trip_vdo_uri","isLive","bind","createRef","initializeApp","componentDidUpdate","prevProps","prevState","databaseRef","notificationRef","tripRef","dropDownAlertRef","alertWithType","event","timestamp","includes","soundObject","Sound","loadAsync","require","playAsync","setTimeout","stopAsync","off","componentDidMount","setShowLive","trip_acctime","setIsLive","render","livestreamRef"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Image, Modal } from 'react-native';\nimport { AppLoading } from 'expo';\nimport { Asset } from 'expo-asset';\nimport { Block, GalioProvider } from 'galio-framework';\nimport firebase from \"firebase\"\nimport Screens from './navigation/Screens';\nimport { Images, articles, argonTheme } from './constants';\nimport { config } from \"./firebase-config\"\nimport { AsyncStorage } from \"react-native\"\nimport { Notifications } from 'expo';\nimport * as Permissions from 'expo-permissions';\nimport { API_LOGOUT } from \"./link\"\nimport axios from \"axios\"\nimport { Audio } from \"expo-av\"\nimport { Platform, Switch } from \"react-native\"\nimport DropdownAlert from 'react-native-dropdownalert';\nimport LiveStream from \"./components/LiveStream\";\n\nlet event_count = 0\nlet trip_count = 0\n// cache app images\nconst assetImages = [\n  Images.Onboarding,\n  Images.LogoOnboarding,\n  Images.Logo,\n  Images.Pro,\n  Images.ArgonLogo,\n  Images.iOSLogo,\n  Images.androidLogo\n];\n\n// cache product images\narticles.map(article => assetImages.push(article.image));\n\nfunction cacheImages(images) {\n  return images.map(image => {\n    if (typeof image === 'string') {\n      return Image.prefetch(image);\n    } else {\n      return Asset.fromModule(image).downloadAsync();\n    }\n  });\n}\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      trip_vdo_uri: null,\n      showLive: false,\n      isLive: false,\n      userInfo: null,\n      notifications: []\n    }\n    this.setHeaderHeight = this.setHeaderHeight.bind(this)\n    this.getHeaderHeight = this.getHeaderHeight.bind(this)\n    this.setUserInfo = this.setUserInfo.bind(this)\n    this.getUserInfo = this.getUserInfo.bind(this)\n    this.addNewNotification = this.addNewNotification.bind(this)\n    this.screenRef = React.createRef()\n\n    try {\n      firebase.initializeApp(config)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  addNewNotification = (notification) => {\n    let { notifications } = this.state\n    notifications.push(notification)\n    this.setState({ notifications })\n  }\n\n  registerForPushNotification = async () => {\n    const { uid } = this.state.userInfo\n    const expoPushToken = this.state.userInfo.expoPushToken\n    const { status: existingStatus } = await Permissions.getAsync(Permissions.NOTIFICATIONS)\n    let finalStatus = existingStatus\n    console.log(finalStatus)\n    if (finalStatus !== \"granted\" || !expoPushToken) {\n      const { status } = await Permissions.askAsync(Permissions.NOTIFICATIONS);\n      finalStatus = status\n    }\n    if (finalStatus !== \"granted\") {\n      return\n    }\n    let token = await Notifications.getExpoPushTokenAsync()\n    console.log(token)\n    // update push token to this user\n    if (expoPushToken !== token) {\n      firebase.database().ref().child(\"user\").child(uid).update({\n        expoPushToken: token\n      })\n    }\n  }\n\n  logOut = () => {\n    let { uid, from, token } = this.state.userInfo\n    axios\n      .create({\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: token\n        }\n      })\n      .post(API_LOGOUT, {\n        uid: uid,\n        from: from\n      })\n      .then(response => {\n        trip_count = 0\n        event_count = 0\n        console.log(response.data)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  loadUserInfo = async () => {\n    let userInfo = await AsyncStorage.getItem(\"userInfo\")\n    userInfo = JSON.parse(userInfo)\n    this.setState({ userInfo: userInfo }, () => {\n      if (userInfo) {\n        let { uid } = userInfo\n        let loginRef = firebase.database().ref()\n          .child(\"login\").child(uid).child(\"app\").orderByKey().limitToLast(1)\n        // TO DETECT DUBPLICATE LOGIN\n        // APP USER ARE NOT ALLOWED TO LOGGED IN DUBPLICATEDLY\n        loginRef.on(\"child_added\", (snapshot) => {\n          AsyncStorage.getItem(\"userInfo\").then(_userInfo => {\n            _userInfo = JSON.parse(_userInfo)\n            let { token } = _userInfo\n            let loginInfo = snapshot.val()\n            let latestToken = loginInfo.token\n            // Duplicated log in occurs force user to log out of the app\n            if (token !== latestToken) {\n              this.logOut() // expire user token\n              AsyncStorage.removeItem(\"userInfo\").then(data => {\n                alert(\"Someone has logged in into your account. Your token has been expired!\")\n                this.screenRef.current._navigation.navigate(\"Login\")\n              }).catch(err => {\n                console.log(err)\n              })\n            }\n          }).catch(err => {\n            console.log(err)\n          })\n\n        })\n      }\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n\n    if (prevState.userInfo !== this.state.userInfo) {\n      // if user info exists\n      if (this.state.userInfo) {\n        this.registerForPushNotification()\n        let { uid } = this.state.userInfo\n        this.databaseRef = firebase.database().ref()\n        this.notificationRef = this.databaseRef.child(\"notification\").child(uid).limitToLast(1)\n        this.tripRef = this.databaseRef.child(`usertrips/${uid}`).limitToLast(1)\n        this.tripRef.on(\"child_added\", (snapshot) => {\n          if (trip_count == 0) {\n            trip_count += 1\n            return\n          }\n          this.dropDownAlertRef.alertWithType('success', 'Trip alert!', `New trip has started !!`);\n\n        })\n        // child_added listener\n        this.notificationRef.on(\"child_added\", (snapshot) => {\n          if (event_count == 0) {\n            event_count += 1\n            return\n          }\n          let { event, timestamp } = snapshot.val()\n          // if new child added to the collection so update it \n          try {\n            if ([\"Dangerous Eye Close\", \"Fatigue\"].includes(event)) {\n              this.dropDownAlertRef.alertWithType('error', 'Event alert!', `Event \"${event}\" detected !!`);\n              // play alarm sound\n              const soundObject = new Audio.Sound();\n              try {\n                soundObject.loadAsync(require('./assets/audio/alarm.mp3')).then(response => {\n                  soundObject.playAsync();\n                  setTimeout(() => {\n                    soundObject.stopAsync()\n                  }, 2000)\n                })\n              } catch (err) {\n                console.log(err)\n              }\n            } else {\n              this.dropDownAlertRef.alertWithType('warn', 'Event alert!', `Event \"${event}\" detected !!`);\n            }\n          } catch (err) {\n          }\n        })\n      } else {\n        this.notificationRef.off(\"child_added\")\n      }\n    }\n  }\n  componentDidMount() {\n    this.loadUserInfo()\n\n  }\n\n  setUserInfo = (userInfo) => {\n    this.setState({ userInfo: userInfo })\n  }\n  getUserInfo = () => {\n    return this.state.userInfo\n  }\n\n\n  setHeaderHeight = (size) => {\n    this.setState({\n      headerHeight: size\n    })\n  }\n\n  getHeaderHeight = () => {\n    return this.state.headerHeight\n  }\n\n  state = {\n    isLoadingComplete: false,\n  }\n\n  setShowLive(showLive, trip_vdo_uri, trip_acctime) {\n    this.setState({ showLive, trip_vdo_uri, trip_acctime })\n  }\n  setIsLive(isLive) {\n    this.setState({ isLive })\n  }\n  toggleLiveStream = () => {\n    let { showLive } = this.state\n    this.setState({ showLive: !showLive })\n  }\n\n  render() {\n    if (!this.state.isLoadingComplete) {\n\n      return (\n        <AppLoading\n          startAsync={this._loadResourcesAsync}\n          onError={this._handleLoadingError}\n          onFinish={this._handleFinishLoading}\n        />\n      );\n    } else {\n\n      return (\n        <GalioProvider theme={argonTheme}>\n\n          <Block flex>\n            <Screens\n              ref={this.screenRef}\n              screenProps={{\n                setShowLive: this.setShowLive.bind(this),\n                isLive: this.state.isLive,\n                logOut: this.logOut,\n                setUserInfo: this.setUserInfo,\n                getUserInfo: this.getUserInfo,\n                setHeaderHeight: this.setHeaderHeight,\n                getHeaderHeight: this.getHeaderHeight,\n                addNewNotification: this.addNewNotification\n              }}\n            />\n          </Block>\n          <LiveStream\n            ref={this.livestreamRef}\n            userInfo={this.state.userInfo}\n            showLive={this.state.showLive}\n            vdo_uri={this.state.trip_vdo_uri}\n            trip_acctime={this.state.trip_acctime}\n            setShowLive={this.setShowLive.bind(this)}\n            setIsLive={this.setIsLive.bind(this)}\n          />\n\n          <DropdownAlert\n            zIndex={1000}\n            ref={ref => { this.dropDownAlertRef = ref }}\n          />\n        </GalioProvider>\n      );\n    }\n  }\n\n  _loadResourcesAsync = async () => {\n    return Promise.all([\n      ...cacheImages(assetImages),\n    ]);\n  };\n\n  _handleLoadingError = error => {\n    // In this case, you might want to report the error to your error\n    // reporting service, for example Sentry\n    console.warn(error);\n  };\n\n  _handleFinishLoading = () => {\n    this.setState({ isLoadingComplete: true });\n  };\n\n}\n"]},"metadata":{},"sourceType":"module"}