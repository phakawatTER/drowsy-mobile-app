{"ast":null,"code":"var _jsxFileName = \"/Users/phakawat/Desktop/drowsy-mobile-app/navigation/Screens.js\";\nimport React from \"react\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { createSwitchNavigator, createStackNavigator, createDrawerNavigator, createAppContainer } from \"react-navigation\";\nimport { Block } from \"galio-framework\";\nimport Login from \"../screens/Login\";\nimport Register from \"../screens/Register\";\nimport History from \"../screens/History\";\nimport Dashboard from \"../screens/Dashboard\";\nimport Home from \"../screens/Home\";\nimport Onboarding from \"../screens/Onboarding\";\nimport Map from \"../screens/Map\";\nimport Profile from \"../screens/Profile\";\nimport TripVDO from \"../screens/TripVDO\";\nimport EditProfile from \"../screens/EditProfile\";\nimport Elements from \"../screens/Elements\";\nimport Articles from \"../screens/Articles\";\nimport Menu from \"./Menu\";\nimport DrawerItem from \"../components/DrawerItem\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport Header from \"../components/Header\";\nimport { argonTheme } from \"../constants\";\n\nvar transitionConfig = (transitionProps, prevTransitionProps) => ({\n  transitionSpec: {\n    duration: 400,\n    easing: Easing.out(Easing.poly(4)),\n    timing: Animated.timing\n  },\n  screenInterpolator: sceneProps => {\n    var {\n      layout,\n      position,\n      scene\n    } = sceneProps;\n    var thisSceneIndex = scene.index;\n    var width = layout.initWidth;\n    var scale = position.interpolate({\n      inputRange: [thisSceneIndex - 1, thisSceneIndex, thisSceneIndex + 1],\n      outputRange: [4, 1, 1]\n    });\n    var opacity = position.interpolate({\n      inputRange: [thisSceneIndex - 1, thisSceneIndex, thisSceneIndex + 1],\n      outputRange: [0, 1, 1]\n    });\n    var translateX = position.interpolate({\n      inputRange: [thisSceneIndex - 1, thisSceneIndex],\n      outputRange: [width, 0]\n    });\n    var scaleWithOpacity = {\n      opacity\n    };\n    var screenName = \"Search\";\n\n    if (screenName === transitionProps.scene.route.routeName || prevTransitionProps && screenName === prevTransitionProps.scene.route.routeName) {\n      return scaleWithOpacity;\n    }\n\n    return {\n      transform: [{\n        translateX\n      }]\n    };\n  }\n});\n\nvar ElementsStack = createStackNavigator({\n  Elements: {\n    screen: Elements,\n    navigationOptions: (_ref) => {\n      var {\n        navigation\n      } = _ref;\n      return {\n        header: React.createElement(Header, {\n          title: \"Elements\",\n          navigation: navigation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          }\n        })\n      };\n    }\n  }\n}, {\n  cardStyle: {\n    backgroundColor: \"#F8F9FE\"\n  },\n  transitionConfig\n});\nvar ArticlesStack = createStackNavigator({\n  Articles: {\n    screen: Articles,\n    navigationOptions: (_ref2) => {\n      var {\n        navigation\n      } = _ref2;\n      return {\n        header: React.createElement(Header, {\n          title: \"Articles\",\n          navigation: navigation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          }\n        })\n      };\n    }\n  }\n}, {\n  cardStyle: {\n    backgroundColor: \"#F8F9FE\"\n  },\n  transitionConfig\n});\nvar ProfileStack = createStackNavigator({\n  Profile: {\n    screen: Profile,\n    navigationOptions: (_ref3) => {\n      var {\n        navigation\n      } = _ref3;\n      return {\n        header: React.createElement(Header, {\n          title: \"Profile\",\n          navigation: navigation,\n          search: true,\n          bgColor: \"#20232a\",\n          iconColor: \"#fff\",\n          titleColor: \"#fff\",\n          isWhite: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          }\n        }),\n        headerTransparent: true\n      };\n    }\n  },\n  EditProfile: {\n    screen: EditProfile,\n    navigationOptions: (_ref4) => {\n      var {\n        navigation\n      } = _ref4;\n      return {\n        header: React.createElement(Header, {\n          title: \"Edit Profile\",\n          navigation: navigation,\n          bgColor: \"#20232a\",\n          iconColor: \"#fff\",\n          titleColor: \"#fff\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          }\n        }),\n        headerTransparent: true\n      };\n    }\n  },\n  Map: {\n    screen: Map,\n    navigationOptions: (_ref5) => {\n      var {\n        navigation\n      } = _ref5;\n      return {\n        header: React.createElement(Header, {\n          left: React.createElement(Block, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            }\n          }),\n          transparent: true,\n          iconColor: \"white\",\n          navigation: navigation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          }\n        }),\n        headerTransparent: true\n      };\n    }\n  }\n}, {\n  cardStyle: {\n    backgroundColor: \"#FFFFFF\"\n  },\n  transitionConfig\n});\nvar TripVideoStack = createStackNavigator({\n  TripVideo: {\n    screen: TripVDO,\n    navigationOptions: (_ref6) => {\n      var {\n        navigation\n      } = _ref6;\n      return {\n        header: React.createElement(Header, {\n          title: \"TripVideo\",\n          navigation: navigation,\n          iconColor: \"#fff\",\n          titleColor: \"#fff\",\n          bgColor: \"#20232a\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          }\n        }),\n        headerTransparent: false\n      };\n    }\n  }\n}, {\n  cardStyle: {\n    backgroundColor: \"#FFFFFF\"\n  },\n  transitionConfig\n});\nvar HistoryStack = createStackNavigator({\n  History: {\n    screen: History,\n    navigationOptions: (_ref7) => {\n      var {\n        navigation\n      } = _ref7;\n      return {\n        header: React.createElement(Header, {\n          title: \"History\",\n          navigation: navigation,\n          noShadow: true,\n          iconColor: \"#fff\",\n          titleColor: \"#fff\",\n          bgColor: \"#20232a\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          }\n        }),\n        headerTransparent: false\n      };\n    }\n  }\n}, {\n  cardStyle: {\n    backgroundColor: \"#FFFFFF\"\n  },\n  transitionConfig\n});\nvar DashboardStack = createStackNavigator({\n  Dashboard: {\n    screen: Dashboard,\n    navigationOptions: (_ref8) => {\n      var {\n        navigation\n      } = _ref8;\n      return {\n        header: React.createElement(Header, {\n          title: \"Dashboard\",\n          navigation: navigation,\n          iconColor: \"#fff\",\n          titleColor: \"#fff\",\n          bgColor: \"#20232a\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          }\n        }),\n        headerTransparent: false\n      };\n    }\n  }\n}, {\n  cardStyle: {\n    backgroundColor: \"#FFFFFF\"\n  },\n  transitionConfig\n});\nvar HomeStack = createStackNavigator({\n  Home: {\n    screen: Home,\n    navigationOptions: (_ref9) => {\n      var {\n        navigation\n      } = _ref9;\n      return {\n        header: React.createElement(Header, {\n          search: true,\n          options: true,\n          title: \"Home\",\n          navigation: navigation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          }\n        })\n      };\n    }\n  }\n}, {\n  cardStyle: {\n    backgroundColor: \"#F8F9FE\"\n  },\n  transitionConfig\n});\nvar LoginScreen = createStackNavigator({\n  Login: {\n    screen: Login,\n    navigationOptions: (_ref10) => {\n      var {\n        navigation\n      } = _ref10;\n      return {\n        header: React.createElement(Header, {\n          navigation: navigation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          }\n        })\n      };\n    }\n  }\n});\nvar RegisterScreen = createStackNavigator({\n  Register: {\n    screen: Register,\n    navigationOptions: (_ref11) => {\n      var {\n        navigation\n      } = _ref11;\n      return {\n        header: React.createElement(Header, {\n          navigation: navigation,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          }\n        })\n      };\n    }\n  }\n});\nvar UnAuthStack = createDrawerNavigator({\n  Login: {\n    screen: LoginScreen,\n    navigationOptions: navOpt => ({\n      drawerLabel: (_ref12) => {\n        var {\n          focused\n        } = _ref12;\n        return React.createElement(DrawerItem, {\n          focused: focused,\n          screen: \"Login\",\n          title: \"Sign in\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          }\n        });\n      }\n    })\n  },\n  Register: {\n    screen: RegisterScreen,\n    navigationOptions: navOpt => ({\n      drawerLabel: (_ref13) => {\n        var {\n          focused\n        } = _ref13;\n        return React.createElement(DrawerItem, {\n          focused: focused,\n          screen: \"Register\",\n          title: \"Sign up\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          }\n        });\n      }\n    })\n  }\n}, Menu);\nvar AuthStack = createDrawerNavigator({\n  Dashboard: {\n    screen: DashboardStack,\n    navigationOptions: navOpt => ({\n      drawerLabel: (_ref14) => {\n        var {\n          focused\n        } = _ref14;\n        return React.createElement(DrawerItem, {\n          focused: focused,\n          screen: \"Dashboard\",\n          title: \"Dashboard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          }\n        });\n      }\n    })\n  },\n  Profile: {\n    screen: ProfileStack,\n    navigationOptions: navOpt => ({\n      drawerLabel: (_ref15) => {\n        var {\n          focused\n        } = _ref15;\n        return React.createElement(DrawerItem, {\n          focused: focused,\n          screen: \"Profile\",\n          title: \"Profile\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          }\n        });\n      }\n    })\n  },\n  TripVideo: {\n    screen: TripVideoStack,\n    navigationOptions: navOpt => ({\n      drawerLabel: (_ref16) => {\n        var {\n          focused\n        } = _ref16;\n        return React.createElement(DrawerItem, {\n          focused: focused,\n          screen: \"TripVideo\",\n          title: \"Trip Video\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          }\n        });\n      }\n    })\n  },\n  History: {\n    screen: HistoryStack,\n    navigationOptions: navOpt => ({\n      drawerLabel: (_ref17) => {\n        var {\n          focused\n        } = _ref17;\n        return React.createElement(DrawerItem, {\n          focused: focused,\n          screen: \"History\",\n          title: \"History\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264\n          }\n        });\n      }\n    })\n  }\n}, Menu);\nvar AppSwitch = createSwitchNavigator({\n  UnAuthStack: UnAuthStack,\n  AuthStack: AuthStack\n});\nvar AppContainer = createAppContainer(AppSwitch);\nexport default AppContainer;","map":{"version":3,"sources":["/Users/phakawat/Desktop/drowsy-mobile-app/navigation/Screens.js"],"names":["React","createSwitchNavigator","createStackNavigator","createDrawerNavigator","createAppContainer","Block","Login","Register","History","Dashboard","Home","Onboarding","Map","Profile","TripVDO","EditProfile","Elements","Articles","Menu","DrawerItem","Header","argonTheme","transitionConfig","transitionProps","prevTransitionProps","transitionSpec","duration","easing","Easing","out","poly","timing","Animated","screenInterpolator","sceneProps","layout","position","scene","thisSceneIndex","index","width","initWidth","scale","interpolate","inputRange","outputRange","opacity","translateX","scaleWithOpacity","screenName","route","routeName","transform","ElementsStack","screen","navigationOptions","navigation","header","cardStyle","backgroundColor","ArticlesStack","ProfileStack","headerTransparent","TripVideoStack","TripVideo","HistoryStack","DashboardStack","HomeStack","LoginScreen","RegisterScreen","UnAuthStack","navOpt","drawerLabel","focused","AuthStack","AppSwitch","AppContainer"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Easing, Animated } from \"react-native\";\nimport {\n  createSwitchNavigator,\n  createStackNavigator,\n  createDrawerNavigator,\n  createAppContainer\n} from \"react-navigation\";\n\nimport { Block } from \"galio-framework\";\nimport Login from \"../screens/Login\";\nimport Register from \"../screens/Register\";\nimport History from \"../screens/History\"\nimport Dashboard from \"../screens/Dashboard\"\n// screens\nimport Home from \"../screens/Home\";\nimport Onboarding from \"../screens/Onboarding\";\nimport Map from \"../screens/Map\";\nimport Profile from \"../screens/Profile\";\nimport TripVDO from \"../screens/TripVDO\"\nimport EditProfile from \"../screens/EditProfile\"\nimport Elements from \"../screens/Elements\";\nimport Articles from \"../screens/Articles\";\n// drawer\nimport Menu from \"./Menu\";\nimport DrawerItem from \"../components/DrawerItem\";\nimport { AsyncStorage } from 'react-native';\n// header for screens\nimport Header from \"../components/Header\";\nimport { argonTheme } from \"../constants\";\n\nconst transitionConfig = (transitionProps, prevTransitionProps) => ({\n  transitionSpec: {\n    duration: 400,\n    easing: Easing.out(Easing.poly(4)),\n    timing: Animated.timing\n  },\n  screenInterpolator: sceneProps => {\n    const { layout, position, scene } = sceneProps;\n    const thisSceneIndex = scene.index;\n    const width = layout.initWidth;\n\n    const scale = position.interpolate({\n      inputRange: [thisSceneIndex - 1, thisSceneIndex, thisSceneIndex + 1],\n      outputRange: [4, 1, 1]\n    });\n    const opacity = position.interpolate({\n      inputRange: [thisSceneIndex - 1, thisSceneIndex, thisSceneIndex + 1],\n      outputRange: [0, 1, 1]\n    });\n    const translateX = position.interpolate({\n      inputRange: [thisSceneIndex - 1, thisSceneIndex],\n      outputRange: [width, 0]\n    });\n\n    const scaleWithOpacity = { opacity };\n    const screenName = \"Search\";\n\n    if (\n      screenName === transitionProps.scene.route.routeName ||\n      (prevTransitionProps &&\n        screenName === prevTransitionProps.scene.route.routeName)\n    ) {\n      return scaleWithOpacity;\n    }\n    return { transform: [{ translateX }] };\n  }\n});\n\nconst ElementsStack = createStackNavigator({\n  Elements: {\n    screen: Elements,\n    navigationOptions: ({ navigation }) => ({\n      header: <Header title=\"Elements\" navigation={navigation} />\n    })\n  }\n}, {\n  cardStyle: {\n    backgroundColor: \"#F8F9FE\"\n  },\n  transitionConfig\n});\n\nconst ArticlesStack = createStackNavigator({\n  Articles: {\n    screen: Articles,\n    navigationOptions: ({ navigation }) => ({\n      header: <Header title=\"Articles\" navigation={navigation} />\n    })\n  }\n}, {\n  cardStyle: {\n    backgroundColor: \"#F8F9FE\"\n  },\n  transitionConfig\n});\n\nconst ProfileStack = createStackNavigator(\n  {\n    Profile: {\n      screen: Profile,\n      navigationOptions: ({ navigation }) => {\n        return ({\n          header: (\n            <Header title=\"Profile\" navigation={navigation} search bgColor={\"#20232a\"} iconColor={\"#fff\"} titleColor={\"#fff\"} isWhite={true} />\n          ),\n          headerTransparent: true\n        })\n      },\n\n    },\n    EditProfile: {\n      screen: EditProfile,\n      navigationOptions: ({ navigation }) => ({\n        header: (\n          <Header title=\"Edit Profile\" navigation={navigation} bgColor={\"#20232a\"} iconColor={\"#fff\"} titleColor={\"#fff\"} />\n        ),\n        headerTransparent: true\n      }),\n    },\n    Map: {\n      screen: Map,\n      navigationOptions: ({ navigation }) => ({\n        header: (\n          <Header left={<Block />} transparent iconColor=\"white\" navigation={navigation} />\n        ),\n        headerTransparent: true\n      })\n    }\n  },\n  {\n    cardStyle: { backgroundColor: \"#FFFFFF\" },\n    transitionConfig\n  }\n);\n\nconst TripVideoStack = createStackNavigator({\n  TripVideo: {\n    screen: TripVDO,\n    navigationOptions: ({ navigation }) => ({\n      header: (\n        <Header title=\"TripVideo\" navigation={navigation} iconColor={\"#fff\"} titleColor={\"#fff\"} bgColor={\"#20232a\"} />\n      ),\n      headerTransparent: false\n    }),\n\n  }\n}, { cardStyle: { backgroundColor: \"#FFFFFF\" }, transitionConfig })\n\nconst HistoryStack = createStackNavigator({\n  History: {\n    screen: History,\n    navigationOptions: ({ navigation }) => ({\n      header: (\n        <Header title=\"History\" navigation={navigation} noShadow iconColor={\"#fff\"} titleColor={\"#fff\"} bgColor={\"#20232a\"} />\n      ),\n      headerTransparent: false\n    }),\n\n  }\n}, { cardStyle: { backgroundColor: \"#FFFFFF\" }, transitionConfig })\n\nconst DashboardStack = createStackNavigator({\n  Dashboard: {\n    screen: Dashboard,\n    navigationOptions: ({ navigation }) => ({\n      header: (\n        <Header title=\"Dashboard\" navigation={navigation} iconColor={\"#fff\"} titleColor={\"#fff\"} bgColor={\"#20232a\"} />\n      ),\n      headerTransparent: false\n    }),\n\n  }\n}, { cardStyle: { backgroundColor: \"#FFFFFF\" }, transitionConfig })\n\nconst HomeStack = createStackNavigator({\n  Home: {\n    screen: Home,\n    navigationOptions: ({ navigation }) => ({\n      header: <Header search options title=\"Home\" navigation={navigation} />\n    })\n  }\n},\n  {\n    cardStyle: {\n      backgroundColor: \"#F8F9FE\"\n    },\n    transitionConfig\n  }\n);\n\n// Route for authentication step\nconst LoginScreen = createStackNavigator({\n  Login: {\n    screen: Login,\n    navigationOptions: ({ navigation }) => ({\n      header: <Header navigation={navigation} />\n    })\n  }\n\n})\n\nconst RegisterScreen = createStackNavigator({\n  Register: {\n    screen: Register,\n    navigationOptions: ({ navigation }) => ({\n      header: <Header navigation={navigation} />\n    })\n  }\n})\n\n\nconst UnAuthStack = createDrawerNavigator({\n  Login: {\n    screen: LoginScreen,\n    navigationOptions: navOpt => ({\n      drawerLabel: ({ focused }) => (\n        <DrawerItem focused={focused} screen=\"Login\" title=\"Sign in\" />\n      )\n    })\n  },\n  Register: {\n    screen: RegisterScreen,\n    navigationOptions: navOpt => ({\n      drawerLabel: ({ focused }) => (\n        <DrawerItem focused={focused} screen=\"Register\" title=\"Sign up\" />\n      )\n    })\n  },\n\n}, Menu)\n\n// console.log(AuthStack)\nconst AuthStack = createDrawerNavigator(\n  {\n    Dashboard: {\n      screen: DashboardStack,\n      navigationOptions: navOpt => ({\n        drawerLabel: ({ focused }) => (\n          <DrawerItem focused={focused} screen=\"Dashboard\" title=\"Dashboard\" />\n        )\n      })\n    },\n    Profile: {\n      screen: ProfileStack,\n      navigationOptions: navOpt => ({\n        drawerLabel: ({ focused }) => (\n          <DrawerItem focused={focused} screen=\"Profile\" title=\"Profile\" />\n        )\n      })\n    },\n    TripVideo: {\n      screen: TripVideoStack,\n      navigationOptions: navOpt => ({\n        drawerLabel: ({ focused }) => (\n          <DrawerItem focused={focused} screen=\"TripVideo\" title=\"Trip Video\" />\n        )\n      })\n    },\n    History: {\n      screen: HistoryStack,\n      navigationOptions: navOpt => ({\n        drawerLabel: ({ focused }) => (\n          <DrawerItem focused={focused} screen=\"History\" title=\"History\" />\n        )\n      })\n    },\n\n\n\n\n\n    // Elements: {\n    //   screen: ElementsStack,\n    //   navigationOptions: navOpt => ({\n    //     drawerLabel: ({ focused }) => (\n    //       <DrawerItem focused={focused} screen=\"Elements\" title=\"Elements\" />\n    //     )\n    //   })\n    // },\n    // Articles: {\n    //   screen: ArticlesStack,\n    //   navigationOptions: navOpt => ({\n    //     drawerLabel: ({ focused }) => (\n    //       <DrawerItem focused={focused} screen=\"Articles\" title=\"Articles\" />\n    //     )\n    //   })\n    // },\n\n  },\n  Menu\n);\n\nconst AppSwitch = createSwitchNavigator({\n  UnAuthStack: UnAuthStack,\n  AuthStack: AuthStack\n})\n\nconst AppContainer = createAppContainer(AppSwitch);\nexport default AppContainer;\n"]},"metadata":{},"sourceType":"module"}