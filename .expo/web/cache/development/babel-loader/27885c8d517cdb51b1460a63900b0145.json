{"ast":null,"code":"var _jsxFileName = \"/Users/phakawat/Desktop/drowsy-mobile-app/screens/History.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport * as Calendar from 'expo-calendar';\nimport * as Permissions from 'expo-permissions';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport DatePickerIOS from \"react-native-web/dist/exports/DatePickerIOS\";\nimport { Picker } from \"react-native-picker-dropdown\";\nimport Spinner from \"react-native-loading-spinner-overlay\";\nimport { Block, Text, theme } from \"galio-framework\";\nimport { Button } from \"../components\";\nimport { Images, argonTheme } from \"../constants\";\nimport { HeaderHeight } from \"../constants/utils\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { API_GET_TRIPDATA, API_GET_ALL_TRIPS } from \"../link\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport firebase from \"firebase\";\nimport { config } from \"../firebase-config\";\nimport { Audio } from 'expo-av';\nimport Toast, { DURATION } from 'react-native-easy-toast';\nimport MapView from \"react-native-maps\";\nimport Theme from \"../constants/Theme\";\nvar {\n  height,\n  width\n} = Dimensions.get('screen');\n\nclass History extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchAllTrips = () => {\n      var tripRef = this.databaseRef.child(\"usertrips/\".concat(this.state.userInfo.uid));\n      tripRef.once(\"value\", snapshot => {\n        var acctimes = [];\n        var alltrips = snapshot.val();\n\n        try {\n          Object.keys(alltrips).map(key => {\n            var acctime = alltrips[key].acctime;\n            acctimes.push(acctime);\n          });\n          this.setState({\n            alltrips: acctimes\n          }, () => {});\n        } catch (err) {}\n      });\n    };\n\n    this.toggleDatePicker = handle => {\n      this.setState({\n        showDatepicker: !this.state.showDatepicker,\n        handle\n      });\n    };\n\n    this.fetchTripData = () => {\n      this.setState({\n        isLoading: true\n      });\n      var {\n        userInfo\n      } = this.state;\n      var {\n        token,\n        uid\n      } = userInfo;\n      var payload = {\n        uid: uid,\n        from: \"app\",\n        acctime: this.state.selectedDate\n      };\n      axios.create({\n        headers: {\n          \"Content-Type\": \"application/json\",\n          token: token\n        }\n      }).post(API_GET_TRIPDATA, payload).then(response => {\n        var code = response.data.code;\n\n        if (code === 200) {\n          this.setState({\n            isLoading: false\n          });\n          var triplineCoordinates = [];\n\n          try {\n            Object.keys(response.data.tripdata).map((key, index) => {\n              var latitude = response.data.tripdata[key].latlng[0];\n              var longitude = response.data.tripdata[key].latlng[1];\n              var speed = response.data.tripdata[key].speed;\n              triplineCoordinates.push({\n                latitude: latitude,\n                longitude: longitude,\n                speed\n              });\n            });\n            this.setState({\n              tripData: triplineCoordinates\n            }, () => {\n              this.mapFitToCoordinates();\n            });\n          } catch (err) {}\n        }\n      }).catch(err => {\n        this.setState({\n          isLoading: false\n        });\n        console.log(err);\n      });\n    };\n\n    this.mapFitToCoordinates = () => {\n      this.mapRef.current.fitToCoordinates(this.state.tripData, {\n        animated: true,\n        edgePadding: {\n          top: 70,\n          bottom: 70,\n          right: 70,\n          left: 70\n        }\n      });\n    };\n\n    this.searchTrips = () => {\n      var {\n        alltrips,\n        startdate,\n        stopdate\n      } = this.state;\n      startdate = moment(startdate).format(\"YYYY-MM-DD\");\n      stopdate = moment(stopdate).format(\"YYYY-MM-DD\");\n      var inBetween = alltrips.filter(date => {\n        date = moment.unix(date).format(\"YYYY-MM-DD HH:MM:ss\").toString();\n        return moment(date.split(\" \")[0]).isBetween(startdate, stopdate, null, \"[]\");\n      });\n      this.setState({\n        intersectDate: inBetween,\n        selectedDate: inBetween.length == 0 ? null : inBetween[0],\n        tripData: []\n      }, () => {\n        if (inBetween.length > 0) {\n          this.setState({\n            toastBG: argonTheme.COLORS.SUCCESS\n          }, () => {\n            this.toastRef.current.show(\"\".concat(inBetween.length, \" trip(s) found in this interval\"), 1500);\n          });\n        } else {\n          this.setState({\n            toastBG: argonTheme.COLORS.ERROR\n          }, () => {\n            this.toastRef.current.show(\"No trip found in this interval\", 1500);\n          });\n        }\n      });\n    };\n\n    this.dateChangeHandler = (evt, handle) => {\n      switch (handle) {\n        case \"start\":\n          return this.setState({\n            startdate: evt\n          });\n\n        case \"stop\":\n          var isAfter = moment(evt).isAfter(moment(this.state.startdate));\n          if (!isAfter) return this.setState({\n            startdate: evt,\n            stopdate: evt\n          });\n          return this.setState({\n            stopdate: evt\n          });\n      }\n    };\n\n    this.state = {\n      isLoading: false,\n      tripData: [],\n      selectedDate: null,\n      alltrips: [],\n      startdate: new Date(),\n      stopdate: new Date(),\n      showDatepicker: false,\n      handle: \"start\",\n      userInfo: this.props.screenProps.getUserInfo(),\n      intersectDate: []\n    };\n\n    try {\n      firebase.initializeApp(config);\n    } catch (err) {}\n\n    this.mapRef = React.createRef();\n    this.toastRef = React.createRef();\n    this.databaseRef = firebase.database().ref();\n  }\n\n  componentDidMount() {\n    this.focusListener = this.props.navigation.addListener(\"didFocus\", () => {\n      this.fetchAllTrips();\n    });\n  }\n\n  render() {\n    var DatepickerModalIOS = () => {\n      var {\n        showDatepicker,\n        handle\n      } = this.state;\n      return React.createElement(Modal, {\n        style: _objectSpread({}, styles.datepickerModal),\n        visible: showDatepicker,\n        transparent: true,\n        animated: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        }\n      }, React.createElement(TouchableOpacity, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        }\n      }, React.createElement(Block, {\n        style: {\n          backgroundColor: \"rgba(0,0,0,0.8)\",\n          height: height,\n          width: width\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        }\n      }, React.createElement(Block, {\n        style: {\n          marginTop: \"50%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        }\n      }, React.createElement(Block, {\n        middle: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        }\n      }, React.createElement(Text, {\n        h4: true,\n        color: \"white\",\n        bold: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        }\n      }, \"SELECT \", handle.toUpperCase(), \" DATE\")), React.createElement(DatePickerIOS, {\n        mode: \"date\",\n        style: {\n          padding: theme.SIZES.BASE\n        },\n        date: handle == \"start\" ? this.state.startdate : this.state.stopdate,\n        onDateChange: evt => {\n          this.dateChangeHandler(evt, handle);\n        },\n        maximumDate: new Date(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        }\n      }), React.createElement(Block, {\n        middle: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        }\n      }, React.createElement(Button, {\n        onPress: () => {\n          this.toggleDatePicker(handle);\n        },\n        style: {\n          backgroundColor: argonTheme.COLORS.SUCCESS,\n          paddingHorizontal: 0,\n          paddingVertical: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        }\n      }, \"Confirm\"))))));\n    };\n\n    var TripPicker = () => {\n      if (this.state.intersectDate.length > 0) {\n        return React.createElement(Block, {\n          style: {\n            padding: theme.SIZES.BASE\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          }\n        }, React.createElement(Text, {\n          bold: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          }\n        }, \"Select a trip\"), React.createElement(Picker, {\n          style: {\n            padding: 5\n          },\n          selectedValue: this.state.selectedDate,\n          onValueChange: (itemValue, itemIndex) => {\n            this.setState({\n              selectedDate: itemValue\n            }, () => {\n              this.fetchTripData();\n            });\n          },\n          color: \"black\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238\n          }\n        }, this.state.intersectDate.map((date, index) => {\n          var label = \"Trip: \" + moment.unix(date).format(\"YYYY-MM-DD HH:mm:ss\").toString();\n          return React.createElement(Picker.Item, {\n            label: label,\n            value: date,\n            key: \"date-option-\".concat(index),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 254\n            }\n          });\n        })));\n      }\n    };\n\n    var renderMarker = index => {\n      var {\n        tripData\n      } = this.state;\n      var length = tripData.length;\n\n      if (this.state.tripData.length > 0) {\n        return React.createElement(MapView.Marker, {\n          coordinate: this.state.tripData[index],\n          title: index === 0 ? \"Trip start\" : index === length - 1 ? \"Trip stop\" : null,\n          description: \"Date time: 21-11-2019 06:39:43 pm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269\n          }\n        }, index === 0 ? React.createElement(Image, {\n          source: Images.start,\n          style: _objectSpread({}, styles.markerStyle),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276\n          }\n        }) : index === length - 1 ? React.createElement(Image, {\n          source: Images.stop,\n          style: _objectSpread({}, styles.markerStyle, {}, styles.stopMarker),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279\n          }\n        }) : null);\n      }\n    };\n\n    var renderTripline = () => {\n      var {\n        tripData\n      } = this.state;\n      return tripData.map((data, index) => {\n        var current = data;\n        var coor = [current];\n        var speed = current.speed;\n        var next = null;\n\n        if (index + 1 <= tripData.length - 1) {\n          next = tripData[index + 1];\n          speed = next.speed;\n          coor.push(next);\n        }\n\n        console.log(coor);\n        return React.createElement(MapView.Polyline, {\n          key: \"polyline-\".concat(index),\n          coordinates: coor,\n          strokeWidth: 6,\n          strokeColor: speed <= 50 ? \"green\" : speed > 50 && speed <= 80 ? \"orange\" : speed > 80 ? \"red\" : null,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301\n          }\n        });\n      });\n    };\n\n    return React.createElement(Block, {\n      flex: true,\n      style: _objectSpread({}, styles.container),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      }\n    }, React.createElement(Spinner, {\n      visible: this.state.isLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      }\n    }), React.createElement(Toast, {\n      ref: this.toastRef,\n      defaultCloseDelay: 1000,\n      style: {\n        backgroundColor: this.state.toastBG\n      },\n      position: \"top\",\n      positionValue: 20,\n      opacity: 0.9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      }\n    }), DatepickerModalIOS(), React.createElement(Block, {\n      style: _objectSpread({}, styles.datepickerContainer),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      }\n    }, React.createElement(Block, {\n      style: _objectSpread({}, styles.datepicker),\n      middle: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: () => this.toggleDatePicker(\"start\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      }\n    }, React.createElement(Text, {\n      color: argonTheme.COLORS,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      }\n    }, React.createElement(Text, {\n      bold: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      }\n    }, \"Start Date:\", \" \"), moment(this.state.startdate).format(\"DD-MM-YYYY\").toString())), React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      }\n    }, \" \"), React.createElement(TouchableOpacity, {\n      onPress: () => this.toggleDatePicker(\"stop\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      }\n    }, React.createElement(Text, {\n      color: argonTheme.COLORS,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      }\n    }, React.createElement(Text, {\n      bold: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      }\n    }, \"Stop Date:\", \" \"), moment(this.state.stopdate).format(\"DD-MM-YYYY\").toString())), React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      }\n    }, \" \"), React.createElement(Button, {\n      onPress: this.searchTrips,\n      small: true,\n      style: {\n        backgroundColor: argonTheme.COLORS.SUCCESS\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      }\n    }, \"Search\")), TripPicker()), React.createElement(MapView, {\n      ref: this.mapRef,\n      style: _objectSpread({}, styles.mapStyle),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      }\n    }, renderTripline(), renderMarker(0), renderMarker(this.state.tripData.length - 1)));\n  }\n\n}\n\nvar styles = StyleSheet.create({\n  markerStyle: {\n    width: 52.5,\n    height: 45\n  },\n  stopMarker: {\n    marginTop: -25,\n    marginLeft: 40\n  },\n  datepickerModal: {\n    backgroundColor: \"black\",\n    opacity: 0,\n    height: 0.5 * height\n  },\n  datepicker: {\n    padding: theme.SIZES.BASE,\n    flexDirection: \"row\"\n  },\n  datepickerContainer: {\n    backgroundColor: \"#FFFFFF\"\n  },\n  topInfo: {\n    paddingVertical: \"10%\"\n  },\n  mapHeader: {\n    maxHeight: 0.1 * height,\n    height: 0.1 * height\n  },\n  mapStyle: {\n    height: 0.825 * height,\n    width: width\n  },\n  profileCard: {\n    padding: theme.SIZES.BASE,\n    marginHorizontal: theme.SIZES.BASE,\n    marginTop: 65,\n    borderTopLeftRadius: 6,\n    borderTopRightRadius: 6,\n    backgroundColor: theme.COLORS.WHITE,\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowRadius: 8,\n    shadowOpacity: 0.2,\n    zIndex: 2\n  },\n  container: {\n    backgroundColor: argonTheme.COLORS.DEFAULT,\n    marginTop: Platform.OS === 'android' ? -HeaderHeight : 0\n  },\n  padded: {\n    paddingHorizontal: theme.SIZES.BASE * 2,\n    zIndex: 3,\n    position: 'absolute',\n    bottom: Platform.OS === 'android' ? theme.SIZES.BASE * 2 : theme.SIZES.BASE * 3\n  },\n  button: {\n    width: width,\n    height: 0.1 * height,\n    shadowRadius: 0,\n    shadowOpacity: 0\n  },\n  pro: {\n    backgroundColor: argonTheme.COLORS.INFO,\n    paddingHorizontal: 8,\n    marginLeft: 3,\n    borderRadius: 4,\n    height: 22,\n    marginTop: 15\n  },\n  gradient: {\n    zIndex: 1,\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    height: 66\n  }\n});\nexport default History;","map":{"version":3,"sources":["/Users/phakawat/Desktop/drowsy-mobile-app/screens/History.js"],"names":["React","Calendar","Permissions","Picker","Spinner","Block","Text","theme","Button","Images","argonTheme","HeaderHeight","API_GET_TRIPDATA","API_GET_ALL_TRIPS","axios","moment","firebase","config","Audio","Toast","DURATION","MapView","Theme","height","width","Dimensions","get","History","Component","constructor","props","fetchAllTrips","tripRef","databaseRef","child","state","userInfo","uid","once","snapshot","acctimes","alltrips","val","Object","keys","map","key","acctime","push","setState","err","toggleDatePicker","handle","showDatepicker","fetchTripData","isLoading","token","payload","from","selectedDate","create","headers","post","then","response","code","data","triplineCoordinates","tripdata","index","latitude","latlng","longitude","speed","tripData","mapFitToCoordinates","catch","console","log","mapRef","current","fitToCoordinates","animated","edgePadding","top","bottom","right","left","searchTrips","startdate","stopdate","format","inBetween","filter","date","unix","toString","split","isBetween","intersectDate","length","toastBG","COLORS","SUCCESS","toastRef","show","ERROR","dateChangeHandler","evt","isAfter","Date","screenProps","getUserInfo","initializeApp","createRef","database","ref","componentDidMount","focusListener","navigation","addListener","render","DatepickerModalIOS","styles","datepickerModal","backgroundColor","marginTop","toUpperCase","padding","SIZES","BASE","paddingHorizontal","paddingVertical","TripPicker","itemValue","itemIndex","label","renderMarker","start","markerStyle","stop","stopMarker","renderTripline","coor","next","container","datepickerContainer","datepicker","mapStyle","StyleSheet","marginLeft","opacity","flexDirection","topInfo","mapHeader","maxHeight","profileCard","marginHorizontal","borderTopLeftRadius","borderTopRightRadius","WHITE","shadowColor","shadowOffset","shadowRadius","shadowOpacity","zIndex","DEFAULT","Platform","OS","padded","position","button","pro","INFO","borderRadius","gradient"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport * as Calendar from 'expo-calendar';\nimport * as Permissions from 'expo-permissions';\nimport {\n    Animated,\n    StyleSheet,\n    Dimensions,\n    ScrollView,\n    Image,\n    ImageBackground,\n    Platform,\n    View,\n    Modal,\n    FlatList,\n    BackHandler,\n    TouchableOpacity,\n    DatePickerIOS,\n\n} from \"react-native\";\nimport { Picker } from \"react-native-picker-dropdown\"\nimport Spinner from \"react-native-loading-spinner-overlay\"\nimport { Block, Text, theme } from \"galio-framework\";\nimport { Button } from \"../components\";\nimport { Images, argonTheme } from \"../constants\";\nimport { HeaderHeight } from \"../constants/utils\";\nimport { AsyncStorage } from \"react-native\";\nimport { API_GET_TRIPDATA, API_GET_ALL_TRIPS } from \"../link\"\nimport axios from \"axios\"\nimport moment from \"moment\"\nimport firebase from \"firebase\"\nimport { config } from \"../firebase-config\"\nimport { Audio } from 'expo-av';\nimport Toast, { DURATION } from 'react-native-easy-toast'\nimport MapView from \"react-native-maps\";\nimport Theme from \"../constants/Theme\";\nconst { height, width } = Dimensions.get('screen');\nclass History extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLoading: false,\n            tripData: [],\n            selectedDate: null,\n            alltrips: [],\n            startdate: new Date(),\n            stopdate: new Date(),\n            showDatepicker: false,\n            handle: \"start\",\n            userInfo: this.props.screenProps.getUserInfo(),\n            intersectDate: []\n        }\n        try {\n            firebase.initializeApp(config)\n        } catch (err) { }\n        this.mapRef = React.createRef()\n        this.toastRef = React.createRef()\n        this.databaseRef = firebase.database().ref()\n\n    }\n\n    componentDidMount() {\n        this.focusListener = this.props.navigation.addListener(\"didFocus\", () => {\n            this.fetchAllTrips()\n        })\n    }\n\n    // newTripListener = () => {\n    //     let tripRef = this.databaseRef.child(`usertrips/${this.state.userInfo.uid}`)\n    //     tripRef.on(\"child_added\", snapshot => {\n    //         let { alltrips } = this.state\n    //         alltrips.push(snapshot)\n    //         this.setState({ alltrips })\n    //     })\n    // }\n\n    fetchAllTrips = () => {\n        let tripRef = this.databaseRef.child(`usertrips/${this.state.userInfo.uid}`)\n        tripRef.once(\"value\", snapshot => {\n            let acctimes = []\n            let alltrips = snapshot.val()\n            try {\n                Object.keys(alltrips).map(key => {\n                    let acctime = alltrips[key].acctime\n                    acctimes.push(acctime)\n                })\n                this.setState({ alltrips: acctimes }, () => {\n                })\n            } catch (err) { }\n\n        })\n    }\n\n    toggleDatePicker = (handle) => {\n        this.setState({ showDatepicker: !this.state.showDatepicker, handle })\n    }\n\n    fetchTripData = () => {\n        this.setState({ isLoading: true })\n        let { userInfo } = this.state\n        let { token, uid } = userInfo\n        let payload = {\n            uid: uid,\n            from: \"app\",\n            acctime: this.state.selectedDate\n        }\n        axios.create({\n            headers: { \"Content-Type\": \"application/json\", token: token }\n        }).post(API_GET_TRIPDATA, payload).then(response => {\n            let code = response.data.code\n            if (code === 200) {\n                this.setState({ isLoading: false })\n                let triplineCoordinates = []\n                try {\n                    Object.keys(response.data.tripdata).map((key, index) => {\n                        // console.log(index)\n                        let latitude = response.data.tripdata[key].latlng[0]\n                        let longitude = response.data.tripdata[key].latlng[1]\n                        let speed = response.data.tripdata[key].speed\n                        triplineCoordinates.push({\n                            latitude: latitude,\n                            longitude: longitude,\n                            speed\n                        })\n                    })\n                    this.setState({ tripData: triplineCoordinates }, () => {\n                        this.mapFitToCoordinates()\n                    })\n                } catch (err) { }\n            }\n        }).catch(err => {\n            this.setState({ isLoading: false })\n\n            console.log(err)\n        })\n    }\n\n    mapFitToCoordinates = () => {\n        this.mapRef.current.fitToCoordinates(this.state.tripData, {\n            animated: true,\n            edgePadding: {\n                top: 70,\n                bottom: 70,\n                right: 70,\n                left: 70,\n            }\n        })\n    }\n\n    searchTrips = () => {\n        let { alltrips, startdate, stopdate } = this.state\n        startdate = moment(startdate).format(\"YYYY-MM-DD\")\n        stopdate = moment(stopdate).format(\"YYYY-MM-DD\")\n        let inBetween = alltrips.filter(date => {\n            date = moment.unix(date).format(\"YYYY-MM-DD HH:MM:ss\").toString()\n            return moment(date.split(\" \")[0]).isBetween(startdate, stopdate, null, \"[]\")\n        })\n        this.setState({ intersectDate: inBetween, selectedDate: inBetween.length == 0 ? null : inBetween[0], tripData: [] }, () => {\n            if (inBetween.length > 0) {\n                // this.fetchTripData()\n                this.setState({ toastBG: argonTheme.COLORS.SUCCESS }, () => {\n                    this.toastRef.current.show(`${inBetween.length} trip(s) found in this interval`, 1500);\n                })\n            } else {\n                this.setState({ toastBG: argonTheme.COLORS.ERROR }, () => {\n                    this.toastRef.current.show(`No trip found in this interval`, 1500);\n                })\n            }\n        })\n    }\n\n    dateChangeHandler = (evt, handle) => {\n        // console.log(evt)\n        switch (handle) {\n            case \"start\":\n                return this.setState({ startdate: evt });\n            case \"stop\":\n                let isAfter = moment(evt).isAfter(moment(this.state.startdate))\n                if (!isAfter) return this.setState({ startdate: evt, stopdate: evt })\n                return this.setState({ stopdate: evt });\n        }\n    }\n\n    render() {\n\n        const DatepickerModalIOS = () => {\n            const { showDatepicker, handle } = this.state\n            return (\n                <Modal\n                    style={{ ...styles.datepickerModal }}\n                    visible={showDatepicker}\n                    transparent\n                    animated\n                >\n                    <TouchableOpacity>\n                        <Block\n                            style={{ backgroundColor: \"rgba(0,0,0,0.8)\", height: height, width: width }}\n                        >\n                            <Block style={{ marginTop: \"50%\" }}>\n                                <Block middle>\n                                    <Text h4 color={\"white\"} bold>SELECT {handle.toUpperCase()} DATE</Text>\n                                </Block>\n                                <DatePickerIOS\n                                    mode={\"date\"}\n                                    style={{ padding: theme.SIZES.BASE }}\n                                    date={handle == \"start\" ? this.state.startdate : this.state.stopdate}\n                                    onDateChange={(evt) => { this.dateChangeHandler(evt, handle) }}\n                                    maximumDate={new Date()}\n                                >\n                                </DatePickerIOS>\n                                <Block middle>\n                                    <Button\n                                        onPress={() => {\n                                            this.toggleDatePicker(handle)\n                                        }}\n                                        style={{ backgroundColor: argonTheme.COLORS.SUCCESS, paddingHorizontal: 0, paddingVertical: 0 }}\n                                    >\n\n                                        Confirm\n                                    </Button>\n                                </Block>\n                            </Block>\n\n                        </Block>\n\n                        {/* </Block> */}\n                    </TouchableOpacity>\n                </Modal>\n            )\n        }\n        const TripPicker = () => {\n            if (this.state.intersectDate.length > 0) {\n                // console.log(this.state.selectedDate)\n                return (\n                    <Block style={{ padding: theme.SIZES.BASE }} >\n                        <Text bold>\n                            Select a trip\n                        </Text>\n                        <Picker\n                            style={{ padding: 5 }}\n                            selectedValue={this.state.selectedDate}\n                            onValueChange={\n                                (itemValue, itemIndex) => {\n                                    this.setState({ selectedDate: itemValue }, () => {\n                                        this.fetchTripData()\n                                    })\n                                }\n                            }\n                            color={\"black\"}\n                        >\n                            {\n                                this.state.intersectDate.map((date, index) => {\n                                    let label = \"Trip: \" + moment.unix(date).format(\"YYYY-MM-DD HH:mm:ss\").toString()\n                                    return (\n                                        <Picker.Item label={label} value={date} key={`date-option-${index}`} />\n                                    )\n                                })\n                            }\n                        </Picker>\n                    </Block>\n                )\n            }\n        }\n        const renderMarker = (index) => {\n            let { tripData } = this.state\n            let length = tripData.length\n            // let currentPoint = tripData[index]\n            if (this.state.tripData.length > 0) {\n                return (\n                    <MapView.Marker\n                        coordinate={this.state.tripData[index]}\n                        title={index === 0 ? \"Trip start\" : index === length - 1 ? \"Trip stop\" : null}\n                        description={`Date time: 21-11-2019 06:39:43 pm`}\n                    >\n                        {\n                            index === 0 ?\n                                <Image source={Images.start} style={{ ...styles.markerStyle }} />\n\n                                : index === length - 1 ?\n                                    <Image source={Images.stop} style={{ ...styles.markerStyle, ...styles.stopMarker }} />\n                                    : null\n                        }\n                    </MapView.Marker>\n                )\n            }\n        }\n        const renderTripline = () => {\n            let { tripData } = this.state\n            return (\n                tripData.map((data, index) => {\n                    let current = data\n                    let coor = [current]\n                    let speed = current.speed\n                    let next = null\n                    if (index + 1 <= tripData.length - 1) {\n                        next = tripData[index + 1]\n                        speed = next.speed\n                        coor.push(next)\n                    }\n                    console.log(coor)\n                    return (\n                        <MapView.Polyline\n                            key={`polyline-${index}`}\n                            coordinates={coor}\n                            strokeWidth={6}\n                            strokeColor={\n                                speed <= 50 ?\n                                    \"green\"\n                                    : speed > 50 && speed <= 80 ?\n                                        \"orange\"\n                                        : speed > 80 ?\n                                            \"red\"\n                                            : null\n                            }\n                        />\n                    )\n                }))\n        }\n\n\n        return (\n            <Block flex style={{ ...styles.container }}>\n                <Spinner\n                    visible={this.state.isLoading}\n                />\n                <Toast\n                    ref={this.toastRef}\n                    defaultCloseDelay={1000}\n                    style={{ backgroundColor: this.state.toastBG }}\n                    position={\"top\"}\n                    positionValue={20}\n                    opacity={0.9}\n                />\n                {DatepickerModalIOS()}\n                <Block style={{ ...styles.datepickerContainer }}>\n                    <Block style={{ ...styles.datepicker }} middle>\n                        <TouchableOpacity onPress={() => this.toggleDatePicker(\"start\")}>\n                            <Text color={argonTheme.COLORS}>\n                                <Text bold>\n                                    Start Date:{\" \"}\n                                </Text>\n                                {moment(this.state.startdate).format(\"DD-MM-YYYY\").toString()}\n                            </Text>\n                        </TouchableOpacity>\n                        <Text>{\" \"}</Text>\n                        <TouchableOpacity onPress={() => this.toggleDatePicker(\"stop\")}>\n                            <Text color={argonTheme.COLORS}>\n                                <Text bold>\n                                    Stop Date:{\" \"}\n                                </Text>\n                                {moment(this.state.stopdate).format(\"DD-MM-YYYY\").toString()}\n                            </Text>\n                        </TouchableOpacity>\n                        <Text>{\" \"}</Text>\n                        <Button onPress={this.searchTrips} small style={{ backgroundColor: argonTheme.COLORS.SUCCESS }}>\n                            Search\n                        </Button>\n                    </Block>\n                    {TripPicker()}\n                </Block>\n                <MapView\n                    ref={this.mapRef}\n                    style={{ ...styles.mapStyle }}\n                >\n                    {renderTripline()}\n                    {/* RENDER START MARKER */}\n                    {renderMarker(0)}\n                    {/* RENDER STOP MARKER */}\n                    {renderMarker(this.state.tripData.length - 1)}\n                </MapView>\n            </Block>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    markerStyle: {\n        width: 52.5,\n        height: 45,\n    },\n    stopMarker: {\n        marginTop: -25,\n        marginLeft: 40\n    },\n    datepickerModal: {\n        backgroundColor: \"black\",\n        opacity: 0,\n        height: 0.5 * height\n    },\n    datepicker: {\n        padding: theme.SIZES.BASE,\n        flexDirection: \"row\"\n    },\n    datepickerContainer: {\n        backgroundColor: \"#FFFFFF\"\n    },\n    topInfo: {\n        paddingVertical: \"10%\",\n        // color: \"white\"\n    },\n    mapHeader: {\n        maxHeight: 0.1 * height,\n        height: 0.1 * height,\n    },\n    mapStyle: {\n        height: 0.825 * height,\n        width: width\n    },\n    profileCard: {\n        padding: theme.SIZES.BASE,\n        marginHorizontal: theme.SIZES.BASE,\n        marginTop: 65,\n        borderTopLeftRadius: 6,\n        borderTopRightRadius: 6,\n        backgroundColor: theme.COLORS.WHITE,\n        shadowColor: \"black\",\n        shadowOffset: { width: 0, height: 0 },\n        shadowRadius: 8,\n        shadowOpacity: 0.2,\n        zIndex: 2\n    },\n    container: {\n        backgroundColor: argonTheme.COLORS.DEFAULT,\n        marginTop: Platform.OS === 'android' ? -HeaderHeight : 0,\n    },\n    padded: {\n        paddingHorizontal: theme.SIZES.BASE * 2,\n        zIndex: 3,\n        position: 'absolute',\n        bottom: Platform.OS === 'android' ? theme.SIZES.BASE * 2 : theme.SIZES.BASE * 3,\n    },\n    button: {\n        width: width,\n        height: 0.1 * height,\n        shadowRadius: 0,\n        shadowOpacity: 0,\n    },\n    pro: {\n        backgroundColor: argonTheme.COLORS.INFO,\n        paddingHorizontal: 8,\n        marginLeft: 3,\n        borderRadius: 4,\n        height: 22,\n        marginTop: 15\n    },\n    gradient: {\n        zIndex: 1,\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        right: 0,\n        height: 66,\n    },\n});\nexport default History;"]},"metadata":{},"sourceType":"module"}