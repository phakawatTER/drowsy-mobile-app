{"ast":null,"code":"var _jsxFileName = \"/Users/phakawat/Desktop/drowsy-mobile-app/screens/EditProfile.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport React from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { Block, Checkbox, Text, theme } from \"galio-framework\";\nimport { Button, Icon, Input } from \"../components\";\nimport { Images, argonTheme } from \"../constants\";\nimport Spinner from \"react-native-loading-spinner-overlay\";\nimport * as ImagePicker from 'expo-image-picker';\nimport * as Permissions from 'expo-permissions';\nimport * as FileSystem from 'expo-file-system';\nimport { config } from \"../firebase-config\";\nimport firebase from \"firebase\";\nimport moment from \"moment\";\nvar {\n  width,\n  height\n} = Dimensions.get(\"screen\");\nvar imagePickerOptions = {\n  mediaTypes: \"Images\",\n  quality: 1,\n  aspect: [1, 1]\n};\n\nclass EditProfile extends React.Component {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n\n    this.getUserInfo = () => {\n      var {\n        uid,\n        profile,\n        email,\n        fname,\n        lname\n      } = this.props.navigation.getParam(\"userInfo\");\n      this.setState({\n        email,\n        fname,\n        lname,\n        uid,\n        profile,\n        original_profile: profile\n      });\n    };\n\n    this.updateAsyncUserInfoStorage = () => {\n      var {\n        profile,\n        fname,\n        lname\n      } = this.state;\n      AsyncStorage.getItem(\"userInfo\").then(userInfo => {\n        userInfo = JSON.parse(userInfo);\n        userInfo.profile = profile;\n        userInfo.fname = fname;\n        userInfo.lname = lname;\n        console.log(\"this is user info async \", userInfo);\n        AsyncStorage.setItem(\"userInfo\", JSON.stringify(userInfo));\n      });\n    };\n\n    this.getPermissionAsync = _asyncToGenerator(function* () {\n      if (Platform.OS === \"ios\") {\n        var {\n          status\n        } = yield Permissions.askAsync(Permissions.CAMERA_ROLL);\n\n        if (status !== 'granted') {\n          alert('Sorry, we need camera roll permissions to make this work!');\n        }\n      }\n    });\n    this.pickImage = _asyncToGenerator(function* () {\n      var image = yield ImagePicker.launchImageLibraryAsync({\n        mediaTypes: \"Images\",\n        allowsEditing: true,\n        aspect: [4, 3]\n      });\n      console.log(image);\n      var {\n        uri\n      } = image;\n\n      _this.setState({\n        profile: uri\n      });\n    });\n\n    this.updateProfile = () => {\n      var {\n        fname,\n        lname,\n        profile,\n        original_profile,\n        uid\n      } = this.state;\n      var update = this.props.navigation.getParam(\"updateUserInfo\");\n      update(fname, lname, profile);\n\n      if (original_profile !== profile) {\n        this.uploadProfilePic();\n      } else {\n        this.setState({\n          isLoading: true\n        });\n        var userTargetRef = this.userRef.child(uid).update({\n          fname,\n          lname\n        }, err => {\n          this.setState({\n            isLoading: false\n          });\n          this.updateAsyncUserInfoStorage();\n        });\n      }\n    };\n\n    this.uploadProfilePic = _asyncToGenerator(function* () {\n      _this.setState({\n        isLoading: true,\n        isUploading: true\n      });\n\n      var {\n        uid,\n        profile,\n        fname,\n        lname\n      } = _this.state;\n      var response = yield fetch(profile);\n      var blob = yield response.blob();\n      var storageRef = firebase.storage().ref().child(\"/profilepic/\".concat(uid, \"/\").concat(uid, \"-\").concat(moment.unix()));\n      var task = storageRef.put(blob);\n      task.on(\"state_changed\", snapshot => {\n        var uploadingPercentage = (snapshot.bytesTransferred / snapshot.totalBytes * 100).toFixed(2);\n\n        _this.setState({\n          uploadingPercentage\n        });\n\n        console.log(\"THIS IS PERCENTAGE:\" + percentage);\n      }, err => {\n        _this.setState({\n          isLoading: false,\n          isUploading: false,\n          uploadingPercentage: 0\n        });\n\n        console.log(err);\n      }, () => {\n        task.snapshot.ref.getDownloadURL().then(URL => {\n          var userTargetRef = _this.userRef.child(uid).update({\n            fname,\n            lname,\n            profile: URL\n          }, err => {\n            _this.setState({\n              isLoading: false,\n              isUploading: false,\n              uploadingPercentage: 0\n            });\n\n            _this.updateAsyncUserInfoStorage();\n          });\n        });\n      });\n    });\n\n    this.onChangeHandler = (handle, text) => {\n      this.setState({\n        [handle]: text\n      });\n    };\n\n    this.state = {\n      isUploading: false,\n      uploadingPercentage: 0,\n      isLoading: true,\n      fname: \"\",\n      lname: \"\",\n      email: \"\",\n      profile: \"\"\n    };\n\n    try {\n      firebase.initializeApp(config);\n    } catch (err) {}\n\n    this.userRef = firebase.database().ref().child(\"user\");\n  }\n\n  componentDidMount() {\n    this.getUserInfo();\n    this.getPermissionAsync();\n  }\n\n  render() {\n    var {\n      isUploading,\n      uploadingPercentage,\n      profile,\n      email,\n      fname,\n      lname\n    } = this.state;\n    console.log(profile);\n    return React.createElement(Block, {\n      flex: true,\n      middle: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      }\n    }, React.createElement(Spinner, {\n      visible: this.state.isLoading,\n      textStyle: styles.spinnerTextStyle,\n      textContent: isUploading ? \"\".concat(uploadingPercentage, \"%\") : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      }\n    }), React.createElement(Block, {\n      flex: true,\n      style: styles.registerContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      }\n    }, React.createElement(Block, {\n      middle: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      }\n    }, React.createElement(Text, {\n      bold: true,\n      size: 28,\n      color: \"#32325D\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      }\n    }, \"Your Info\")), React.createElement(Block, {\n      style: _objectSpread({}, styles.profileUploader),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      }\n    }, React.createElement(Block, {\n      middle: true,\n      style: styles.avatarContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      }\n    }, React.createElement(TouchableHighlight, {\n      onPress: () => {\n        this.pickImage();\n      },\n      underlayColor: \"rgba(0,0,0,0)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      }\n    }, React.createElement(Image, {\n      onLoad: () => {\n        this.setState({\n          isLoading: false\n        });\n      },\n      source: profile ? {\n        uri: profile\n      } : Images.defaultAvatar,\n      style: styles.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      }\n    })))), React.createElement(Block, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      }\n    }, \"Email\"), React.createElement(Input, {\n      editable: false,\n      value: email,\n      onChangeText: text => this.onChangeHandler(\"email\", text),\n      family: \"ArgonExtra\",\n      style: styles.inputIcons,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      }\n    })), React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      }\n    }, \"Firstname\"), React.createElement(Block, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      }\n    }, React.createElement(Input, {\n      value: fname,\n      onChangeText: text => this.onChangeHandler(\"fname\", text),\n      family: \"ArgonExtra\",\n      style: styles.inputIcons,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      }\n    })), React.createElement(Block, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      }\n    }, \"Lastname\"), React.createElement(Input, {\n      value: lname,\n      onChangeText: text => this.onChangeHandler(\"lname\", text),\n      family: \"ArgonExtra\",\n      style: styles.inputIcons,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      }\n    })), React.createElement(Block, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      }\n    }, React.createElement(Button, {\n      onPress: () => {\n        this.updateProfile();\n      },\n      style: {\n        backgroundColor: \"#20232a\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      }\n    }, \"Save\"))));\n  }\n\n}\n\nvar styles = StyleSheet.create({\n  spinnerTextStyle: {\n    color: \"#fff\"\n  },\n  profileUploader: {\n    position: \"relative\"\n  },\n  profileCard: {\n    padding: theme.SIZES.BASE,\n    marginHorizontal: theme.SIZES.BASE,\n    borderTopLeftRadius: 6,\n    borderTopRightRadius: 6,\n    backgroundColor: theme.COLORS.WHITE,\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowRadius: 8,\n    shadowOpacity: 0.2,\n    minHeight: \"100%\",\n    zIndex: 2\n  },\n  avatar: {\n    width: 150,\n    height: 150,\n    borderRadius: 75\n  },\n  registerContainer: {\n    width: width * 0.9,\n    height: height * 0.78,\n    marginTop: \"25%\",\n    borderRadius: 4,\n    shadowColor: argonTheme.COLORS.BLACK,\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowRadius: 8,\n    shadowOpacity: 0.1,\n    elevation: 1,\n    overflow: \"hidden\"\n  },\n  socialConnect: {\n    fontWeight: \"bold\"\n  },\n  socialButtons: {\n    width: 120,\n    height: 40,\n    backgroundColor: \"#fff\",\n    shadowColor: argonTheme.COLORS.BLACK,\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowRadius: 8,\n    shadowOpacity: 0.1,\n    elevation: 1\n  },\n  socialTextButtons: {\n    color: argonTheme.COLORS.PRIMARY,\n    fontWeight: \"800\",\n    fontSize: 14\n  },\n  inputIcons: {\n    marginRight: 12\n  },\n  passwordCheck: {\n    paddingLeft: 15,\n    paddingTop: 13,\n    paddingBottom: 30\n  },\n  createButton: {\n    width: width * 0.5,\n    marginTop: 25\n  }\n});\nexport default EditProfile;","map":{"version":3,"sources":["/Users/phakawat/Desktop/drowsy-mobile-app/screens/EditProfile.js"],"names":["React","Block","Checkbox","Text","theme","Button","Icon","Input","Images","argonTheme","Spinner","ImagePicker","Permissions","FileSystem","config","firebase","moment","width","height","Dimensions","get","imagePickerOptions","mediaTypes","quality","aspect","EditProfile","Component","constructor","props","getUserInfo","uid","profile","email","fname","lname","navigation","getParam","setState","original_profile","updateAsyncUserInfoStorage","state","AsyncStorage","getItem","then","userInfo","JSON","parse","console","log","setItem","stringify","getPermissionAsync","Platform","OS","status","askAsync","CAMERA_ROLL","alert","pickImage","image","launchImageLibraryAsync","allowsEditing","uri","updateProfile","update","uploadProfilePic","isLoading","userTargetRef","userRef","child","err","isUploading","response","fetch","blob","storageRef","storage","ref","unix","task","put","on","snapshot","uploadingPercentage","bytesTransferred","totalBytes","toFixed","percentage","getDownloadURL","URL","onChangeHandler","handle","text","initializeApp","database","componentDidMount","render","styles","spinnerTextStyle","registerContainer","profileUploader","avatarContainer","defaultAvatar","avatar","inputIcons","backgroundColor","StyleSheet","create","color","position","profileCard","padding","SIZES","BASE","marginHorizontal","borderTopLeftRadius","borderTopRightRadius","COLORS","WHITE","shadowColor","shadowOffset","shadowRadius","shadowOpacity","minHeight","zIndex","borderRadius","marginTop","BLACK","elevation","overflow","socialConnect","fontWeight","socialButtons","socialTextButtons","PRIMARY","fontSize","marginRight","passwordCheck","paddingLeft","paddingTop","paddingBottom","createButton"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n    ScrollView,\n    StyleSheet,\n    Dimensions,\n    KeyboardAvoidingView,\n    TouchableHighlight,\n    Image,\n    Platform,\n    AsyncStorage\n} from \"react-native\";\nimport { Block, Checkbox, Text, theme } from \"galio-framework\";\nimport { Button, Icon, Input } from \"../components\";\nimport { Images, argonTheme } from \"../constants\";\nimport Spinner from \"react-native-loading-spinner-overlay\"\nimport * as ImagePicker from 'expo-image-picker';\nimport * as Permissions from 'expo-permissions'\nimport * as FileSystem from 'expo-file-system';\nimport { config } from \"../firebase-config\"\nimport firebase from \"firebase\";\nimport moment from \"moment\";\nconst { width, height } = Dimensions.get(\"screen\");\nconst imagePickerOptions = {\n    mediaTypes: \"Images\",\n    quality: 1,\n    aspect: [1, 1]\n}\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isUploading: false,\n            uploadingPercentage: 0,\n            isLoading: true,\n            fname: \"\",\n            lname: \"\",\n            email: \"\",\n            profile: \"\"\n        }\n        try {\n            firebase.initializeApp(config)\n        } catch (err) { }\n        this.userRef = firebase.database().ref().child(\"user\")\n\n    }\n\n    getUserInfo = () => {\n        let {\n            uid,\n            profile,\n            email,\n            fname,\n            lname\n        } = this.props.navigation.getParam(\"userInfo\")\n        this.setState({ email, fname, lname, uid, profile, original_profile: profile })\n    }\n\n    componentDidMount() {\n        this.getUserInfo()\n        this.getPermissionAsync()\n    }\n\n    // UPDATE ASYNC STORAGE\n    updateAsyncUserInfoStorage = () => {\n        let { profile, fname, lname } = this.state\n        AsyncStorage.getItem(\"userInfo\").then(userInfo => {\n            userInfo = JSON.parse(userInfo)\n            userInfo.profile = profile\n            userInfo.fname = fname\n            userInfo.lname = lname\n            console.log(\"this is user info async \", userInfo)\n            AsyncStorage.setItem(\"userInfo\", JSON.stringify(userInfo))\n        })\n    }\n\n    getPermissionAsync = async () => {\n        if (Platform.OS === \"ios\") {\n            const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\n            if (status !== 'granted') {\n                alert('Sorry, we need camera roll permissions to make this work!');\n            }\n        }\n    }\n\n    pickImage = async () => {\n        let image = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: \"Images\",\n            allowsEditing: true,\n            aspect: [4, 3],\n        })\n        console.log(image)\n        let { uri } = image\n        this.setState({ profile: uri })\n    }\n\n    updateProfile = () => {\n        let { fname, lname, profile, original_profile, uid } = this.state\n        const update = this.props.navigation.getParam(\"updateUserInfo\")\n        update(fname, lname, profile)\n        if (original_profile !== profile) {\n            this.uploadProfilePic()\n        } else {\n            this.setState({ isLoading: true })\n            let userTargetRef = this.userRef.child(uid).update({\n                fname,\n                lname,\n            }, err => {\n                // if (err) alert(\"Failed to update your profile information\")\n                // else alert(\"Successfully update your profile information\")\n                this.setState({ isLoading: false })\n                this.updateAsyncUserInfoStorage()\n\n\n            })\n        }\n    }\n\n    uploadProfilePic = async () => {\n        this.setState({ isLoading: true, isUploading: true })\n        let { uid, profile, fname, lname } = this.state\n        let response = await fetch(profile)\n        let blob = await response.blob()\n        let storageRef = firebase.storage().ref().child(`/profilepic/${uid}/${uid}-${moment.unix()}`)\n        let task = storageRef.put(blob)\n        task.on(\"state_changed\", snapshot => {\n            let uploadingPercentage = ((snapshot.bytesTransferred / snapshot.totalBytes) * 100).toFixed(2)\n            this.setState({ uploadingPercentage })\n            console.log(\"THIS IS PERCENTAGE:\" + percentage)\n        }, err => {\n            this.setState({ isLoading: false, isUploading: false, uploadingPercentage: 0 })\n            console.log(err)\n        }, () => {\n            task.snapshot.ref.getDownloadURL().then(URL => {\n                let userTargetRef = this.userRef.child(uid).update({\n                    fname,\n                    lname,\n                    profile: URL\n                }, err => {\n                    this.setState({ isLoading: false, isUploading: false, uploadingPercentage: 0 })\n                    this.updateAsyncUserInfoStorage()\n\n\n                })\n            })\n\n        })\n    }\n\n    onChangeHandler = (handle, text) => {\n        this.setState({\n            [handle]: text\n        })\n    }\n\n    render() {\n        let {\n            isUploading,\n            uploadingPercentage,\n            profile,\n            email,\n            fname,\n            lname\n        } = this.state\n        console.log(profile)\n        return (\n            <Block flex middle>\n                <Spinner\n                    visible={this.state.isLoading}\n                    textStyle={styles.spinnerTextStyle}\n                    textContent={isUploading ? `${uploadingPercentage}%` : null}\n                />\n                <Block flex style={styles.registerContainer}>\n                    <Block middle>\n                        <Text bold size={28} color=\"#32325D\">\n                            Your Info\n                                    </Text>\n                    </Block>\n                    <Block style={{ ...styles.profileUploader }}>\n                        <Block middle style={styles.avatarContainer}>\n                            <TouchableHighlight onPress={() => { this.pickImage() }} underlayColor={\"rgba(0,0,0,0)\"}>\n                                <Image\n                                    onLoad={() => { this.setState({ isLoading: false }) }}\n                                    source={profile ? { uri: profile } : Images.defaultAvatar}\n                                    style={styles.avatar}\n                                />\n                            </TouchableHighlight>\n                        </Block>\n                    </Block>\n                    <Block>\n                        <Text>Email</Text>\n                        <Input\n                            editable={false}\n                            value={email}\n                            onChangeText={(text) => this.onChangeHandler(\"email\", text)}\n                            family=\"ArgonExtra\"\n                            style={styles.inputIcons}\n                        />\n                    </Block>\n                    <Text>Firstname</Text>\n\n                    <Block>\n                        <Input\n                            // editable={false}\n                            value={fname}\n                            onChangeText={(text) => this.onChangeHandler(\"fname\", text)}\n                            family=\"ArgonExtra\"\n                            style={styles.inputIcons}\n                        />\n                    </Block>\n                    <Block>\n                        <Text>Lastname</Text>\n\n                        <Input\n                            // editable={false}\n                            value={lname}\n                            onChangeText={(text) => this.onChangeHandler(\"lname\", text)}\n                            family=\"ArgonExtra\"\n                            style={styles.inputIcons}\n                        />\n                    </Block>\n                    <Block>\n                        <Button onPress={() => { this.updateProfile() }} style={{ backgroundColor: \"#20232a\" }}>Save</Button>\n                    </Block>\n                </Block>\n            </Block>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    spinnerTextStyle: {\n        color: \"#fff\"\n    },\n    profileUploader: {\n        position: \"relative\"\n    },\n    profileCard: {\n        padding: theme.SIZES.BASE,\n        marginHorizontal: theme.SIZES.BASE,\n        // marginTop: 80,\n        borderTopLeftRadius: 6,\n        borderTopRightRadius: 6,\n        backgroundColor: theme.COLORS.WHITE,\n        shadowColor: \"black\",\n        shadowOffset: { width: 0, height: 0 },\n        shadowRadius: 8,\n        shadowOpacity: 0.2,\n        minHeight: \"100%\",\n        zIndex: 2\n    },\n    avatar: {\n        width: 150,\n        height: 150,\n        borderRadius: 75\n    },\n    registerContainer: {\n        width: width * 0.9,\n        height: height * 0.78,\n        marginTop: \"25%\",\n        // backgroundColor: \"#F4F5F7\",\n        borderRadius: 4,\n        shadowColor: argonTheme.COLORS.BLACK,\n        shadowOffset: {\n            width: 0,\n            height: 4\n        },\n        shadowRadius: 8,\n        shadowOpacity: 0.1,\n        elevation: 1,\n        overflow: \"hidden\"\n    },\n    socialConnect: {\n        fontWeight: \"bold\"\n        // backgroundColor: argonTheme.COLORS.WHITE,\n        // borderBottomWidth: StyleSheet.hairlineWidth,\n        // borderColor: \"#8898AA\"\n    },\n    socialButtons: {\n        width: 120,\n        height: 40,\n        backgroundColor: \"#fff\",\n        shadowColor: argonTheme.COLORS.BLACK,\n        shadowOffset: {\n            width: 0,\n            height: 4\n        },\n        shadowRadius: 8,\n        shadowOpacity: 0.1,\n        elevation: 1\n    },\n    socialTextButtons: {\n        color: argonTheme.COLORS.PRIMARY,\n        fontWeight: \"800\",\n        fontSize: 14\n    },\n    inputIcons: {\n        marginRight: 12\n    },\n    passwordCheck: {\n        paddingLeft: 15,\n        paddingTop: 13,\n        paddingBottom: 30\n    },\n    createButton: {\n        width: width * 0.5,\n        marginTop: 25\n    }\n});\n\nexport default EditProfile;\n"]},"metadata":{},"sourceType":"module"}